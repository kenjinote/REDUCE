(setq infocalculate (QUOTE (THIS IS the program Calculate in
 Codemist Standard Lisp to be run under Windows 98 and Linux!.
It performs arbitrary algebraic calculations requested by the user!.
This program uses most of the functions existing
 in the program Ortocartan, and so it can be used only if Ortocartan
 had been read by Lisp before!.
In order to create a working overlay, this program should either be
made into a new overlay on top of Ortocartan or read into the
Ortocartan overlay during each session!.)))

(de CALCINIT (L) (PROG (V MEM GLS)
    (TURNCAR)
    (MESSAGE (CAR L) T)
    (TURNCAR)
    (MAPC (CDR L) (FUNCTION (LAMBDA (LE) (SELECT (CAR LE)
       ((QUOTE COORDINATES)   (SETQ COORD (CDR LE)))
       ((QUOTE FUNCTIONS)   (SETQ FUNCTIONS (CDR LE)))
       ((QUOTE CONSTANTS)   (SETQ CONSTANTS (CDR LE)))
       ((QUOTE OPERATION)   (SETQ WORKARR (CONS (CDR LE) WORKARR)))
       ((QUOTE SYMBOLS)   (SETQ METSUBS (CDR LE)))
       ((QUOTE SUBSTITUTIONS)   (SETQ SIMPLSUBS (CDR LE)))
       ((QUOTE DONT)   (SETQ NOPRINT (CDDR LE)))
       ((QUOTE DATA)   (SETQ DATASUBS (CDDR LE)))
       ((QUOTE EXPAND)   (PROG2 (SETQ LPOWER (CADDDR LE))
                                (SETQ UPOWER (CADR (CDDDDR LE)))))
       ((QUOTE MARKERS)   (SETQ MARKERS (CDR LE)))
       ((QUOTE LMARGIN)   (SETQ LMARGIN (CADR LE)))
       ((QUOTE RMARGIN)   (SETQ RMARGIN (CADR LE)))
       ((QUOTE OUTPUT)   (COND
           ((EQUAL LE (QUOTE (OUTPUT FOR INPUT)))
                                            (SETQ OUTINP (QUOTE INPUT)))
           ((EQUAL LE (QUOTE (OUTPUT FOR LATEX)))
                                            (SETQ OUTINP (QUOTE LATEX)))
           (T          (ERROR (LIST (QUOTE "*****///") LE (QUOTE "///*****")
                                    (QUOTE "IS AN ILLEGAL ARGUMENT")
                                    (QUOTE "FOR OUR SYSTEM.")
                                    (QUOTE "SORRY, CAN'T GO ON."))) )))
       (ERROR (LIST (QUOTE "*****///") LE (QUOTE "///*****")
                         (QUOTE "IS AN ILLEGAL ARGUMENT")
                         (QUOTE "FOR OUR SYSTEM.")
                         (QUOTE "SORRY, CAN'T GO ON."))) ) )))
    (AND (GREATERP RMARGIN 72) (LINELENGTH RMARGIN))
    (SETQ WORKARR (REVERSIP WORKARR))
    (SETQ N 0)
    (SETQ LIND (CONS N NIL))
    (MAPC WORKARR (FUNCTION (LAMBDA (ME) (SETQ LIND (CONS
          (SETQ N (ADD1 N)) LIND)) )))
    (SETQ LIND (REVERSIP LIND))
    (SETQ MESS (NOT (MEMQ (QUOTE MESSAGES) NOPRINT)))
    (OR LPOWER (SETQ LPOWER 2))
    (OR UPOWER (SETQ UPOWER 3))
    (AND (GREATERP RMARGIN 72) (LINELENGTH RMARGIN))
    (MAP METSUBS (FUNCTION (LAMBDA (ME) (RPLACA ME (INTOPRE(CAR ME))))))
    (LISTDEPS)
    (DEFSYMB)
    (MAKEPAIRS)
    (PUTSYMB)
    (MAP DATASUBS (FUNCTION (LAMBDA (DE)
         (RPLACA DE (SIMPLIFY (INTOPRE (CAR DE)) T)) )))
    (AND SYMBOLS (PROGN
         (MESSAGE (QUOTE SYMBOLS) T)
         (TURNCAR)
         (MAPC SYMBOLS (FUNCTION (LAMBDA (SE) (PROG2
               (INPRINT SE NIL NIL (QUOTE =) (GET SE (QUOTE CONTENT)))
               (TURNCAR)) ))) ))
    (MAPC MARKERS (FUNCTION (LAMBDA (ME) (SET ME NIL) )))
    (AND SIMPLSUBS (PROG (S M L DGLS M!?)
         (OR (SETQ MEM (MEMQ (QUOTE SUBSTITUTIONS) NOPRINT)) (PROG2
             (MESSAGE (QUOTE SUBSTITUTIONS) T)
             (TURNCAR)))
         (SETQ S (QUOTE =))
         (SETQ V SIMPLSUBS)
         (AND MARKERS (SETQ GLS
              (MAPCAR V (FUNCTION (LAMBDA (VE) (AND (EQ VE S) S) ))) )
              (SETQ DGLS GLS))
      A  (OR (SETQ M (FRONT (SETQ L (PREVIOUS S V)) V)) MEM
                                         (MESSAGE (QUOTE EVERYWHERE) T))
         (SETQ V (MEMBER L V))
         (OR MEM (PROGN
             (MAPC M (FUNCTION (LAMBDA (ME) (PROG2
                (MESSAGE ME NIL)
                (MESSAGE BLANK NIL)) )))
             (TURNCAR) (TURNCAR) ))
         (RPLACA V (INTOPRE (CAR V)))
         (COND (M!?   (PROGN (SETQ DGLS (EQUATE V DGLS))
                            (RPLACA DGLS T)
                            (RPLACA V (SMOOTH (CAR V) T))
                            (SETQ M!? NIL)))
               (T   (RPLACA V (SIMPLIFY (CAR V) T))))
         (RPLACA (CDDR V) (SIMPLIFY (INTOPRE (CADDR V)) T))
         (SETQ M!? NIL)
         (AND (EQ (CADDR V) (QUOTE EXPAND)) (COND
              ((AND (NOT (ATOM (CAR V))) (EQ (CAAR V) (QUOTE EXPT))
                    (CDAR V) (CDDAR V) (NULL (CDDDAR V)))
                        (OR (AND DGLS (CAR DGLS)) (RPLACA (CDDR V)
                                      (DEVELOP (CADAR V) (CADDAR V))) ))
              (T   (ERROR (LIST (QUOTE "THE EXPRESSION *****///")
                      (CAR V) (QUOTE "///***** IS NOT AN EXPONENTIAL")
                     (QUOTE "EXPRESSION, AND SO THE COMMAND")
                     (QUOTE "*EXPAND* IS MEANINGLESS IN THIS")
                     (QUOTE "CASE. SORRY, MUST QUIT."))) )))
         (OR MEM (PROGN
             (INPRINT (CAR V) NIL NIL S (CADDR V))
             (TURNCAR) (TURNCAR) ))
         (AND (SETQ V (CDDDR V)) (GO A)) ))
    (AND DATASUBS (PROG (GL)
         (PROG ( ) (MESSAGE (QUOTE (THE SUBSTITUTIONS LISTED ABOVE WILL
                            BE THEMSELVES TRANSFORMED BY THE FOLLOWING
                            SUBSTITUTIONS)) T)
                   (SETQ V DATASUBS)
                 A (COND ((EQ (CADR V) (QUOTE =))
                                         (MESSAGE (QUOTE EVERYWHERE) T))
                         (T   (MAPC (FRONT (PREVIOUS (QUOTE =) V) V)
                                    (FUNCTION (LAMBDA (FE) (PROG2
                                    (INPRINT (QUOTE "IN THE VALUE") NIL
                                       NIL (QUOTE "OF THE EXPRESSION")
                                       (CAR V))
                                    (SETQ V (CDR V))) ))) ))
                   (INPRINT (CAR V) NIL NIL (QUOTE =) (CADDR V))
                   (AND (SETQ V (CDDDR V)) (GO A)))
         (SETQ GL (MAPCAR SIMPLSUBS (FUNCTION (LAMBDA (SE)
                          (AND (EQ SE (QUOTE =)) SE) ))) )
         (CLEARDATA)
         (REMPROP (QUOTE CLEARDATA) (QUOTE EXPR))
         (REMPROP (QUOTE EQUATE) (QUOTE EXPR))
         (SETQ DATASUBS NIL)
         (OR (MEMQ (QUOTE MODIFICATIONS) NOPRINT) (PROGN
             (MESSAGE (QUOTE (THE SUBSTITUTIONS YOU ASKED ME TO
                 MODIFY WILL HAVE THE FOLLOWING FINAL FORM)) T)
             (TURNCAR) (TURNCAR) (TURNCAR)
             (PROG (S M L)
                 (SETQ S (QUOTE =))
                 (SETQ V SIMPLSUBS)
              A  (COND ((OR (PREVIOUS S GL) (NEXT S GL)) (PROGN
                           (OR (SETQ M (REMOVELAST (FRONT S V)))
                                (MESSAGE (QUOTE EVERYWHERE) T))
                           (MAPC M (FUNCTION (LAMBDA (ME) (PROGN
                                 (SETQ V (CDR V))
                                  (MESSAGE ME NIL)
                                  (MESSAGE BLANK NIL)) )))
                            (TURNCAR) (TURNCAR)
                            (INPRINT (CAR V) NIL NIL S (CADDR V))
                            (TURNCAR) (TURNCAR)
                            (AND (SETQ V (CDDDR V))
                                 (SETQ GL (CDDR (MEMQ S GL)))
                                 (GO A)) ))
                       (T   (AND (SETQ GL (CDDR (MEMQ S GL)))
                                 (SETQ V (CDDR (MEMQ S V)))
                                 (GO A))) ))) )))
    (SETQ SIMPLSUBS (SUBSTITUTIONS SIMPLSUBS))
    (REMPROP (QUOTE SUBSTITUTIONS) (QUOTE EXPR))
    (MAP WORKARR (FUNCTION (LAMBDA (ME) (RPLACA ME (INTOPRE(CAR ME))))))
    (MAPC (QUOTE (FRACTION POWER RANPIN TERM FACTOR INTOPRETERM
                  MAKETERMS INTOPRESUM INTOPRE NEXT PREVIOUS
                  CALCINIT)) (FUNCTION (LAMBDA (QE)
          (REMPROP QE (QUOTE EXPR)) )))
         ))
(de CALCULATE (LIS)
    (PROG (COORD FUNCTIONS CONSTANTS METSUBS SIMPLSUBS NOPRINT DATASUBS
           FUNNAMES SYMBOLS LPOWER UPOWER WORKARR LMARGIN N LIND MESS
           MARKERS CLOCK OUTINP)
    (MAPC (OBLIST) (FUNCTION RESETVARS))
    (SETQ CLOCK (TIME))
    (SETQ RMARGIN 72)
    (SETQ LMARGIN  8)
    (CALCINIT LIS)
    (RPLACD LIS NIL)
    (SETQ N 0)
    (MAPC WORKARR (FUNCTION (LAMBDA (ME) (PROG (V)
       (MESSAGE (QUOTE ("I UNDERSTAND YOU REQUEST"
               "THE FOLLOWING EXPRESSION" "TO BE SIMPLIFIED")) T)
       (TURNCAR) (TURNCAR)
       (INPRINT BLANK NIL NIL BLANK ME)
       (TURNCAR) (TURNCAR) (TURNCAR)
       (MESSAGE (QUOTE "THE RESULT IS") T)
       (TURNCAR) (TURNCAR)
       (SETQ V (SIMPLIFY ME T))
       (OR (ATOM V)
           (MEMQ (CAR V) (QUOTE (PLUS TIMES EXPT MINUS EXP LOG DER
                                      DERIV)))
           (ERROR (LIST (QUOTE "THE OPERATION") (CAR V)
                        (QUOTE "IS NOT INCLUDED IN OUR")
                        (QUOTE "PROGRAM.")
                        (QUOTE "I AM VERY SORRY")
                        (QUOTE "TO HAVE TO SAY THIS.")
                        (QUOTE "IF YOU WOULD LIKE")
                        (QUOTE "TO HAVE IT INCLUDED,")
                        (QUOTE "PLEASE CONTACT THE AUTHORS."))) )
       (SUBSALL (QUOTE V) (QUOTE RESULT) NIL
                (CONS (SETQ N (ADD1 N)) NIL) SIMPLSUBS)
       (TURNCAR) (TURNCAR) (TURNCAR)
       (INPRINT (QUOTE RESULT) NIL (CONS N NIL) (QUOTE =) V)
       (TURNCAR) (TURNCAR) (TURNCAR)
                ) )))
 END (TURNCAR) (TURNCAR)
    (MESSAGE (QUOTE ("I REALLY LIKED THIS !"
                 "CAN I HAVE MORE ?" "PLEASE ?!?")) T)
    (TURNCAR)
    (MESSAGE (QUOTE "END OF WORK") T)
    (LINELENGTH 72)
    (MESSAGE (LIST (QUOTE "RUN TIME =") (PLUS (TIME) (MINUS CLOCK))
                   (QUOTE MSEC)) T)
    ))
