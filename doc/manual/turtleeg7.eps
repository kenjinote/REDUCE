%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.41.0 (http://poppler.freedesktop.org)
%%Creator: TeX
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 720 504
%%HiResBoundingBox: 0 0 719.998 503.999
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font OUNTDV+Helvetica
%!FontType1-1.0: OUNTDV+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment; Cyrillic glyphs added by Valek Filippov \(C\) 2001-2005) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /OUNTDV+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 679 741] readonly def
/StrokeWidth 0 def
/UniqueID 5020902 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 54 /six put
dup 56 /eight put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 80 /P put
dup 82 /R put
dup 85 /U put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 115 /s put
dup 116 /t put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF3029BA9CDC574CE92C96CB7F7EB09200A6B1EDB6E92C5D4E
A60D07DF489BED2B34E84D9F993E34182B0ACA4851CDBD352659242F9BAE94A9
CF3902B79F3D036CD8910627BD9899627BA6EA8F2987DB12373189C36BB091BB
E1FDEC7555721801651068DBE178BF0FB10CE961AAE763822D13FD26873F196D
472190BF3C60E902EA3231C008B8505669613EA645886EB158C1580F58307CF8
EF61C472654D58D8E1D70E86DA6C731EFDD5DE2906FDCF3DF949A427A5CE58B3
CBD3ECFE51DFA8BFEE9860B27273BEE1FC25B3ECC8A1CE7F2C30ED86A9A5CA25
F1395340422F71C7C702B0CFB4B2D4139E9476545DEE3479578E858498B61EB8
75628B9112AE9575757E9378AB1AA52D00ED8116FCD8302147516D9A8735C853
29F4260DB60AAEE162A77B00F20E42B7A8EAD4313470E561A0C76345B72739B1
88654E697730C26422BD87DCBDA0D8CA6C6B858FB141392648F096155951C120
41DEBCF825B6A07DE22110EFF1B7E0C4EC44C3489FC85B4D75FFD981C970426F
BC20247C5DEFFA196057D55C88BA98804471BD490EC5B685A68E961D0AE10784
0A05F76455F58502A65085576926EA64759B7C8DEB4464C6D89D5C050AD8D893
32E72F9A6E49052A5154D4CEA5B0432C767AB0D9436657EFFDBCBB93F6A2C341
4A0AB4CCEC3EE381D3A341B0C3C37D5A22336524340C58855AD39FBDDF5DF053
7E25961B2798DC5C273E4A906C2D632A1A67E2DBD77896C14C68F80E6B4FBBC1
42122D142A3D267002B9F87FD43205BF6789D8A7E5A1FDB7103DF080B162C097
82DBF00652DC763C3715BB055AA82BB0EC2FDC69E4A06E8EDAB0E8FF8D18C198
11AB8FD78BE42816B081831B9CBDBC4F8A300237FDC9D373D1466B44B9DE60FE
BB78F4E4DCF260323F0FA8B52F3642B3B36BF1049ED789506641643523B88F65
E1C4154C08A482E5E4BDFFB1C06A2240ABE4E90F3F337075D268D1FAE11C6C65
28E250ECA23967A51E3FFA451D7DABB637A446A05B1FAB9FBBAB304B10E8AAE6
30F9AF0ACBA3137F4102AC2A87A2ED371C08F5E5E43E54EE0FA9ED6F7AB9C1C4
6E5C1C7D00958D9142BF7A8E0B4995F03A176F1ADF038B554E04EB4D5B211FE4
7D5EEF8572404CD4543A2377FDE5799D82DF879F17743F97A225F7D276600CC3
320C1095D3EB4A7BC09E4B8A6B5432893095296B8E36D6131A4E8034DCEE829F
47EF868A8D40044CE19FF837E27592CCB36E16C38E476D3D843FF3DD47FBB189
887A6B026055F01AFE4950F9FE5417431EEC29DA9BFB0573BA8EDE3B2F480F7A
B561AF1D973C3707C69562A457176C4A871993F506C208EAF11897A8E61F75EB
2580D41E4FD07A440BED615F96D0AC44ED660997135752A04B838ED0DACA575C
3FF653DEFE99CDB8A779237D36DD060025C9C8EE00933BA68761D06C0D95192C
3E3B5893FFD4957AA3FC4D8279F03256D0A214DCC69A7E00924D5B1A55E2F5BF
5029698122DCBD5ADEEF9E3211BDCE5D0D392E182B15994BAD7F08019687F006
DC98AABF492C520566B77D75E52E07343EF2CE38AD33D5EC87FC46AE50199438
E589721F50C2F3EE1A4861CA96042DE36BA9BD908DDD43AAD655D392B6D268A5
4338CA8A37B442ACD167F19C42940C71934C091DAC813B273AF237E2C9A73EBB
F72DDEFA0F90A4E743A10E4005460BB5D4816C9F28F9F151A6ADF1F522AAE93D
D41C5698B9DD24AAC2C7E6265214A237FF46A2070FC9F06EDB444702D16E5686
1C7C8BFED13DACD4441463A3E641E4E4FA93AC4F0AD3C8D4396D1A1958B23ADB
274F468D1BC4BD6AD51D66340C6E0C90167BE50B2D141F2EEC4B9EDB6A127025
1EF2311D885D0C72B4650F507882F536604B0102CA5ECF8F32723B31259ECCBD
8DE1ADA32887EA8ABFCC800446A4E5657D732F8DA5532E0B8E2549642669AE55
1C4FAF22AD4963756157B449078703C26DD995986FB7D33AC323BE33E09BAF21
FC66E546588D44D34B7B74948129D8E89B14A8E68A6A5B4DE122CE261A424228
80EF7DDE01E600E32A362B73827CCBB319471525B113F66ACC6CC95597958F11
250D7DF08B167AE147938CCEDD22D05B35A988ACE112AD6ACABD93E2E2641742
FD3CAE4A5CA6F552F719E96F0626177676678DCEC4E292B54E412319EB35693E
521865244D8DD89C82CA2BD12837FC9F378A00FF9E72CC0825B4D4AEDD99AB71
6F347A3708F7045E00E1D790A5D1A37E46B7BA44F209F281FAD8739BA95EF982
44BE0CA9CA4CD1973C47F3664CC11E2D6D68B10E24EA48C06594759F39B96D33
D6E395EDBEFE144AB46F312CE217BA080DEB781A738995D4F2AB0EBFD2353F40
D6C14E1B9606B51B922DCAA1217AED00376BC47A39F48AC6C6BB7B0F6FC9E53A
0F919A5AFF02F24D02836B555573D2798AA1A016136A0DBD8CFAD5969C46D772
8D06682AADF50935F7E713C1A6D94B4EBDAF18FADD407E55D5BD6630BC8C5624
55B2A6ECE61296C9A9525CA853206BBB85D8C41D72046A2A4A5EEA4D086BC331
8DD4492EAC2A6F597D6D70CC7403798A5DB5C4E240B06DC94DE688C0C8584C89
862FB5377BA5ABC73143CA32B12FAA895535B73F56E1AB616FB3AB4C5CC49459
F753BF829E740A332A1D1A3F0E1857468DBC99737631A4FBB4B2F9ED0E84F770
33488B50E99204E08B8B4B8894FF9B563FE93BB82F16A7463DD7DA4C746CE170
D15932D9DD7F8E208F3F3D7014318CCAAD48964396273212FD28FAADF11C9CC1
E67CAE45FFA2189B70F89A2E2532F358D4294EFF53A37C1B3202C7D298A9EDE2
18EB1CB8A05CC7FE7B57EA4DE231F950BA6C9993F71A1B3D7AF77EA82DA105D5
DF238BD9094B6F250ECE52FD227A163872B513C8B9985C85898140FD372D2A5B
5894EA371EE601E58080AB5BCD51FF79237BC6605113B64D3C61A84648D7E806
A150FCE0433F4FBB80F7BB6E79AA622EE36B633EC74858EC1DA51B9F41133B52
9020CCA8924B323A0E2D923948E431B71AA7D861A9DA9AB37DED24C3861FBF4C
7F6F2835A6D6EAD2DE4FF009E3DA458F6E11B2F1B85F409B5A111AE4761A4A1C
92AEC3BC96ACA6716F3741AF23C6178575BB0D4BD999382E507B0B538F0C8BEC
AD18FBD6F34E94830C7112C9557BA7BCEA10FCE4D272776DAF7F8BE0D4B7FDAD
1670A7919903F4E7368373A1DC2F4420A3A2F1266A5947B02DC9CF585DB7DC26
22138151184F91632303419E028D6C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F11_0 /OUNTDV+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 719.998 503.999 re
W
q
[1 0 0 1 -0.346 504.241] cm
q
[1.00096 0 0 1.00096 0 0] cm
q
[0 -1 1 0 0 0] cm
q
[1 0 0 1 0 0] cm
q
[1 0 0 1 0 0] cm
0 0 504 720 re
W
q
[0.1 0 0 0.1 0 0] cm
10 w
/DeviceGray {} CS
[0] SC
4480 728 m
4480 791 l
4480 7116 m
4480 7053 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 452.6 56.616] Tm
0 0 Td
/F11_0 14 Tf
(0)
[7.784
0] Tj
Q
3654 728 m
3654 791 l
3654 7116 m
3654 7053 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 370 48.832] Tm
0 0 Td
/F11_0 14 Tf
(20)
[7.784
0
7.784
0] Tj
Q
2828 728 m
2828 791 l
2828 7116 m
2828 7053 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 287.4 48.832] Tm
0 0 Td
/F11_0 14 Tf
(40)
[7.784
0
7.784
0] Tj
Q
2002 728 m
2002 791 l
2002 7116 m
2002 7053 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 204.8 48.832] Tm
0 0 Td
/F11_0 14 Tf
(60)
[7.784
0
7.784
0] Tj
Q
1176 728 m
1176 791 l
1176 7116 m
1176 7053 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 122.2 48.832] Tm
0 0 Td
/F11_0 14 Tf
(80)
[7.784
0
7.784
0] Tj
Q
350 728 m
350 791 l
350 7116 m
350 7053 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 39.6 41.048] Tm
0 0 Td
/F11_0 14 Tf
(100)
[7.784
0
7.784
0
7.784
0] Tj
Q
4480 728 m
4417 728 l
350 728 m
413 728 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 466.6 62.6852] Tm
0 0 Td
/F11_0 14 Tf
(-60)
[4.662
0
7.784
0
7.784
0] Tj
Q
4480 1793 m
4417 1793 l
350 1793 m
413 1793 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 466.6 169.185] Tm
0 0 Td
/F11_0 14 Tf
(-40)
[4.662
0
7.784
0
7.784
0] Tj
Q
4480 2857 m
4417 2857 l
350 2857 m
413 2857 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 466.6 275.585] Tm
0 0 Td
/F11_0 14 Tf
(-20)
[4.662
0
7.784
0
7.784
0] Tj
Q
4480 3922 m
4417 3922 l
350 3922 m
413 3922 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 466.6 388.308] Tm
0 0 Td
/F11_0 14 Tf
(0)
[7.784
0] Tj
Q
4480 4987 m
4417 4987 l
350 4987 m
413 4987 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 466.6 490.916] Tm
0 0 Td
/F11_0 14 Tf
(20)
[7.784
0
7.784
0] Tj
Q
4480 6051 m
4417 6051 l
350 6051 m
413 6051 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 466.6 597.316] Tm
0 0 Td
/F11_0 14 Tf
(40)
[7.784
0
7.784
0] Tj
Q
4480 7116 m
4417 7116 l
350 7116 m
413 7116 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 466.6 703.816] Tm
0 0 Td
/F11_0 14 Tf
(60)
[7.784
0
7.784
0] Tj
Q
350 728 4130 6388 re
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[-1 0 0 -1 260.176 18.6] Tm
0 0 Td
/F11_0 14 Tf
(points)
[7.784
0
7.784
0
3.108
0
7.784
0
3.892
0
7
0] Tj
Q
350 728 4130 6388 re
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 487.6 388.7] Tm
0 0 Td
/F11_0 14 Tf
(x)
[7
0] Tj
-40.0602 469 Td
(REDUCE Plot)
[10.108
0
9.338
0
10.108
0
10.108
0
10.108
0
9.338
0
3.892
0
9.338
0
3.108
0
7.784
0
3.892
0] Tj
Q
5 w
4480 3922 m
413 2998 l
4294 4818 l
717 2157 l
3881 5578 l
1226 1500 l
3291 6111 l
1878 1108 l
2596 6351 l
2596 1027 l
1878 6270 l
3291 1268 l
1226 5878 l
3881 1800 l
717 5222 l
4294 2560 l
413 4381 l
4480 3456 l
350 3456 l
4417 4381 l
536 2560 l
4113 5222 l
949 1800 l
3604 5878 l
1539 1268 l
2952 6270 l
2234 1027 l
2234 6351 l
2952 1108 l
1539 6111 l
3604 1500 l
949 5578 l
4113 2157 l
536 4818 l
4417 2998 l
350 3922 l
4480 3922 l
413 2998 l
4294 4818 l
717 2157 l
3881 5578 l
1226 1500 l
3291 6111 l
1878 1108 l
2596 6351 l
2596 1027 l
1878 6270 l
3291 1268 l
1226 5878 l
3881 1800 l
717 5222 l
4294 2560 l
413 4381 l
4480 3456 l
350 3456 l
4417 4381 l
536 2560 l
4113 5222 l
949 1800 l
3604 5878 l
1539 1268 l
2952 6270 l
2234 1027 l
2234 6351 l
2952 1108 l
1539 6111 l
3604 1500 l
949 5578 l
4113 2157 l
536 4818 l
4417 2998 l
350 3922 l
4480 3922 l
S
Q
Q
Q
Q
Q
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font OUNTDV+Helvetica
%%EOF
