%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.41.0 (http://poppler.freedesktop.org)
%%Creator: TeX
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 720 504
%%HiResBoundingBox: 0 0 719.998 503.999
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font CXZIXQ+Helvetica
%!FontType1-1.0: CXZIXQ+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment; Cyrillic glyphs added by Valek Filippov \(C\) 2001-2005) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /CXZIXQ+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 679 741] readonly def
/StrokeWidth 0 def
/UniqueID 5020902 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 53 /five put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 80 /P put
dup 82 /R put
dup 85 /U put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 115 /s put
dup 116 /t put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF3029BA9CDC574CE92C96CB7F7EB09200A6B1EDB6E92C5D4E
A60D07DF489BED2B34E84D9F993E34182B0ACA4851CDBD352659242F9BAE94A9
CF3902B79F3D036CD8910627BD9899627BA6EA8F2987DB12373189C36BB091BB
E1FDEC7555721801651068DBE178BF0FB10CE961AAE763822D13FD26873F196D
472190BF3C62464FAB2E8260E7F58F3BAA5A2A8C9549F325200E4C4AEA7EEEB1
72E1C1F837F85D327D09ACE0316B6A2D30E474DB44EB967EB4F7B1FF17CE93C4
87A4A6FF994C560CFA94CB95B0951403B88466EDE3523A5836197CE157A8FC37
8010EEE04D4D3871F14EB22ED039F0C3DA99F394E44E0A9FF4A649A743146106
F306ED4739E697FCF8B8C95F8FBA06C94A0457CF96EE6CA62A5B7D6885C7D5D5
6FFF21024997FF00BF096BD0741BCC5E6752A67C02BAE408EA336EE697F7DCB5
C3AD96C1D19968FF6E82E6EF28D625E4540CF6806390EBA7470D728E3ED76A55
E37CD7E63AB698CCF2C452EF1FD1E256F12160CAABCF883457FE5A36C7EBA76A
9422A8B670AC14BB1760A890FE572E47E471D99B62B9C0EF8F345764B512535C
A9494CE755DC958F06F303E393F34269ACBB4FC8CD70B27AA145B076211A5A0D
D74033BF752F26E481DFA1FB3ADEB385D303D02C9E394D6F77D513C1FCD8FB8C
6047C8D667783606CDB6ABC0CEB5E3E0BA7D7BF3C0F057A22381FE2C82904680
3158496398550F2B1591695B3553560ABEC015AFD19250606245C2942653C46C
8E9A343543CCBC520C31505891C2BCDED8F9C5323CAC6212BB4C974E1997C1CF
690ADB2442E356EDF5D83A07B5F836B65FFCD21E24AF6E58FA5AE08A8C12BE12
13FA19C9A3B6829B02BDAA1676ED93B20DE19857380CFAA817BEB76821F37F45
C70BDF555B323603014901701DC15A755D7E6E9F475BC9421A0846869326C74E
7A3C429CC1F790140110854FB97DF6E0D754C603B04980E64CEFB153BEE6C3D0
B8E0D1FC75A95535E00DFF8F3D74CE32108BFD02AF024E596C4556C911370417
E3C9030E494DE8AB7D11B7F314D97D03547956A7237DA7AB855743F1C93D61C8
53DF628F85283408A628D6446BD17CDA0D1A04FCE683E800C7786EF963245635
C4273DE2B4C97AD0D381BD59060F37300BFB0228BC9B2F925125E8FE00E4DD91
034F8694453093AA53963E9A3E9F3BF94C8E85AE02D496B0F5259ADDFD63608A
FEFF5E80C27F8DD4BE7ACFD86DCF9273C1433B20A815F88093F2C67A298E06A3
69428E71EAD1AF7F5A6F90DF5D703044438846327564B7FF7A1F1C3FDB3CF0F8
651E527A2EBC3E34F59C1DD11BC60A5AA9D7ADE610EA229BA01B59CFE3E0EF60
AA06C3AF936E0DCA33333AE917F59A5BEA9085337EEC6B11402535BE22AD3C48
B7FD0610775DEC3647F45F7E9F8980F2E1A9AF85FD9F8A019CF130AC72D636AE
DFADB6D4D8AA9C7307F9BE30020450928697E5B8E2BC9D65753AB09ADCBF7F55
9BD17C3FC459C68CD2FC08D8CFC13A5727443D050765B2EDA6A806FE254CE253
8CAB85B3C19D234F4B861299E5CFFA60D508087DE9230C491A7FC1D26AE7A338
589A03FBB736B63AE4E77EF0B6ECF0DE051CC2340A2EBDFF1DD5E6A1930AC033
137367726DFA2505D4A977FF8F59BDA9CDE8A832FA35E7A0052F156CB1856D0B
73E2F23823E15F60A435902ED23138C41A7F9593DD2649C756AD969A31736E88
2CB58AFD4A05731C843BCFA2EC2D0AFB790C71206F5F33E67582EFB332770618
154DFECDB7295C41A2893B5427A35C52CDBFF6067BD9712503940E1373D81190
39B76514B5E5472E840B9C42F4438117B43A9DF5A135FD4B7746ACB5AD49CD68
7B9B50F1BC29DCB9036BE1FC0A57B1F1F1CA6C42D35E6FBDAEA63E5547B8FBDC
F4032939D55B45DAE613DA1310B8060ED16A80D9B46FCC814E961E8832761DA4
7DA1162DEDFD6582F61AD443B5F3AB0456A529D56C2EE9D26A69541E65F2B4A3
EC9D269240DA73B0F9DF4EFBC132646C5A6941E4B3348FA916CEEE916BCB57FC
7CD20812FBB09A54C326573A6D5D601B714452C1851A3643614EFB3D76301757
679CB2D79D4BAC9C1188D3D374E1C74F59B78BC5E79C16D409D6387375550EDE
B29CD9A0E3A2B76BDEA32501EA491E93A710FF9F811F2610A972ED625BE3A68B
FF2B6D5C92320CF34186D90B82CD49619CBA604EF2ACE227219DA8344D5FFA5F
B9096CE11F24ACB4561CD8C5F1DD92C36EB43F1810405C8D1E4116A867722C6D
B044C007D13BBCE17B04D94FFA75A3DDBD6C80FB61477A33C49C68E975F2DC67
DF6BBC45F753BA5EFB3F829A0809885BCDBF2CCC1FCF074CBE4C0D6DF5C53969
91D6AE8AFEF8A2F872896BE28E66CE118758007A72C6F03F6F64B7B639CC69AF
A18795FDF179261A04EA35E3E862D7E28958F31AB2793E04CA14D97CF62D6E7B
C201F161D69AE5D79084A0C7671F17E05C7CC73557C445BC4D218EF9232E5F81
41D0119A8D43700B4A4122C12D4FB0EDA33A72B7161C1B8B8629DA015F691F04
E967BA3C980406D1B9C3D1A77F90514C49ADA7DF82C1396FE117AD11DD3D97A8
B66004250A2B787A5B19141FE2FA71BAB33380CEE2D44B6C24ABDE8E99101C03
304276B2F1F2BE7295E3DD05B05DBB0EC783841262F1B5BE441F19F4B14E2DAB
FEA5446BDD1F8FA175606A017F0C30878402065A601A8610EA3CB42E2B810ADA
6A95BF9766356F145107EC1D135B96478FC538D7E2DD9A9B2DF37A34DFA6866E
2F2CC8AC242A95F0017EF29542B384E14AB04AB9BE4043515F0ADAE9F122104B
6C08E19678F6F944423A165ED7DAF240EAA5248EB41A5B844256691D09478A20
D8630BFB0386D24046A6DC145E3320EAC5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F11_0 /CXZIXQ+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 719.998 503.999 re
W
q
[1 0 0 1 -0.346 504.241] cm
q
[1.00096 0 0 1.00096 0 0] cm
q
[0 -1 1 0 0 0] cm
q
[1 0 0 1 0 0] cm
q
[1 0 0 1 0 0] cm
0 0 504 720 re
W
q
[0.1 0 0 0.1 0 0] cm
10 w
/DeviceGray {} CS
[0] SC
4480 812 m
4480 875 l
4480 7116 m
4480 7053 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 452.6 44.7863] Tm
0 0 Td
/F11_0 14 Tf
(-250)
[4.662
0
7.784
0
7.784
0
7.784
0] Tj
Q
4067 812 m
4067 875 l
4067 7116 m
4067 7053 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 411.3 44.7863] Tm
0 0 Td
/F11_0 14 Tf
(-200)
[4.662
0
7.784
0
7.784
0
7.784
0] Tj
Q
3654 812 m
3654 875 l
3654 7116 m
3654 7053 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 370 44.7863] Tm
0 0 Td
/F11_0 14 Tf
(-150)
[4.662
0
7.784
0
7.784
0
7.784
0] Tj
Q
3241 812 m
3241 875 l
3241 7116 m
3241 7053 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 328.7 44.7863] Tm
0 0 Td
/F11_0 14 Tf
(-100)
[4.662
0
7.784
0
7.784
0
7.784
0] Tj
Q
2828 812 m
2828 875 l
2828 7116 m
2828 7053 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 287.4 52.5703] Tm
0 0 Td
/F11_0 14 Tf
(-50)
[4.662
0
7.784
0
7.784
0] Tj
Q
2415 812 m
2415 875 l
2415 7116 m
2415 7053 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 246.1 65.016] Tm
0 0 Td
/F11_0 14 Tf
(0)
[7.784
0] Tj
Q
2002 812 m
2002 875 l
2002 7116 m
2002 7053 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 204.8 57.232] Tm
0 0 Td
/F11_0 14 Tf
(50)
[7.784
0
7.784
0] Tj
Q
1589 812 m
1589 875 l
1589 7116 m
1589 7053 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 163.5 49.448] Tm
0 0 Td
/F11_0 14 Tf
(100)
[7.784
0
7.784
0
7.784
0] Tj
Q
1176 812 m
1176 875 l
1176 7116 m
1176 7053 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 122.2 49.448] Tm
0 0 Td
/F11_0 14 Tf
(150)
[7.784
0
7.784
0
7.784
0] Tj
Q
763 812 m
763 875 l
763 7116 m
763 7053 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 80.9 49.448] Tm
0 0 Td
/F11_0 14 Tf
(200)
[7.784
0
7.784
0
7.784
0] Tj
Q
350 812 m
350 875 l
350 7116 m
350 7053 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 39.6 49.448] Tm
0 0 Td
/F11_0 14 Tf
(250)
[7.784
0
7.784
0
7.784
0] Tj
Q
4480 812 m
4417 812 l
350 812 m
413 812 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 466.6 77.3082] Tm
0 0 Td
/F11_0 14 Tf
(0)
[7.784
0] Tj
Q
4480 2073 m
4417 2073 l
350 2073 m
413 2073 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 466.6 199.516] Tm
0 0 Td
/F11_0 14 Tf
(50)
[7.784
0
7.784
0] Tj
Q
4480 3334 m
4417 3334 l
350 3334 m
413 3334 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 466.6 321.724] Tm
0 0 Td
/F11_0 14 Tf
(100)
[7.784
0
7.784
0
7.784
0] Tj
Q
4480 4594 m
4417 4594 l
350 4594 m
413 4594 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 466.6 447.724] Tm
0 0 Td
/F11_0 14 Tf
(150)
[7.784
0
7.784
0
7.784
0] Tj
Q
4480 5855 m
4417 5855 l
350 5855 m
413 5855 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 466.6 573.824] Tm
0 0 Td
/F11_0 14 Tf
(200)
[7.784
0
7.784
0
7.784
0] Tj
Q
4480 7116 m
4417 7116 l
350 7116 m
413 7116 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 466.6 699.924] Tm
0 0 Td
/F11_0 14 Tf
(250)
[7.784
0
7.784
0
7.784
0] Tj
Q
350 812 4130 6304 re
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[-1 0 0 -1 260.176 18.6] Tm
0 0 Td
/F11_0 14 Tf
(points)
[7.784
0
7.784
0
3.108
0
7.784
0
3.892
0
7
0] Tj
Q
350 812 4130 6304 re
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 487.6 392.9] Tm
0 0 Td
/F11_0 14 Tf
(x)
[7
0] Tj
-40.0602 469 Td
(REDUCE Plot)
[10.108
0
9.338
0
10.108
0
10.108
0
10.108
0
9.338
0
3.892
0
9.338
0
3.108
0
7.784
0
3.892
0] Tj
Q
5 w
2415 812 m
1656 3130 l
1119 3130 l
929 2550 l
929 2141 l
976 1996 l
1010 1996 l
1022 2032 l
1010 1996 l
1022 1960 l
1010 1996 l
976 1996 l
976 1893 l
988 1857 l
976 1893 l
965 1857 l
976 1893 l
976 1996 l
929 2141 l
882 1996 l
882 1893 l
893 1857 l
882 1893 l
870 1857 l
882 1893 l
882 1996 l
848 1996 l
836 1960 l
848 1996 l
836 2032 l
848 1996 l
882 1996 l
929 2141 l
929 2550 l
795 2550 l
747 2406 l
747 2303 l
759 2267 l
747 2303 l
735 2267 l
747 2303 l
747 2406 l
714 2406 l
702 2369 l
714 2406 l
702 2442 l
714 2406 l
747 2406 l
795 2550 l
747 2695 l
714 2695 l
702 2659 l
714 2695 l
702 2732 l
714 2695 l
747 2695 l
747 2798 l
735 2834 l
747 2798 l
759 2834 l
747 2798 l
747 2695 l
795 2550 l
929 2550 l
1119 3130 l
929 3709 l
795 3709 l
747 3565 l
747 3462 l
759 3426 l
747 3462 l
735 3426 l
747 3462 l
747 3565 l
714 3565 l
702 3528 l
714 3565 l
702 3601 l
714 3565 l
747 3565 l
795 3709 l
747 3854 l
714 3854 l
702 3818 l
714 3854 l
702 3891 l
714 3854 l
747 3854 l
747 3957 l
735 3993 l
747 3957 l
759 3993 l
747 3957 l
747 3854 l
795 3709 l
929 3709 l
929 4119 l
882 4264 l
848 4264 l
836 4228 l
848 4264 l
836 4300 l
848 4264 l
882 4264 l
882 4367 l
870 4403 l
882 4367 l
893 4403 l
882 4367 l
882 4264 l
929 4119 l
976 4264 l
976 4367 l
965 4403 l
976 4367 l
988 4403 l
976 4367 l
976 4264 l
1010 4264 l
1022 4300 l
1010 4264 l
1022 4228 l
1010 4264 l
976 4264 l
929 4119 l
929 3709 l
1119 3130 l
1656 3130 l
1656 4769 l
1466 5348 l
1332 5348 l
1284 5204 l
1284 5101 l
1296 5065 l
1284 5101 l
1272 5065 l
1284 5101 l
1284 5204 l
1251 5204 l
1239 5167 l
1251 5204 l
1239 5240 l
1251 5204 l
1284 5204 l
1332 5348 l
1284 5493 l
1251 5493 l
1239 5457 l
1251 5493 l
1239 5530 l
1251 5493 l
1284 5493 l
1284 5596 l
1272 5632 l
1284 5596 l
1296 5632 l
1284 5596 l
1284 5493 l
1332 5348 l
1466 5348 l
1466 5758 l
1418 5903 l
1385 5903 l
1373 5867 l
1385 5903 l
1373 5939 l
1385 5903 l
1418 5903 l
1418 6006 l
1407 6042 l
1418 6006 l
1430 6042 l
1418 6006 l
1418 5903 l
1466 5758 l
1513 5903 l
1513 6006 l
1501 6042 l
1513 6006 l
1525 6042 l
1513 6006 l
1513 5903 l
1547 5903 l
1559 5939 l
1547 5903 l
1559 5867 l
1547 5903 l
1513 5903 l
1466 5758 l
1466 5348 l
1656 4769 l
1846 5348 l
1846 5758 l
1798 5903 l
1765 5903 l
1753 5867 l
1765 5903 l
1753 5939 l
1765 5903 l
1798 5903 l
1798 6006 l
1786 6042 l
1798 6006 l
1810 6042 l
1798 6006 l
1798 5903 l
1846 5758 l
1893 5903 l
1893 6006 l
1881 6042 l
1893 6006 l
1905 6042 l
1893 6006 l
1893 5903 l
1927 5903 l
1938 5939 l
1927 5903 l
1938 5867 l
1927 5903 l
1893 5903 l
1846 5758 l
1846 5348 l
1980 5348 l
2027 5493 l
2027 5596 l
2015 5632 l
2027 5596 l
2039 5632 l
2027 5596 l
2027 5493 l
2061 5493 l
2073 5530 l
2061 5493 l
2073 5457 l
2061 5493 l
2027 5493 l
1980 5348 l
2027 5204 l
2061 5204 l
2073 5240 l
2061 5204 l
2073 5167 l
2061 5204 l
2027 5204 l
2027 5101 l
2039 5065 l
2027 5101 l
2015 5065 l
2027 5101 l
2027 5204 l
1980 5348 l
1846 5348 l
1656 4769 l
1656 3130 l
2415 812 l
3174 3130 l
3174 4769 l
2984 5348 l
2850 5348 l
2803 5204 l
2803 5101 l
2815 5065 l
2803 5101 l
2791 5065 l
2803 5101 l
2803 5204 l
2769 5204 l
2757 5167 l
2769 5204 l
2757 5240 l
2769 5204 l
2803 5204 l
2850 5348 l
2803 5493 l
2769 5493 l
2757 5457 l
2769 5493 l
2757 5530 l
2769 5493 l
2803 5493 l
2803 5596 l
2791 5632 l
2803 5596 l
2815 5632 l
2803 5596 l
2803 5493 l
2850 5348 l
2984 5348 l
2984 5758 l
2937 5903 l
2903 5903 l
2892 5867 l
2903 5903 l
2892 5939 l
2903 5903 l
2937 5903 l
2937 6006 l
2925 6042 l
2937 6006 l
2949 6042 l
2937 6006 l
2937 5903 l
2984 5758 l
3032 5903 l
3032 6006 l
3020 6042 l
3032 6006 l
3044 6042 l
3032 6006 l
3032 5903 l
3065 5903 l
3077 5939 l
3065 5903 l
3077 5867 l
3065 5903 l
3032 5903 l
2984 5758 l
2984 5348 l
3174 4769 l
3364 5348 l
3364 5758 l
3317 5903 l
3283 5903 l
3271 5867 l
3283 5903 l
3271 5939 l
3283 5903 l
3317 5903 l
3317 6006 l
3305 6042 l
3317 6006 l
3329 6042 l
3317 6006 l
3317 5903 l
3364 5758 l
3412 5903 l
3412 6006 l
3400 6042 l
3412 6006 l
3423 6042 l
3412 6006 l
3412 5903 l
3445 5903 l
3457 5939 l
3445 5903 l
3457 5867 l
3445 5903 l
3412 5903 l
3364 5758 l
3364 5348 l
3498 5348 l
3546 5493 l
3546 5596 l
3534 5632 l
3546 5596 l
3558 5632 l
3546 5596 l
3546 5493 l
3579 5493 l
3591 5530 l
3579 5493 l
3591 5457 l
3579 5493 l
3546 5493 l
3498 5348 l
3546 5204 l
3579 5204 l
3591 5240 l
3579 5204 l
3591 5167 l
3579 5204 l
3546 5204 l
3546 5101 l
3558 5065 l
3546 5101 l
3534 5065 l
3546 5101 l
3546 5204 l
3498 5348 l
3364 5348 l
3174 4769 l
3174 3130 l
3711 3130 l
3901 3709 l
3901 4119 l
3854 4264 l
3820 4264 l
3808 4228 l
3820 4264 l
3808 4300 l
3820 4264 l
3854 4264 l
3854 4367 l
3842 4403 l
3854 4367 l
3865 4403 l
3854 4367 l
3854 4264 l
3901 4119 l
3948 4264 l
S
3948 4264 m
3948 4367 l
3937 4403 l
3948 4367 l
3960 4403 l
3948 4367 l
3948 4264 l
3982 4264 l
3994 4300 l
3982 4264 l
3994 4228 l
3982 4264 l
3948 4264 l
3901 4119 l
3901 3709 l
4035 3709 l
4083 3854 l
4083 3957 l
4071 3993 l
4083 3957 l
4095 3993 l
4083 3957 l
4083 3854 l
4116 3854 l
4128 3891 l
4116 3854 l
4128 3818 l
4116 3854 l
4083 3854 l
4035 3709 l
4083 3565 l
4116 3565 l
4128 3601 l
4116 3565 l
4128 3528 l
4116 3565 l
4083 3565 l
4083 3462 l
4095 3426 l
4083 3462 l
4071 3426 l
4083 3462 l
4083 3565 l
4035 3709 l
3901 3709 l
3711 3130 l
3901 2550 l
4035 2550 l
4083 2695 l
4083 2798 l
4071 2834 l
4083 2798 l
4095 2834 l
4083 2798 l
4083 2695 l
4116 2695 l
4128 2732 l
4116 2695 l
4128 2659 l
4116 2695 l
4083 2695 l
4035 2550 l
4083 2406 l
4116 2406 l
4128 2442 l
4116 2406 l
4128 2369 l
4116 2406 l
4083 2406 l
4083 2303 l
4095 2267 l
4083 2303 l
4071 2267 l
4083 2303 l
4083 2406 l
4035 2550 l
3901 2550 l
3901 2141 l
3948 1996 l
3982 1996 l
3994 2032 l
3982 1996 l
3994 1960 l
3982 1996 l
3948 1996 l
3948 1893 l
3960 1857 l
3948 1893 l
3937 1857 l
3948 1893 l
3948 1996 l
3901 2141 l
3854 1996 l
3854 1893 l
3865 1857 l
3854 1893 l
3842 1857 l
3854 1893 l
3854 1996 l
3820 1996 l
3808 1960 l
3820 1996 l
3808 2032 l
3820 1996 l
3854 1996 l
3901 2141 l
3901 2550 l
3711 3130 l
3174 3130 l
2415 812 l
S
Q
Q
Q
Q
Q
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font CXZIXQ+Helvetica
%%EOF
