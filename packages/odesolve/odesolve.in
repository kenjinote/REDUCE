% Input the whole package of ODESolve 1+ source files  -*- REDUCE -*-

% F.J.Wright@Maths.QMW.ac.uk, Time-stamp: <14 September 2000>

% To input the full ODESolve file set, start REDUCE in the ODESolve
% source directory (or change to it) and do

% in "odesolve.in"$


% To compile ODESolve without using the development system utilities,
% start REDUCE in the ODESolve source directory (or change to it) and
% do

% in "odesolve.red"$
% faslout odesolve;
% in "odesolve.in"$
% faslend;

% If using PSL, you will then need to move odesolve.b to a directory
% in your PSL load path, such as the main fasl directory.


in "odesolve.red"$

% See `reduce/packages/rlisp/tok.red' for details of conditional parsing.

!#if (memq 'csl lispsystem!*)           % CSL
symbolic eval!-when((eval compile),
   in_non_empty_list
      for each p in ODESolve!-subpackages!* collect concat(p, ".red"))$
!#else                                  % Assume PSL
symbolic compiletime
   in_non_empty_list
      for each p in ODESolve!-subpackages!* collect
         compress('!" . append(explode2 p, '(!. !r !e !d !")))$ % "
!#endif

end$

% eval!-when is a CSL fexpr like progn but its first argument must be
% a list of "situations" that can be one or more of the atoms eval,
% compile, load.
