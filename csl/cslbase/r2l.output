Terminals which are not used

   HASHIF
   HASHELSE
   HASHELIF
   HASHENDIF


State 59 conflicts: 2 shift/reduce
State 96 conflicts: 2 reduce/reduce
State 97 conflicts: 1 shift/reduce, 5 reduce/reduce
State 135 conflicts: 2 shift/reduce
State 138 conflicts: 2 reduce/reduce
State 140 conflicts: 18 reduce/reduce
State 152 conflicts: 2 shift/reduce
State 241 conflicts: 2 reduce/reduce
State 242 conflicts: 3 reduce/reduce
State 245 conflicts: 2 reduce/reduce
State 246 conflicts: 4 reduce/reduce
State 249 conflicts: 2 reduce/reduce
State 250 conflicts: 5 reduce/reduce
State 254 conflicts: 2 reduce/reduce
State 255 conflicts: 6 reduce/reduce
State 278 conflicts: 2 reduce/reduce
State 280 conflicts: 1 shift/reduce, 16 reduce/reduce
State 289 conflicts: 2 reduce/reduce
State 291 conflicts: 1 shift/reduce, 18 reduce/reduce
State 296 conflicts: 20 reduce/reduce
State 298 conflicts: 2 reduce/reduce
State 305 conflicts: 2 reduce/reduce
State 307 conflicts: 1 shift/reduce, 20 reduce/reduce
State 319 conflicts: 1 shift/reduce
State 320 conflicts: 2 shift/reduce
State 340 conflicts: 2 shift/reduce
State 341 conflicts: 36 reduce/reduce
State 394 conflicts: 2 reduce/reduce
State 395 conflicts: 3 reduce/reduce
State 396 conflicts: 2 reduce/reduce
State 397 conflicts: 4 reduce/reduce
State 398 conflicts: 2 reduce/reduce
State 399 conflicts: 5 reduce/reduce


Grammar

    0 $accept: wholefile $end

    1 wholefile: ENDFILE
    2          | command wholefile

    3 command: cmnd sep
    4        | proc_type sep
    5        | END
    6        | END sep

    7 sep: ';'
    8    | '$'

    9 proc_type: SYMBOLIC
   10          | ALGEBRAIC

   11 proc_qual: EXPR
   12          | MACRO
   13          | SMACRO

   14 sym_list: ')'
   15         | ',' SYMBOL sym_list

   16 infix: SETQ
   17      | OR
   18      | AND
   19      | MEMBER
   20      | MEMQ
   21      | '='
   22      | NEQ
   23      | EQ
   24      | GEQ
   25      | '>'
   26      | LEQ
   27      | '<'
   28      | FREEOF
   29      | '+'
   30      | '-'
   31      | '*'
   32      | '/'
   33      | '^'
   34      | '.'

   35 prefix: NOT
   36       | '+'
   37       | '-'

   38 proc_head: SYMBOL
   39          | SYMBOL SYMBOL
   40          | SYMBOL '(' ')'
   41          | SYMBOL '(' SYMBOL sym_list
   42          | prefix SYMBOL
   43          | SYMBOL infix SYMBOL

   44 proc_def: PROCEDURE proc_head sep cmnd
   45         | proc_type PROCEDURE proc_head sep cmnd
   46         | proc_qual PROCEDURE proc_head sep cmnd
   47         | proc_type proc_qual PROCEDURE proc_head sep cmnd

   48 rlistat: RLISTAT
   49        | IN
   50        | ON

   51 rltail: expr
   52       | expr ',' rltail

   53 cmnd: expr
   54     | rlistat rltail

   55 if_stmt: IF expr THEN cmnd ELSE cmnd
   56        | IF expr THEN cmnd

   57 for_update: ':' expr
   58           | STEP expr UNTIL expr

   59 for_action: DO
   60           | SUM
   61           | COLLECT

   62 for_inon: IN
   63         | ON

   64 for_stmt: FOR SYMBOL SETQ expr for_update for_action cmnd
   65         | FOR EACH SYMBOL for_inon expr for_action cmnd
   66         | FOREACH SYMBOL for_inon expr for_action cmnd

   67 while_stmt: WHILE expr DO cmnd

   68 repeat_stmt: REPEAT cmnd UNTIL expr

   69 return_stmt: RETURN
   70            | RETURN expr

   71 goto_stmt: GOTO SYMBOL
   72          | GO SYMBOL
   73          | GO TO SYMBOL

   74 group_tail: RSECT
   75           | sep RSECT
   76           | sep cmnd group_tail

   77 group_expr: LSECT cmnd group_tail

   78 scalar_tail: sep
   79            | ',' SYMBOL scalar_tail
   80            | ',' INTEGER scalar_tail

   81 scalar_def: SCALAR SYMBOL scalar_tail
   82           | INTEGER SYMBOL scalar_tail

   83 scalar_defs: scalar_def
   84            | scalar_defs scalar_def

   85 block_tail: END
   86           | cmnd END
   87           | SYMBOL ':' block_tail
   88           | cmnd sep block_tail
   89           | sep block_tail

   90 block_expr: BEGIN scalar_defs block_tail
   91           | BEGIN block_tail

   92 lambda_vars: sep
   93            | ',' SYMBOL lambda_vars

   94 lambda_expr: LAMBDA SYMBOL lambda_vars cmnd
   95            | LAMBDA '(' ')' sep cmnd
   96            | LAMBDA '(' SYMBOL sym_list sep cmnd

   97 expr: rx0
   98     | lx0

   99 rx0: lx0 WHERE SYMBOL '=' rx1
  100    | rx1

  101 lx0: lx0 WHERE SYMBOL '=' lx1
  102    | lx1

  103 rx1: lx2 SETQ rx1
  104    | rx2

  105 lx1: lx2 SETQ lx1
  106    | lx2

  107 rx2tail: rx3
  108        | lx3 OR rx2tail

  109 rx2: lx3 OR rx2tail
  110    | rx3

  111 lx2tail: lx3
  112        | lx3 OR lx2tail

  113 lx2: lx3 OR lx2tail
  114    | lx3

  115 rx3tail: rx4
  116        | lx4 AND rx3tail

  117 rx3: lx4 AND rx3tail
  118    | rx4

  119 lx3tail: lx4
  120        | lx4 AND lx3tail

  121 lx3: lx4 AND lx3tail
  122    | lx4

  123 rx4: NOT rx4
  124    | rx5

  125 lx4: NOT lx4
  126    | lx5

  127 rx5: lx6 MEMBER ry6
  128    | lx6 MEMQ ry6
  129    | lx6 '=' ry6
  130    | lx6 NEQ ry6
  131    | lx6 EQ ry6
  132    | lx6 GEQ ry6
  133    | lx6 '>' ry6
  134    | lx6 LEQ ry6
  135    | lx6 '<' ry6
  136    | lx6 FREEOF ry6
  137    | rx6

  138 lx5: lx6 MEMBER ly6
  139    | lx6 MEMQ ly6
  140    | lx6 '=' ly6
  141    | lx6 NEQ ly6
  142    | lx6 EQ ly6
  143    | lx6 GEQ ly6
  144    | lx6 '>' ly6
  145    | lx6 LEQ ly6
  146    | lx6 '<' ly6
  147    | lx6 FREEOF ly6
  148    | lx6

  149 ry6: NOT ry6
  150    | rx6

  151 ly6: NOT ly6
  152    | lx6

  153 rx6tail: ry6a
  154        | ly6a '+' rx6tail

  155 rx6: lx6a '+' rx6tail
  156    | rx6a

  157 lx6tail: ly6a
  158        | ly6a '+' lx6tail

  159 lx6: lx6a '+' lx6tail
  160    | lx6a

  161 ry6a: NOT ry6a
  162     | rx6a

  163 rx6a: lx6a '-' ry7
  164     | rx7

  165 ly6a: NOT ly6a
  166     | lx6a

  167 lx6a: lx6a '-' ly7
  168     | lx7

  169 ry7: NOT ry7
  170    | rx7

  171 rx7: '+' ry7
  172    | '-' ry7
  173    | rx8

  174 ly7: NOT ly7
  175    | lx7

  176 lx7: '+' ly7
  177    | '-' ly7
  178    | lx8

  179 rx8tail: ry9
  180        | ly9 '*' rx8tail

  181 rx8: lx9 '*' rx8tail
  182    | rx9

  183 lx8tail: ly9
  184        | ly9 '*' lx8tail

  185 lx8: lx9 '*' lx8tail
  186    | lx9

  187 ry9: NOT ry9
  188    | '+' ry9
  189    | '-' ry9
  190    | rx9

  191 rx9: lx9 '/' ry10
  192    | rx10

  193 ly9: NOT ly9
  194    | '+' ly9
  195    | '-' ly9
  196    | lx9

  197 lx9: lx9 '/' ly10
  198    | lx10

  199 ly10: NOT ly10
  200     | '+' ly10
  201     | '-' ly10
  202     | lx10

  203 lx10: lx11 '^' ly10
  204     | lx11

  205 ry10: NOT ry10
  206     | '+' ry10
  207     | '-' ry10
  208     | rx10

  209 rx10: lx11 '^' ry10
  210     | rx11

  211 ry11: NOT ry11
  212     | '+' ry11
  213     | '-' ry11
  214     | rx11

  215 rx11: x12 '.' ry11
  216     | if_stmt
  217     | for_stmt
  218     | while_stmt
  219     | repeat_stmt
  220     | return_stmt
  221     | goto_stmt
  222     | lambda_expr
  223     | proc_def
  224     | ENDSTAT

  225 ly11: NOT ly11
  226     | '+' ly11
  227     | '-' ly11
  228     | lx11

  229 lx11: x12 '.' ly11
  230     | x12

  231 arg_list: ')'
  232         | ',' expr arg_list

  233 parened: '(' expr ')'

  234 brace_list: '}'
  235           | ',' expr brace_list

  236 commaparened: '(' expr ',' expr arg_list

  237 x12notparened: x13b '[' expr ']'
  238              | x13b '(' ')'
  239              | x13b parened
  240              | x13b commaparened
  241              | x13b x12notparened
  242              | x13b

  243 x12: x12notparened
  244    | parened
  245    | '{' '}'
  246    | expr brace_list
  247    | SETQ commaparened
  248    | OR commaparened
  249    | AND commaparened
  250    | MEMBER commaparened
  251    | MEMQ commaparened
  252    | NEQ commaparened
  253    | EQ commaparened
  254    | GEQ commaparened
  255    | LEQ commaparened
  256    | FREEOF commaparened

  257 x13b: SYMBOL
  258     | NUMBER
  259     | STRING
  260     | LIST
  261     | group_expr
  262     | block_expr


Terminals, with rules where they appear

$end (0) 0
'$' (36) 8
'(' (40) 40 41 95 96 233 236 238
')' (41) 14 40 95 231 233 238
'*' (42) 31 180 181 184 185
'+' (43) 29 36 154 155 158 159 171 176 188 194 200 206 212 226
',' (44) 15 52 79 80 93 232 235 236
'-' (45) 30 37 163 167 172 177 189 195 201 207 213 227
'.' (46) 34 215 229
'/' (47) 32 191 197
':' (58) 57 87
';' (59) 7
'<' (60) 27 135 146
'=' (61) 21 99 101 129 140
'>' (62) 25 133 144
'[' (91) 237
']' (93) 237
'^' (94) 33 203 209
'{' (123) 245
'}' (125) 234 245
error (256)
SETQ (258) 16 64 103 105 247
AND (259) 18 116 117 120 121 249
OR (260) 17 108 109 112 113 248
NOT (261) 35 123 125 149 151 161 165 169 174 187 193 199 205 211 225
MEMBER (262) 19 127 138 250
MEMQ (263) 20 128 139 251
NEQ (264) 22 130 141 252
EQ (265) 23 131 142 253
GEQ (266) 24 132 143 254
LEQ (267) 26 134 145 255
FREEOF (268) 28 136 147 256
SYMBOLIC (269) 9
ALGEBRAIC (270) 10
EXPR (271) 11
MACRO (272) 12
SMACRO (273) 13
PROCEDURE (274) 44 45 46 47
FOR (275) 64 65
STEP (276) 58
UNTIL (277) 58 68
EACH (278) 65
FOREACH (279) 66
IN (280) 49 62
ON (281) 50 63
DO (282) 59 67
COLLECT (283) 61
SUM (284) 60
IF (285) 55 56
THEN (286) 55 56
ELSE (287) 55
REPEAT (288) 68
WHILE (289) 67
BEGIN (290) 90 91
END (291) 5 6 85 86
ENDFILE (292) 1
LSECT (293) 77
RSECT (294) 74 75
GO (295) 72 73
TO (296) 73
GOTO (297) 71
SCALAR (298) 81
INTEGER (299) 80 82
LAMBDA (300) 94 95 96
SYMBOL (301) 15 38 39 40 41 42 43 64 65 66 71 72 73 79 81 82 87 93
    94 96 99 101 257
NUMBER (302) 258
STRING (303) 259
LIST (304) 260
RETURN (305) 69 70
WHERE (306) 99 101
RLISTAT (307) 48
ENDSTAT (308) 224
HASHIF (309)
HASHELSE (310)
HASHELIF (311)
HASHENDIF (312)


Nonterminals, with rules where they appear

$accept (77)
    on left: 0
wholefile (78)
    on left: 1 2, on right: 0 2
command (79)
    on left: 3 4 5 6, on right: 2
sep (80)
    on left: 7 8, on right: 3 4 6 44 45 46 47 75 76 78 88 89 92 95
    96
proc_type (81)
    on left: 9 10, on right: 4 45 47
proc_qual (82)
    on left: 11 12 13, on right: 46 47
sym_list (83)
    on left: 14 15, on right: 15 41 96
infix (84)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
    34, on right: 43
prefix (85)
    on left: 35 36 37, on right: 42
proc_head (86)
    on left: 38 39 40 41 42 43, on right: 44 45 46 47
proc_def (87)
    on left: 44 45 46 47, on right: 223
rlistat (88)
    on left: 48 49 50, on right: 54
rltail (89)
    on left: 51 52, on right: 52 54
cmnd (90)
    on left: 53 54, on right: 3 44 45 46 47 55 56 64 65 66 67 68 76
    77 86 88 94 95 96
if_stmt (91)
    on left: 55 56, on right: 216
for_update (92)
    on left: 57 58, on right: 64
for_action (93)
    on left: 59 60 61, on right: 64 65 66
for_inon (94)
    on left: 62 63, on right: 65 66
for_stmt (95)
    on left: 64 65 66, on right: 217
while_stmt (96)
    on left: 67, on right: 218
repeat_stmt (97)
    on left: 68, on right: 219
return_stmt (98)
    on left: 69 70, on right: 220
goto_stmt (99)
    on left: 71 72 73, on right: 221
group_tail (100)
    on left: 74 75 76, on right: 76 77
group_expr (101)
    on left: 77, on right: 261
scalar_tail (102)
    on left: 78 79 80, on right: 79 80 81 82
scalar_def (103)
    on left: 81 82, on right: 83 84
scalar_defs (104)
    on left: 83 84, on right: 84 90
block_tail (105)
    on left: 85 86 87 88 89, on right: 87 88 89 90 91
block_expr (106)
    on left: 90 91, on right: 262
lambda_vars (107)
    on left: 92 93, on right: 93 94
lambda_expr (108)
    on left: 94 95 96, on right: 222
expr (109)
    on left: 97 98, on right: 51 52 53 55 56 57 58 64 65 66 67 68 70
    232 233 235 236 237 246
rx0 (110)
    on left: 99 100, on right: 97
lx0 (111)
    on left: 101 102, on right: 98 99 101
rx1 (112)
    on left: 103 104, on right: 99 100 103
lx1 (113)
    on left: 105 106, on right: 101 102 105
rx2tail (114)
    on left: 107 108, on right: 108 109
rx2 (115)
    on left: 109 110, on right: 104
lx2tail (116)
    on left: 111 112, on right: 112 113
lx2 (117)
    on left: 113 114, on right: 103 105 106
rx3tail (118)
    on left: 115 116, on right: 116 117
rx3 (119)
    on left: 117 118, on right: 107 110
lx3tail (120)
    on left: 119 120, on right: 120 121
lx3 (121)
    on left: 121 122, on right: 108 109 111 112 113 114
rx4 (122)
    on left: 123 124, on right: 115 118 123
lx4 (123)
    on left: 125 126, on right: 116 117 119 120 121 122 125
rx5 (124)
    on left: 127 128 129 130 131 132 133 134 135 136 137,
    on right: 124
lx5 (125)
    on left: 138 139 140 141 142 143 144 145 146 147 148,
    on right: 126
ry6 (126)
    on left: 149 150, on right: 127 128 129 130 131 132 133 134 135
    136 149
ly6 (127)
    on left: 151 152, on right: 138 139 140 141 142 143 144 145 146
    147 151
rx6tail (128)
    on left: 153 154, on right: 154 155
rx6 (129)
    on left: 155 156, on right: 137 150
lx6tail (130)
    on left: 157 158, on right: 158 159
lx6 (131)
    on left: 159 160, on right: 127 128 129 130 131 132 133 134 135
    136 138 139 140 141 142 143 144 145 146 147 148 152
ry6a (132)
    on left: 161 162, on right: 153 161
rx6a (133)
    on left: 163 164, on right: 156 162
ly6a (134)
    on left: 165 166, on right: 154 157 158 165
lx6a (135)
    on left: 167 168, on right: 155 159 160 163 166 167
ry7 (136)
    on left: 169 170, on right: 163 169 171 172
rx7 (137)
    on left: 171 172 173, on right: 164 170
ly7 (138)
    on left: 174 175, on right: 167 174 176 177
lx7 (139)
    on left: 176 177 178, on right: 168 175
rx8tail (140)
    on left: 179 180, on right: 180 181
rx8 (141)
    on left: 181 182, on right: 173
lx8tail (142)
    on left: 183 184, on right: 184 185
lx8 (143)
    on left: 185 186, on right: 178
ry9 (144)
    on left: 187 188 189 190, on right: 179 187 188 189
rx9 (145)
    on left: 191 192, on right: 182 190
ly9 (146)
    on left: 193 194 195 196, on right: 180 183 184 193 194 195
lx9 (147)
    on left: 197 198, on right: 181 185 186 191 196 197
ly10 (148)
    on left: 199 200 201 202, on right: 197 199 200 201 203
lx10 (149)
    on left: 203 204, on right: 198 202
ry10 (150)
    on left: 205 206 207 208, on right: 191 205 206 207 209
rx10 (151)
    on left: 209 210, on right: 192 208
ry11 (152)
    on left: 211 212 213 214, on right: 211 212 213 215
rx11 (153)
    on left: 215 216 217 218 219 220 221 222 223 224,
    on right: 210 214
ly11 (154)
    on left: 225 226 227 228, on right: 225 226 227 229
lx11 (155)
    on left: 229 230, on right: 203 204 209 228
arg_list (156)
    on left: 231 232, on right: 232 236
parened (157)
    on left: 233, on right: 239 244
brace_list (158)
    on left: 234 235, on right: 235 246
commaparened (159)
    on left: 236, on right: 240 247 248 249 250 251 252 253 254 255
    256
x12notparened (160)
    on left: 237 238 239 240 241 242, on right: 241 243
x12 (161)
    on left: 243 244 245 246 247 248 249 250 251 252 253 254 255 256
   , on right: 215 229 230
x13b (162)
    on left: 257 258 259 260 261 262, on right: 237 238 239 240 241
    242


state 0

    0 $accept: . wholefile $end

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IN         shift, and go to state 20
    ON         shift, and go to state 21
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    END        shift, and go to state 26
    ENDFILE    shift, and go to state 27
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    RLISTAT    shift, and go to state 37
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    wholefile      go to state 43
    command        go to state 44
    proc_type      go to state 45
    proc_qual      go to state 46
    proc_def       go to state 47
    rlistat        go to state 48
    cmnd           go to state 49
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 59
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 1

  247 x12: SETQ . commaparened

    '('  shift, and go to state 90

    commaparened  go to state 91


state 2

  249 x12: AND . commaparened

    '('  shift, and go to state 90

    commaparened  go to state 92


state 3

  248 x12: OR . commaparened

    '('  shift, and go to state 90

    commaparened  go to state 93


state 4

  123 rx4: NOT . rx4
  125 lx4: NOT . lx4

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 96
    lx4            go to state 97
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 5

  250 x12: MEMBER . commaparened

    '('  shift, and go to state 90

    commaparened  go to state 98


state 6

  251 x12: MEMQ . commaparened

    '('  shift, and go to state 90

    commaparened  go to state 99


state 7

  252 x12: NEQ . commaparened

    '('  shift, and go to state 90

    commaparened  go to state 100


state 8

  253 x12: EQ . commaparened

    '('  shift, and go to state 90

    commaparened  go to state 101


state 9

  254 x12: GEQ . commaparened

    '('  shift, and go to state 90

    commaparened  go to state 102


state 10

  255 x12: LEQ . commaparened

    '('  shift, and go to state 90

    commaparened  go to state 103


state 11

  256 x12: FREEOF . commaparened

    '('  shift, and go to state 90

    commaparened  go to state 104


state 12

    9 proc_type: SYMBOLIC .

    $default  reduce using rule 9 (proc_type)


state 13

   10 proc_type: ALGEBRAIC .

    $default  reduce using rule 10 (proc_type)


state 14

   11 proc_qual: EXPR .

    $default  reduce using rule 11 (proc_qual)


state 15

   12 proc_qual: MACRO .

    $default  reduce using rule 12 (proc_qual)


state 16

   13 proc_qual: SMACRO .

    $default  reduce using rule 13 (proc_qual)


state 17

   44 proc_def: PROCEDURE . proc_head sep cmnd

    NOT     shift, and go to state 105
    SYMBOL  shift, and go to state 106
    '+'     shift, and go to state 107
    '-'     shift, and go to state 108

    prefix     go to state 109
    proc_head  go to state 110


state 18

   64 for_stmt: FOR . SYMBOL SETQ expr for_update for_action cmnd
   65         | FOR . EACH SYMBOL for_inon expr for_action cmnd

    EACH    shift, and go to state 111
    SYMBOL  shift, and go to state 112


state 19

   66 for_stmt: FOREACH . SYMBOL for_inon expr for_action cmnd

    SYMBOL  shift, and go to state 113


state 20

   49 rlistat: IN .

    $default  reduce using rule 49 (rlistat)


state 21

   50 rlistat: ON .

    $default  reduce using rule 50 (rlistat)


state 22

   55 if_stmt: IF . expr THEN cmnd ELSE cmnd
   56        | IF . expr THEN cmnd

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 114
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 23

   68 repeat_stmt: REPEAT . cmnd UNTIL expr

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IN         shift, and go to state 20
    ON         shift, and go to state 21
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    RLISTAT    shift, and go to state 37
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    rlistat        go to state 48
    cmnd           go to state 115
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 59
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 24

   67 while_stmt: WHILE . expr DO cmnd

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 116
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 25

   90 block_expr: BEGIN . scalar_defs block_tail
   91           | BEGIN . block_tail

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IN         shift, and go to state 20
    ON         shift, and go to state 21
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    END        shift, and go to state 117
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    SCALAR     shift, and go to state 118
    INTEGER    shift, and go to state 119
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 120
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    RLISTAT    shift, and go to state 37
    ENDSTAT    shift, and go to state 38
    ';'        shift, and go to state 121
    '$'        shift, and go to state 122
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    sep            go to state 123
    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    rlistat        go to state 48
    cmnd           go to state 124
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    scalar_def     go to state 125
    scalar_defs    go to state 126
    block_tail     go to state 127
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 59
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 26

    5 command: END .
    6        | END . sep

    ';'  shift, and go to state 121
    '$'  shift, and go to state 122

    $default  reduce using rule 5 (command)

    sep  go to state 128


state 27

    1 wholefile: ENDFILE .

    $default  reduce using rule 1 (wholefile)


state 28

   77 group_expr: LSECT . cmnd group_tail

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IN         shift, and go to state 20
    ON         shift, and go to state 21
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    RLISTAT    shift, and go to state 37
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    rlistat        go to state 48
    cmnd           go to state 129
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 59
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 29

   72 goto_stmt: GO . SYMBOL
   73          | GO . TO SYMBOL

    TO      shift, and go to state 130
    SYMBOL  shift, and go to state 131


state 30

   71 goto_stmt: GOTO . SYMBOL

    SYMBOL  shift, and go to state 132


state 31

   94 lambda_expr: LAMBDA . SYMBOL lambda_vars cmnd
   95            | LAMBDA . '(' ')' sep cmnd
   96            | LAMBDA . '(' SYMBOL sym_list sep cmnd

    SYMBOL  shift, and go to state 133
    '('     shift, and go to state 134


state 32

  257 x13b: SYMBOL .

    $default  reduce using rule 257 (x13b)


state 33

  258 x13b: NUMBER .

    $default  reduce using rule 258 (x13b)


state 34

  259 x13b: STRING .

    $default  reduce using rule 259 (x13b)


state 35

  260 x13b: LIST .

    $default  reduce using rule 260 (x13b)


state 36

   69 return_stmt: RETURN .
   70            | RETURN . expr

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    $default  reduce using rule 69 (return_stmt)

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 135
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 37

   48 rlistat: RLISTAT .

    $default  reduce using rule 48 (rlistat)


state 38

  224 rx11: ENDSTAT .

    $default  reduce using rule 224 (rx11)


state 39

  171 rx7: '+' . ry7
  176 lx7: '+' . ly7

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 136
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    ry7            go to state 137
    rx7            go to state 138
    ly7            go to state 139
    lx7            go to state 140
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 40

  172 rx7: '-' . ry7
  177 lx7: '-' . ly7

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 136
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    ry7            go to state 141
    rx7            go to state 138
    ly7            go to state 142
    lx7            go to state 140
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 41

  233 parened: '(' . expr ')'

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 143
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 42

  245 x12: '{' . '}'

    '}'  shift, and go to state 144


state 43

    0 $accept: wholefile . $end

    $end  shift, and go to state 145


state 44

    2 wholefile: command . wholefile

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IN         shift, and go to state 20
    ON         shift, and go to state 21
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    END        shift, and go to state 26
    ENDFILE    shift, and go to state 27
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    RLISTAT    shift, and go to state 37
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    wholefile      go to state 146
    command        go to state 44
    proc_type      go to state 45
    proc_qual      go to state 46
    proc_def       go to state 47
    rlistat        go to state 48
    cmnd           go to state 49
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 59
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 45

    4 command: proc_type . sep
   45 proc_def: proc_type . PROCEDURE proc_head sep cmnd
   47         | proc_type . proc_qual PROCEDURE proc_head sep cmnd

    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 147
    ';'        shift, and go to state 121
    '$'        shift, and go to state 122

    sep        go to state 148
    proc_qual  go to state 149


state 46

   46 proc_def: proc_qual . PROCEDURE proc_head sep cmnd

    PROCEDURE  shift, and go to state 150


state 47

  223 rx11: proc_def .

    $default  reduce using rule 223 (rx11)


state 48

   54 cmnd: rlistat . rltail

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    rltail         go to state 151
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 152
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 49

    3 command: cmnd . sep

    ';'  shift, and go to state 121
    '$'  shift, and go to state 122

    sep  go to state 153


state 50

  216 rx11: if_stmt .

    $default  reduce using rule 216 (rx11)


state 51

  217 rx11: for_stmt .

    $default  reduce using rule 217 (rx11)


state 52

  218 rx11: while_stmt .

    $default  reduce using rule 218 (rx11)


state 53

  219 rx11: repeat_stmt .

    $default  reduce using rule 219 (rx11)


state 54

  220 rx11: return_stmt .

    $default  reduce using rule 220 (rx11)


state 55

  221 rx11: goto_stmt .

    $default  reduce using rule 221 (rx11)


state 56

  261 x13b: group_expr .

    $default  reduce using rule 261 (x13b)


state 57

  262 x13b: block_expr .

    $default  reduce using rule 262 (x13b)


state 58

  222 rx11: lambda_expr .

    $default  reduce using rule 222 (rx11)


state 59

   53 cmnd: expr .
  246 x12: expr . brace_list

    ','  shift, and go to state 154
    '}'  shift, and go to state 155

    ','       [reduce using rule 53 (cmnd)]
    '}'       [reduce using rule 53 (cmnd)]
    $default  reduce using rule 53 (cmnd)

    brace_list  go to state 156


state 60

   97 expr: rx0 .

    $default  reduce using rule 97 (expr)


state 61

   98 expr: lx0 .
   99 rx0: lx0 . WHERE SYMBOL '=' rx1
  101 lx0: lx0 . WHERE SYMBOL '=' lx1

    WHERE  shift, and go to state 157

    $default  reduce using rule 98 (expr)


state 62

  100 rx0: rx1 .

    $default  reduce using rule 100 (rx0)


state 63

  102 lx0: lx1 .

    $default  reduce using rule 102 (lx0)


state 64

  104 rx1: rx2 .

    $default  reduce using rule 104 (rx1)


state 65

  103 rx1: lx2 . SETQ rx1
  105 lx1: lx2 . SETQ lx1
  106    | lx2 .

    SETQ  shift, and go to state 158

    $default  reduce using rule 106 (lx1)


state 66

  110 rx2: rx3 .

    $default  reduce using rule 110 (rx2)


state 67

  109 rx2: lx3 . OR rx2tail
  113 lx2: lx3 . OR lx2tail
  114    | lx3 .

    OR  shift, and go to state 159

    $default  reduce using rule 114 (lx2)


state 68

  118 rx3: rx4 .

    $default  reduce using rule 118 (rx3)


state 69

  117 rx3: lx4 . AND rx3tail
  121 lx3: lx4 . AND lx3tail
  122    | lx4 .

    AND  shift, and go to state 160

    $default  reduce using rule 122 (lx3)


state 70

  124 rx4: rx5 .

    $default  reduce using rule 124 (rx4)


state 71

  126 lx4: lx5 .

    $default  reduce using rule 126 (lx4)


state 72

  137 rx5: rx6 .

    $default  reduce using rule 137 (rx5)


state 73

  127 rx5: lx6 . MEMBER ry6
  128    | lx6 . MEMQ ry6
  129    | lx6 . '=' ry6
  130    | lx6 . NEQ ry6
  131    | lx6 . EQ ry6
  132    | lx6 . GEQ ry6
  133    | lx6 . '>' ry6
  134    | lx6 . LEQ ry6
  135    | lx6 . '<' ry6
  136    | lx6 . FREEOF ry6
  138 lx5: lx6 . MEMBER ly6
  139    | lx6 . MEMQ ly6
  140    | lx6 . '=' ly6
  141    | lx6 . NEQ ly6
  142    | lx6 . EQ ly6
  143    | lx6 . GEQ ly6
  144    | lx6 . '>' ly6
  145    | lx6 . LEQ ly6
  146    | lx6 . '<' ly6
  147    | lx6 . FREEOF ly6
  148    | lx6 .

    MEMBER  shift, and go to state 161
    MEMQ    shift, and go to state 162
    NEQ     shift, and go to state 163
    EQ      shift, and go to state 164
    GEQ     shift, and go to state 165
    LEQ     shift, and go to state 166
    FREEOF  shift, and go to state 167
    '='     shift, and go to state 168
    '>'     shift, and go to state 169
    '<'     shift, and go to state 170

    $default  reduce using rule 148 (lx5)


state 74

  156 rx6: rx6a .

    $default  reduce using rule 156 (rx6)


state 75

  155 rx6: lx6a . '+' rx6tail
  159 lx6: lx6a . '+' lx6tail
  160    | lx6a .
  163 rx6a: lx6a . '-' ry7
  167 lx6a: lx6a . '-' ly7

    '+'  shift, and go to state 171
    '-'  shift, and go to state 172

    $default  reduce using rule 160 (lx6)


state 76

  164 rx6a: rx7 .

    $default  reduce using rule 164 (rx6a)


state 77

  168 lx6a: lx7 .

    $default  reduce using rule 168 (lx6a)


state 78

  173 rx7: rx8 .

    $default  reduce using rule 173 (rx7)


state 79

  178 lx7: lx8 .

    $default  reduce using rule 178 (lx7)


state 80

  182 rx8: rx9 .

    $default  reduce using rule 182 (rx8)


state 81

  181 rx8: lx9 . '*' rx8tail
  185 lx8: lx9 . '*' lx8tail
  186    | lx9 .
  191 rx9: lx9 . '/' ry10
  197 lx9: lx9 . '/' ly10

    '*'  shift, and go to state 173
    '/'  shift, and go to state 174

    $default  reduce using rule 186 (lx8)


state 82

  198 lx9: lx10 .

    $default  reduce using rule 198 (lx9)


state 83

  192 rx9: rx10 .

    $default  reduce using rule 192 (rx9)


state 84

  210 rx10: rx11 .

    $default  reduce using rule 210 (rx10)


state 85

  203 lx10: lx11 . '^' ly10
  204     | lx11 .
  209 rx10: lx11 . '^' ry10

    '^'  shift, and go to state 175

    $default  reduce using rule 204 (lx10)


state 86

  244 x12: parened .

    $default  reduce using rule 244 (x12)


state 87

  243 x12: x12notparened .

    $default  reduce using rule 243 (x12)


state 88

  215 rx11: x12 . '.' ry11
  229 lx11: x12 . '.' ly11
  230     | x12 .

    '.'  shift, and go to state 176

    $default  reduce using rule 230 (lx11)


state 89

  237 x12notparened: x13b . '[' expr ']'
  238              | x13b . '(' ')'
  239              | x13b . parened
  240              | x13b . commaparened
  241              | x13b . x12notparened
  242              | x13b .

    BEGIN   shift, and go to state 25
    LSECT   shift, and go to state 28
    SYMBOL  shift, and go to state 32
    NUMBER  shift, and go to state 33
    STRING  shift, and go to state 34
    LIST    shift, and go to state 35
    '('     shift, and go to state 177
    '['     shift, and go to state 178

    $default  reduce using rule 242 (x12notparened)

    group_expr     go to state 56
    block_expr     go to state 57
    parened        go to state 179
    commaparened   go to state 180
    x12notparened  go to state 181
    x13b           go to state 89


state 90

  236 commaparened: '(' . expr ',' expr arg_list

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 182
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 91

  247 x12: SETQ commaparened .

    $default  reduce using rule 247 (x12)


state 92

  249 x12: AND commaparened .

    $default  reduce using rule 249 (x12)


state 93

  248 x12: OR commaparened .

    $default  reduce using rule 248 (x12)


state 94

   45 proc_def: proc_type . PROCEDURE proc_head sep cmnd
   47         | proc_type . proc_qual PROCEDURE proc_head sep cmnd

    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 147

    proc_qual  go to state 149


state 95

  246 x12: expr . brace_list

    ','  shift, and go to state 154
    '}'  shift, and go to state 155

    brace_list  go to state 156


state 96

  118 rx3: rx4 .
  123 rx4: NOT rx4 .

    ','       reduce using rule 118 (rx3)
    ','       [reduce using rule 123 (rx4)]
    '}'       reduce using rule 118 (rx3)
    '}'       [reduce using rule 123 (rx4)]
    $default  reduce using rule 123 (rx4)


state 97

  117 rx3: lx4 . AND rx3tail
  121 lx3: lx4 . AND lx3tail
  122    | lx4 .
  125 lx4: NOT lx4 .

    AND  shift, and go to state 160

    SETQ      reduce using rule 122 (lx3)
    SETQ      [reduce using rule 125 (lx4)]
    AND       [reduce using rule 125 (lx4)]
    OR        reduce using rule 122 (lx3)
    OR        [reduce using rule 125 (lx4)]
    WHERE     reduce using rule 122 (lx3)
    WHERE     [reduce using rule 125 (lx4)]
    ','       reduce using rule 122 (lx3)
    ','       [reduce using rule 125 (lx4)]
    '}'       reduce using rule 122 (lx3)
    '}'       [reduce using rule 125 (lx4)]
    $default  reduce using rule 125 (lx4)


state 98

  250 x12: MEMBER commaparened .

    $default  reduce using rule 250 (x12)


state 99

  251 x12: MEMQ commaparened .

    $default  reduce using rule 251 (x12)


state 100

  252 x12: NEQ commaparened .

    $default  reduce using rule 252 (x12)


state 101

  253 x12: EQ commaparened .

    $default  reduce using rule 253 (x12)


state 102

  254 x12: GEQ commaparened .

    $default  reduce using rule 254 (x12)


state 103

  255 x12: LEQ commaparened .

    $default  reduce using rule 255 (x12)


state 104

  256 x12: FREEOF commaparened .

    $default  reduce using rule 256 (x12)


state 105

   35 prefix: NOT .

    $default  reduce using rule 35 (prefix)


state 106

   38 proc_head: SYMBOL .
   39          | SYMBOL . SYMBOL
   40          | SYMBOL . '(' ')'
   41          | SYMBOL . '(' SYMBOL sym_list
   43          | SYMBOL . infix SYMBOL

    SETQ    shift, and go to state 183
    AND     shift, and go to state 184
    OR      shift, and go to state 185
    MEMBER  shift, and go to state 186
    MEMQ    shift, and go to state 187
    NEQ     shift, and go to state 188
    EQ      shift, and go to state 189
    GEQ     shift, and go to state 190
    LEQ     shift, and go to state 191
    FREEOF  shift, and go to state 192
    SYMBOL  shift, and go to state 193
    '='     shift, and go to state 194
    '>'     shift, and go to state 195
    '<'     shift, and go to state 196
    '+'     shift, and go to state 197
    '-'     shift, and go to state 198
    '*'     shift, and go to state 199
    '/'     shift, and go to state 200
    '^'     shift, and go to state 201
    '.'     shift, and go to state 202
    '('     shift, and go to state 203

    $default  reduce using rule 38 (proc_head)

    infix  go to state 204


state 107

   36 prefix: '+' .

    $default  reduce using rule 36 (prefix)


state 108

   37 prefix: '-' .

    $default  reduce using rule 37 (prefix)


state 109

   42 proc_head: prefix . SYMBOL

    SYMBOL  shift, and go to state 205


state 110

   44 proc_def: PROCEDURE proc_head . sep cmnd

    ';'  shift, and go to state 121
    '$'  shift, and go to state 122

    sep  go to state 206


state 111

   65 for_stmt: FOR EACH . SYMBOL for_inon expr for_action cmnd

    SYMBOL  shift, and go to state 207


state 112

   64 for_stmt: FOR SYMBOL . SETQ expr for_update for_action cmnd

    SETQ  shift, and go to state 208


state 113

   66 for_stmt: FOREACH SYMBOL . for_inon expr for_action cmnd

    IN  shift, and go to state 209
    ON  shift, and go to state 210

    for_inon  go to state 211


state 114

   55 if_stmt: IF expr . THEN cmnd ELSE cmnd
   56        | IF expr . THEN cmnd
  246 x12: expr . brace_list

    THEN  shift, and go to state 212
    ','   shift, and go to state 154
    '}'   shift, and go to state 155

    brace_list  go to state 156


state 115

   68 repeat_stmt: REPEAT cmnd . UNTIL expr

    UNTIL  shift, and go to state 213


state 116

   67 while_stmt: WHILE expr . DO cmnd
  246 x12: expr . brace_list

    DO   shift, and go to state 214
    ','  shift, and go to state 154
    '}'  shift, and go to state 155

    brace_list  go to state 156


state 117

   85 block_tail: END .

    $default  reduce using rule 85 (block_tail)


state 118

   81 scalar_def: SCALAR . SYMBOL scalar_tail

    SYMBOL  shift, and go to state 215


state 119

   82 scalar_def: INTEGER . SYMBOL scalar_tail

    SYMBOL  shift, and go to state 216


state 120

   87 block_tail: SYMBOL . ':' block_tail
  257 x13b: SYMBOL .

    ':'  shift, and go to state 217

    $default  reduce using rule 257 (x13b)


state 121

    7 sep: ';' .

    $default  reduce using rule 7 (sep)


state 122

    8 sep: '$' .

    $default  reduce using rule 8 (sep)


state 123

   89 block_tail: sep . block_tail

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IN         shift, and go to state 20
    ON         shift, and go to state 21
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    END        shift, and go to state 117
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 120
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    RLISTAT    shift, and go to state 37
    ENDSTAT    shift, and go to state 38
    ';'        shift, and go to state 121
    '$'        shift, and go to state 122
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    sep            go to state 123
    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    rlistat        go to state 48
    cmnd           go to state 124
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_tail     go to state 218
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 59
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 124

   86 block_tail: cmnd . END
   88           | cmnd . sep block_tail

    END  shift, and go to state 219
    ';'  shift, and go to state 121
    '$'  shift, and go to state 122

    sep  go to state 220


state 125

   83 scalar_defs: scalar_def .

    $default  reduce using rule 83 (scalar_defs)


state 126

   84 scalar_defs: scalar_defs . scalar_def
   90 block_expr: BEGIN scalar_defs . block_tail

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IN         shift, and go to state 20
    ON         shift, and go to state 21
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    END        shift, and go to state 117
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    SCALAR     shift, and go to state 118
    INTEGER    shift, and go to state 119
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 120
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    RLISTAT    shift, and go to state 37
    ENDSTAT    shift, and go to state 38
    ';'        shift, and go to state 121
    '$'        shift, and go to state 122
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    sep            go to state 123
    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    rlistat        go to state 48
    cmnd           go to state 124
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    scalar_def     go to state 221
    block_tail     go to state 222
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 59
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 127

   91 block_expr: BEGIN block_tail .

    $default  reduce using rule 91 (block_expr)


state 128

    6 command: END sep .

    $default  reduce using rule 6 (command)


state 129

   77 group_expr: LSECT cmnd . group_tail

    RSECT  shift, and go to state 223
    ';'    shift, and go to state 121
    '$'    shift, and go to state 122

    sep         go to state 224
    group_tail  go to state 225


state 130

   73 goto_stmt: GO TO . SYMBOL

    SYMBOL  shift, and go to state 226


state 131

   72 goto_stmt: GO SYMBOL .

    $default  reduce using rule 72 (goto_stmt)


state 132

   71 goto_stmt: GOTO SYMBOL .

    $default  reduce using rule 71 (goto_stmt)


state 133

   94 lambda_expr: LAMBDA SYMBOL . lambda_vars cmnd

    ';'  shift, and go to state 121
    '$'  shift, and go to state 122
    ','  shift, and go to state 227

    sep          go to state 228
    lambda_vars  go to state 229


state 134

   95 lambda_expr: LAMBDA '(' . ')' sep cmnd
   96            | LAMBDA '(' . SYMBOL sym_list sep cmnd

    SYMBOL  shift, and go to state 230
    ')'     shift, and go to state 231


state 135

   70 return_stmt: RETURN expr .
  246 x12: expr . brace_list

    ','  shift, and go to state 154
    '}'  shift, and go to state 155

    ','       [reduce using rule 70 (return_stmt)]
    '}'       [reduce using rule 70 (return_stmt)]
    $default  reduce using rule 70 (return_stmt)

    brace_list  go to state 156


state 136

  123 rx4: NOT . rx4
  125 lx4: NOT . lx4
  169 ry7: NOT . ry7
  174 ly7: NOT . ly7

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 136
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 96
    lx4            go to state 97
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    ry7            go to state 232
    rx7            go to state 138
    ly7            go to state 233
    lx7            go to state 140
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 137

  171 rx7: '+' ry7 .

    $default  reduce using rule 171 (rx7)


state 138

  164 rx6a: rx7 .
  170 ry7: rx7 .

    ','       reduce using rule 164 (rx6a)
    ','       [reduce using rule 170 (ry7)]
    '}'       reduce using rule 164 (rx6a)
    '}'       [reduce using rule 170 (ry7)]
    $default  reduce using rule 170 (ry7)


state 139

  176 lx7: '+' ly7 .

    $default  reduce using rule 176 (lx7)


state 140

  168 lx6a: lx7 .
  175 ly7: lx7 .

    SETQ      reduce using rule 168 (lx6a)
    SETQ      [reduce using rule 175 (ly7)]
    AND       reduce using rule 168 (lx6a)
    AND       [reduce using rule 175 (ly7)]
    OR        reduce using rule 168 (lx6a)
    OR        [reduce using rule 175 (ly7)]
    MEMBER    reduce using rule 168 (lx6a)
    MEMBER    [reduce using rule 175 (ly7)]
    MEMQ      reduce using rule 168 (lx6a)
    MEMQ      [reduce using rule 175 (ly7)]
    NEQ       reduce using rule 168 (lx6a)
    NEQ       [reduce using rule 175 (ly7)]
    EQ        reduce using rule 168 (lx6a)
    EQ        [reduce using rule 175 (ly7)]
    GEQ       reduce using rule 168 (lx6a)
    GEQ       [reduce using rule 175 (ly7)]
    LEQ       reduce using rule 168 (lx6a)
    LEQ       [reduce using rule 175 (ly7)]
    FREEOF    reduce using rule 168 (lx6a)
    FREEOF    [reduce using rule 175 (ly7)]
    STEP      reduce using rule 175 (ly7)
    UNTIL     reduce using rule 175 (ly7)
    DO        reduce using rule 175 (ly7)
    COLLECT   reduce using rule 175 (ly7)
    SUM       reduce using rule 175 (ly7)
    THEN      reduce using rule 175 (ly7)
    ELSE      reduce using rule 175 (ly7)
    END       reduce using rule 175 (ly7)
    RSECT     reduce using rule 175 (ly7)
    WHERE     reduce using rule 168 (lx6a)
    WHERE     [reduce using rule 175 (ly7)]
    ';'       reduce using rule 175 (ly7)
    '$'       reduce using rule 175 (ly7)
    ')'       reduce using rule 175 (ly7)
    ','       reduce using rule 168 (lx6a)
    ','       [reduce using rule 175 (ly7)]
    '='       reduce using rule 168 (lx6a)
    '='       [reduce using rule 175 (ly7)]
    '>'       reduce using rule 168 (lx6a)
    '>'       [reduce using rule 175 (ly7)]
    '<'       reduce using rule 168 (lx6a)
    '<'       [reduce using rule 175 (ly7)]
    '+'       reduce using rule 168 (lx6a)
    '+'       [reduce using rule 175 (ly7)]
    '-'       reduce using rule 168 (lx6a)
    '-'       [reduce using rule 175 (ly7)]
    ':'       reduce using rule 175 (ly7)
    '}'       reduce using rule 168 (lx6a)
    '}'       [reduce using rule 175 (ly7)]
    ']'       reduce using rule 175 (ly7)
    $default  reduce using rule 168 (lx6a)


state 141

  172 rx7: '-' ry7 .

    $default  reduce using rule 172 (rx7)


state 142

  177 lx7: '-' ly7 .

    $default  reduce using rule 177 (lx7)


state 143

  233 parened: '(' expr . ')'
  246 x12: expr . brace_list

    ')'  shift, and go to state 234
    ','  shift, and go to state 154
    '}'  shift, and go to state 155

    brace_list  go to state 156


state 144

  245 x12: '{' '}' .

    $default  reduce using rule 245 (x12)


state 145

    0 $accept: wholefile $end .

    $default  accept


state 146

    2 wholefile: command wholefile .

    $default  reduce using rule 2 (wholefile)


state 147

   45 proc_def: proc_type PROCEDURE . proc_head sep cmnd

    NOT     shift, and go to state 105
    SYMBOL  shift, and go to state 106
    '+'     shift, and go to state 107
    '-'     shift, and go to state 108

    prefix     go to state 109
    proc_head  go to state 235


state 148

    4 command: proc_type sep .

    $default  reduce using rule 4 (command)


state 149

   47 proc_def: proc_type proc_qual . PROCEDURE proc_head sep cmnd

    PROCEDURE  shift, and go to state 236


state 150

   46 proc_def: proc_qual PROCEDURE . proc_head sep cmnd

    NOT     shift, and go to state 105
    SYMBOL  shift, and go to state 106
    '+'     shift, and go to state 107
    '-'     shift, and go to state 108

    prefix     go to state 109
    proc_head  go to state 237


state 151

   54 cmnd: rlistat rltail .

    $default  reduce using rule 54 (cmnd)


state 152

   51 rltail: expr .
   52       | expr . ',' rltail
  246 x12: expr . brace_list

    ','  shift, and go to state 238
    '}'  shift, and go to state 155

    ','       [reduce using rule 51 (rltail)]
    '}'       [reduce using rule 51 (rltail)]
    $default  reduce using rule 51 (rltail)

    brace_list  go to state 156


state 153

    3 command: cmnd sep .

    $default  reduce using rule 3 (command)


state 154

  235 brace_list: ',' . expr brace_list

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 239
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 155

  234 brace_list: '}' .

    $default  reduce using rule 234 (brace_list)


state 156

  246 x12: expr brace_list .

    $default  reduce using rule 246 (x12)


state 157

   99 rx0: lx0 WHERE . SYMBOL '=' rx1
  101 lx0: lx0 WHERE . SYMBOL '=' lx1

    SYMBOL  shift, and go to state 240


state 158

  103 rx1: lx2 SETQ . rx1
  105 lx1: lx2 SETQ . lx1

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 241
    lx1            go to state 242
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 159

  109 rx2: lx3 OR . rx2tail
  113 lx2: lx3 OR . lx2tail

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2tail        go to state 243
    rx2            go to state 64
    lx2tail        go to state 244
    lx2            go to state 65
    rx3            go to state 245
    lx3            go to state 246
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 160

  117 rx3: lx4 AND . rx3tail
  121 lx3: lx4 AND . lx3tail

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3tail        go to state 247
    rx3            go to state 66
    lx3tail        go to state 248
    lx3            go to state 67
    rx4            go to state 249
    lx4            go to state 250
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 161

  127 rx5: lx6 MEMBER . ry6
  138 lx5: lx6 MEMBER . ly6

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 251
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    ry6            go to state 252
    ly6            go to state 253
    rx6            go to state 254
    lx6            go to state 255
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 162

  128 rx5: lx6 MEMQ . ry6
  139 lx5: lx6 MEMQ . ly6

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 251
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    ry6            go to state 256
    ly6            go to state 257
    rx6            go to state 254
    lx6            go to state 255
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 163

  130 rx5: lx6 NEQ . ry6
  141 lx5: lx6 NEQ . ly6

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 251
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    ry6            go to state 258
    ly6            go to state 259
    rx6            go to state 254
    lx6            go to state 255
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 164

  131 rx5: lx6 EQ . ry6
  142 lx5: lx6 EQ . ly6

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 251
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    ry6            go to state 260
    ly6            go to state 261
    rx6            go to state 254
    lx6            go to state 255
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 165

  132 rx5: lx6 GEQ . ry6
  143 lx5: lx6 GEQ . ly6

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 251
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    ry6            go to state 262
    ly6            go to state 263
    rx6            go to state 254
    lx6            go to state 255
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 166

  134 rx5: lx6 LEQ . ry6
  145 lx5: lx6 LEQ . ly6

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 251
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    ry6            go to state 264
    ly6            go to state 265
    rx6            go to state 254
    lx6            go to state 255
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 167

  136 rx5: lx6 FREEOF . ry6
  147 lx5: lx6 FREEOF . ly6

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 251
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    ry6            go to state 266
    ly6            go to state 267
    rx6            go to state 254
    lx6            go to state 255
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 168

  129 rx5: lx6 '=' . ry6
  140 lx5: lx6 '=' . ly6

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 251
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    ry6            go to state 268
    ly6            go to state 269
    rx6            go to state 254
    lx6            go to state 255
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 169

  133 rx5: lx6 '>' . ry6
  144 lx5: lx6 '>' . ly6

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 251
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    ry6            go to state 270
    ly6            go to state 271
    rx6            go to state 254
    lx6            go to state 255
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 170

  135 rx5: lx6 '<' . ry6
  146 lx5: lx6 '<' . ly6

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 251
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    ry6            go to state 272
    ly6            go to state 273
    rx6            go to state 254
    lx6            go to state 255
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 171

  155 rx6: lx6a '+' . rx6tail
  159 lx6: lx6a '+' . lx6tail

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 274
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6tail        go to state 275
    rx6            go to state 72
    lx6tail        go to state 276
    lx6            go to state 73
    ry6a           go to state 277
    rx6a           go to state 278
    ly6a           go to state 279
    lx6a           go to state 280
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 172

  163 rx6a: lx6a '-' . ry7
  167 lx6a: lx6a '-' . ly7

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 136
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    ry7            go to state 281
    rx7            go to state 138
    ly7            go to state 282
    lx7            go to state 140
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 173

  181 rx8: lx9 '*' . rx8tail
  185 lx8: lx9 '*' . lx8tail

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 283
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 284
    '-'        shift, and go to state 285
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8tail        go to state 286
    rx8            go to state 78
    lx8tail        go to state 287
    lx8            go to state 79
    ry9            go to state 288
    rx9            go to state 289
    ly9            go to state 290
    lx9            go to state 291
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 174

  191 rx9: lx9 '/' . ry10
  197 lx9: lx9 '/' . ly10

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 292
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 293
    '-'        shift, and go to state 294
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    ly10           go to state 295
    lx10           go to state 296
    ry10           go to state 297
    rx10           go to state 298
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 175

  203 lx10: lx11 '^' . ly10
  209 rx10: lx11 '^' . ry10

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 292
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 293
    '-'        shift, and go to state 294
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    ly10           go to state 299
    lx10           go to state 296
    ry10           go to state 300
    rx10           go to state 298
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 176

  215 rx11: x12 '.' . ry11
  229 lx11: x12 '.' . ly11

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 301
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 302
    '-'        shift, and go to state 303
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    ry11           go to state 304
    rx11           go to state 305
    ly11           go to state 306
    lx11           go to state 307
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 177

  233 parened: '(' . expr ')'
  236 commaparened: '(' . expr ',' expr arg_list
  238 x12notparened: x13b '(' . ')'

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    ')'        shift, and go to state 308
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 309
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 178

  237 x12notparened: x13b '[' . expr ']'

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 310
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 179

  239 x12notparened: x13b parened .

    $default  reduce using rule 239 (x12notparened)


state 180

  240 x12notparened: x13b commaparened .

    $default  reduce using rule 240 (x12notparened)


state 181

  241 x12notparened: x13b x12notparened .

    $default  reduce using rule 241 (x12notparened)


state 182

  236 commaparened: '(' expr . ',' expr arg_list
  246 x12: expr . brace_list

    ','  shift, and go to state 311
    '}'  shift, and go to state 155

    brace_list  go to state 156


state 183

   16 infix: SETQ .

    $default  reduce using rule 16 (infix)


state 184

   18 infix: AND .

    $default  reduce using rule 18 (infix)


state 185

   17 infix: OR .

    $default  reduce using rule 17 (infix)


state 186

   19 infix: MEMBER .

    $default  reduce using rule 19 (infix)


state 187

   20 infix: MEMQ .

    $default  reduce using rule 20 (infix)


state 188

   22 infix: NEQ .

    $default  reduce using rule 22 (infix)


state 189

   23 infix: EQ .

    $default  reduce using rule 23 (infix)


state 190

   24 infix: GEQ .

    $default  reduce using rule 24 (infix)


state 191

   26 infix: LEQ .

    $default  reduce using rule 26 (infix)


state 192

   28 infix: FREEOF .

    $default  reduce using rule 28 (infix)


state 193

   39 proc_head: SYMBOL SYMBOL .

    $default  reduce using rule 39 (proc_head)


state 194

   21 infix: '=' .

    $default  reduce using rule 21 (infix)


state 195

   25 infix: '>' .

    $default  reduce using rule 25 (infix)


state 196

   27 infix: '<' .

    $default  reduce using rule 27 (infix)


state 197

   29 infix: '+' .

    $default  reduce using rule 29 (infix)


state 198

   30 infix: '-' .

    $default  reduce using rule 30 (infix)


state 199

   31 infix: '*' .

    $default  reduce using rule 31 (infix)


state 200

   32 infix: '/' .

    $default  reduce using rule 32 (infix)


state 201

   33 infix: '^' .

    $default  reduce using rule 33 (infix)


state 202

   34 infix: '.' .

    $default  reduce using rule 34 (infix)


state 203

   40 proc_head: SYMBOL '(' . ')'
   41          | SYMBOL '(' . SYMBOL sym_list

    SYMBOL  shift, and go to state 312
    ')'     shift, and go to state 313


state 204

   43 proc_head: SYMBOL infix . SYMBOL

    SYMBOL  shift, and go to state 314


state 205

   42 proc_head: prefix SYMBOL .

    $default  reduce using rule 42 (proc_head)


state 206

   44 proc_def: PROCEDURE proc_head sep . cmnd

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IN         shift, and go to state 20
    ON         shift, and go to state 21
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    RLISTAT    shift, and go to state 37
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    rlistat        go to state 48
    cmnd           go to state 315
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 59
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 207

   65 for_stmt: FOR EACH SYMBOL . for_inon expr for_action cmnd

    IN  shift, and go to state 209
    ON  shift, and go to state 210

    for_inon  go to state 316


state 208

   64 for_stmt: FOR SYMBOL SETQ . expr for_update for_action cmnd

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 317
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 209

   62 for_inon: IN .

    $default  reduce using rule 62 (for_inon)


state 210

   63 for_inon: ON .

    $default  reduce using rule 63 (for_inon)


state 211

   66 for_stmt: FOREACH SYMBOL for_inon . expr for_action cmnd

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 318
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 212

   55 if_stmt: IF expr THEN . cmnd ELSE cmnd
   56        | IF expr THEN . cmnd

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IN         shift, and go to state 20
    ON         shift, and go to state 21
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    RLISTAT    shift, and go to state 37
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    rlistat        go to state 48
    cmnd           go to state 319
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 59
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 213

   68 repeat_stmt: REPEAT cmnd UNTIL . expr

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 320
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 214

   67 while_stmt: WHILE expr DO . cmnd

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IN         shift, and go to state 20
    ON         shift, and go to state 21
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    RLISTAT    shift, and go to state 37
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    rlistat        go to state 48
    cmnd           go to state 321
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 59
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 215

   81 scalar_def: SCALAR SYMBOL . scalar_tail

    ';'  shift, and go to state 121
    '$'  shift, and go to state 122
    ','  shift, and go to state 322

    sep          go to state 323
    scalar_tail  go to state 324


state 216

   82 scalar_def: INTEGER SYMBOL . scalar_tail

    ';'  shift, and go to state 121
    '$'  shift, and go to state 122
    ','  shift, and go to state 322

    sep          go to state 323
    scalar_tail  go to state 325


state 217

   87 block_tail: SYMBOL ':' . block_tail

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IN         shift, and go to state 20
    ON         shift, and go to state 21
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    END        shift, and go to state 117
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 120
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    RLISTAT    shift, and go to state 37
    ENDSTAT    shift, and go to state 38
    ';'        shift, and go to state 121
    '$'        shift, and go to state 122
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    sep            go to state 123
    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    rlistat        go to state 48
    cmnd           go to state 124
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_tail     go to state 326
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 59
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 218

   89 block_tail: sep block_tail .

    $default  reduce using rule 89 (block_tail)


state 219

   86 block_tail: cmnd END .

    $default  reduce using rule 86 (block_tail)


state 220

   88 block_tail: cmnd sep . block_tail

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IN         shift, and go to state 20
    ON         shift, and go to state 21
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    END        shift, and go to state 117
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 120
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    RLISTAT    shift, and go to state 37
    ENDSTAT    shift, and go to state 38
    ';'        shift, and go to state 121
    '$'        shift, and go to state 122
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    sep            go to state 123
    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    rlistat        go to state 48
    cmnd           go to state 124
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_tail     go to state 327
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 59
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 221

   84 scalar_defs: scalar_defs scalar_def .

    $default  reduce using rule 84 (scalar_defs)


state 222

   90 block_expr: BEGIN scalar_defs block_tail .

    $default  reduce using rule 90 (block_expr)


state 223

   74 group_tail: RSECT .

    $default  reduce using rule 74 (group_tail)


state 224

   75 group_tail: sep . RSECT
   76           | sep . cmnd group_tail

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IN         shift, and go to state 20
    ON         shift, and go to state 21
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    RSECT      shift, and go to state 328
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    RLISTAT    shift, and go to state 37
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    rlistat        go to state 48
    cmnd           go to state 329
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 59
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 225

   77 group_expr: LSECT cmnd group_tail .

    $default  reduce using rule 77 (group_expr)


state 226

   73 goto_stmt: GO TO SYMBOL .

    $default  reduce using rule 73 (goto_stmt)


state 227

   93 lambda_vars: ',' . SYMBOL lambda_vars

    SYMBOL  shift, and go to state 330


state 228

   92 lambda_vars: sep .

    $default  reduce using rule 92 (lambda_vars)


state 229

   94 lambda_expr: LAMBDA SYMBOL lambda_vars . cmnd

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IN         shift, and go to state 20
    ON         shift, and go to state 21
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    RLISTAT    shift, and go to state 37
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    rlistat        go to state 48
    cmnd           go to state 331
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 59
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 230

   96 lambda_expr: LAMBDA '(' SYMBOL . sym_list sep cmnd

    ')'  shift, and go to state 332
    ','  shift, and go to state 333

    sym_list  go to state 334


state 231

   95 lambda_expr: LAMBDA '(' ')' . sep cmnd

    ';'  shift, and go to state 121
    '$'  shift, and go to state 122

    sep  go to state 335


state 232

  169 ry7: NOT ry7 .

    $default  reduce using rule 169 (ry7)


state 233

  174 ly7: NOT ly7 .

    $default  reduce using rule 174 (ly7)


state 234

  233 parened: '(' expr ')' .

    $default  reduce using rule 233 (parened)


state 235

   45 proc_def: proc_type PROCEDURE proc_head . sep cmnd

    ';'  shift, and go to state 121
    '$'  shift, and go to state 122

    sep  go to state 336


state 236

   47 proc_def: proc_type proc_qual PROCEDURE . proc_head sep cmnd

    NOT     shift, and go to state 105
    SYMBOL  shift, and go to state 106
    '+'     shift, and go to state 107
    '-'     shift, and go to state 108

    prefix     go to state 109
    proc_head  go to state 337


state 237

   46 proc_def: proc_qual PROCEDURE proc_head . sep cmnd

    ';'  shift, and go to state 121
    '$'  shift, and go to state 122

    sep  go to state 338


state 238

   52 rltail: expr ',' . rltail
  235 brace_list: ',' . expr brace_list

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    rltail         go to state 339
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 340
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 239

  235 brace_list: ',' expr . brace_list
  246 x12: expr . brace_list

    ','  shift, and go to state 154
    '}'  shift, and go to state 155

    brace_list  go to state 341


state 240

   99 rx0: lx0 WHERE SYMBOL . '=' rx1
  101 lx0: lx0 WHERE SYMBOL . '=' lx1

    '='  shift, and go to state 342


state 241

  100 rx0: rx1 .
  103 rx1: lx2 SETQ rx1 .

    ','       reduce using rule 100 (rx0)
    ','       [reduce using rule 103 (rx1)]
    '}'       reduce using rule 100 (rx0)
    '}'       [reduce using rule 103 (rx1)]
    $default  reduce using rule 103 (rx1)


state 242

  102 lx0: lx1 .
  105 lx1: lx2 SETQ lx1 .

    WHERE     reduce using rule 102 (lx0)
    WHERE     [reduce using rule 105 (lx1)]
    ','       reduce using rule 102 (lx0)
    ','       [reduce using rule 105 (lx1)]
    '}'       reduce using rule 102 (lx0)
    '}'       [reduce using rule 105 (lx1)]
    $default  reduce using rule 105 (lx1)


state 243

  109 rx2: lx3 OR rx2tail .

    $default  reduce using rule 109 (rx2)


state 244

  113 lx2: lx3 OR lx2tail .

    $default  reduce using rule 113 (lx2)


state 245

  107 rx2tail: rx3 .
  110 rx2: rx3 .

    ','       reduce using rule 107 (rx2tail)
    ','       [reduce using rule 110 (rx2)]
    '}'       reduce using rule 107 (rx2tail)
    '}'       [reduce using rule 110 (rx2)]
    $default  reduce using rule 107 (rx2tail)


state 246

  108 rx2tail: lx3 . OR rx2tail
  109 rx2: lx3 . OR rx2tail
  111 lx2tail: lx3 .
  112        | lx3 . OR lx2tail
  113 lx2: lx3 . OR lx2tail
  114    | lx3 .

    OR  shift, and go to state 343

    SETQ      reduce using rule 111 (lx2tail)
    SETQ      [reduce using rule 114 (lx2)]
    WHERE     reduce using rule 111 (lx2tail)
    WHERE     [reduce using rule 114 (lx2)]
    ','       reduce using rule 111 (lx2tail)
    ','       [reduce using rule 114 (lx2)]
    '}'       reduce using rule 111 (lx2tail)
    '}'       [reduce using rule 114 (lx2)]
    $default  reduce using rule 111 (lx2tail)


state 247

  117 rx3: lx4 AND rx3tail .

    $default  reduce using rule 117 (rx3)


state 248

  121 lx3: lx4 AND lx3tail .

    $default  reduce using rule 121 (lx3)


state 249

  115 rx3tail: rx4 .
  118 rx3: rx4 .

    ','       reduce using rule 115 (rx3tail)
    ','       [reduce using rule 118 (rx3)]
    '}'       reduce using rule 115 (rx3tail)
    '}'       [reduce using rule 118 (rx3)]
    $default  reduce using rule 115 (rx3tail)


state 250

  116 rx3tail: lx4 . AND rx3tail
  117 rx3: lx4 . AND rx3tail
  119 lx3tail: lx4 .
  120        | lx4 . AND lx3tail
  121 lx3: lx4 . AND lx3tail
  122    | lx4 .

    AND  shift, and go to state 344

    SETQ      reduce using rule 119 (lx3tail)
    SETQ      [reduce using rule 122 (lx3)]
    OR        reduce using rule 119 (lx3tail)
    OR        [reduce using rule 122 (lx3)]
    WHERE     reduce using rule 119 (lx3tail)
    WHERE     [reduce using rule 122 (lx3)]
    ','       reduce using rule 119 (lx3tail)
    ','       [reduce using rule 122 (lx3)]
    '}'       reduce using rule 119 (lx3tail)
    '}'       [reduce using rule 122 (lx3)]
    $default  reduce using rule 119 (lx3tail)


state 251

  123 rx4: NOT . rx4
  125 lx4: NOT . lx4
  149 ry6: NOT . ry6
  151 ly6: NOT . ly6

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 251
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 96
    lx4            go to state 97
    rx5            go to state 70
    lx5            go to state 71
    ry6            go to state 345
    ly6            go to state 346
    rx6            go to state 254
    lx6            go to state 255
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 252

  127 rx5: lx6 MEMBER ry6 .

    $default  reduce using rule 127 (rx5)


state 253

  138 lx5: lx6 MEMBER ly6 .

    $default  reduce using rule 138 (lx5)


state 254

  137 rx5: rx6 .
  150 ry6: rx6 .

    ','       reduce using rule 137 (rx5)
    ','       [reduce using rule 150 (ry6)]
    '}'       reduce using rule 137 (rx5)
    '}'       [reduce using rule 150 (ry6)]
    $default  reduce using rule 150 (ry6)


state 255

  127 rx5: lx6 . MEMBER ry6
  128    | lx6 . MEMQ ry6
  129    | lx6 . '=' ry6
  130    | lx6 . NEQ ry6
  131    | lx6 . EQ ry6
  132    | lx6 . GEQ ry6
  133    | lx6 . '>' ry6
  134    | lx6 . LEQ ry6
  135    | lx6 . '<' ry6
  136    | lx6 . FREEOF ry6
  138 lx5: lx6 . MEMBER ly6
  139    | lx6 . MEMQ ly6
  140    | lx6 . '=' ly6
  141    | lx6 . NEQ ly6
  142    | lx6 . EQ ly6
  143    | lx6 . GEQ ly6
  144    | lx6 . '>' ly6
  145    | lx6 . LEQ ly6
  146    | lx6 . '<' ly6
  147    | lx6 . FREEOF ly6
  148    | lx6 .
  152 ly6: lx6 .

    MEMBER  shift, and go to state 161
    MEMQ    shift, and go to state 162
    NEQ     shift, and go to state 163
    EQ      shift, and go to state 164
    GEQ     shift, and go to state 165
    LEQ     shift, and go to state 166
    FREEOF  shift, and go to state 167
    '='     shift, and go to state 168
    '>'     shift, and go to state 169
    '<'     shift, and go to state 170

    SETQ      reduce using rule 148 (lx5)
    SETQ      [reduce using rule 152 (ly6)]
    AND       reduce using rule 148 (lx5)
    AND       [reduce using rule 152 (ly6)]
    OR        reduce using rule 148 (lx5)
    OR        [reduce using rule 152 (ly6)]
    WHERE     reduce using rule 148 (lx5)
    WHERE     [reduce using rule 152 (ly6)]
    ','       reduce using rule 148 (lx5)
    ','       [reduce using rule 152 (ly6)]
    '}'       reduce using rule 148 (lx5)
    '}'       [reduce using rule 152 (ly6)]
    $default  reduce using rule 152 (ly6)


state 256

  128 rx5: lx6 MEMQ ry6 .

    $default  reduce using rule 128 (rx5)


state 257

  139 lx5: lx6 MEMQ ly6 .

    $default  reduce using rule 139 (lx5)


state 258

  130 rx5: lx6 NEQ ry6 .

    $default  reduce using rule 130 (rx5)


state 259

  141 lx5: lx6 NEQ ly6 .

    $default  reduce using rule 141 (lx5)


state 260

  131 rx5: lx6 EQ ry6 .

    $default  reduce using rule 131 (rx5)


state 261

  142 lx5: lx6 EQ ly6 .

    $default  reduce using rule 142 (lx5)


state 262

  132 rx5: lx6 GEQ ry6 .

    $default  reduce using rule 132 (rx5)


state 263

  143 lx5: lx6 GEQ ly6 .

    $default  reduce using rule 143 (lx5)


state 264

  134 rx5: lx6 LEQ ry6 .

    $default  reduce using rule 134 (rx5)


state 265

  145 lx5: lx6 LEQ ly6 .

    $default  reduce using rule 145 (lx5)


state 266

  136 rx5: lx6 FREEOF ry6 .

    $default  reduce using rule 136 (rx5)


state 267

  147 lx5: lx6 FREEOF ly6 .

    $default  reduce using rule 147 (lx5)


state 268

  129 rx5: lx6 '=' ry6 .

    $default  reduce using rule 129 (rx5)


state 269

  140 lx5: lx6 '=' ly6 .

    $default  reduce using rule 140 (lx5)


state 270

  133 rx5: lx6 '>' ry6 .

    $default  reduce using rule 133 (rx5)


state 271

  144 lx5: lx6 '>' ly6 .

    $default  reduce using rule 144 (lx5)


state 272

  135 rx5: lx6 '<' ry6 .

    $default  reduce using rule 135 (rx5)


state 273

  146 lx5: lx6 '<' ly6 .

    $default  reduce using rule 146 (lx5)


state 274

  123 rx4: NOT . rx4
  125 lx4: NOT . lx4
  161 ry6a: NOT . ry6a
  165 ly6a: NOT . ly6a

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 274
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 96
    lx4            go to state 97
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    ry6a           go to state 347
    rx6a           go to state 278
    ly6a           go to state 348
    lx6a           go to state 280
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 275

  155 rx6: lx6a '+' rx6tail .

    $default  reduce using rule 155 (rx6)


state 276

  159 lx6: lx6a '+' lx6tail .

    $default  reduce using rule 159 (lx6)


state 277

  153 rx6tail: ry6a .

    $default  reduce using rule 153 (rx6tail)


state 278

  156 rx6: rx6a .
  162 ry6a: rx6a .

    ','       reduce using rule 156 (rx6)
    ','       [reduce using rule 162 (ry6a)]
    '}'       reduce using rule 156 (rx6)
    '}'       [reduce using rule 162 (ry6a)]
    $default  reduce using rule 162 (ry6a)


state 279

  154 rx6tail: ly6a . '+' rx6tail
  157 lx6tail: ly6a .
  158        | ly6a . '+' lx6tail

    '+'  shift, and go to state 349

    $default  reduce using rule 157 (lx6tail)


state 280

  155 rx6: lx6a . '+' rx6tail
  159 lx6: lx6a . '+' lx6tail
  160    | lx6a .
  163 rx6a: lx6a . '-' ry7
  166 ly6a: lx6a .
  167 lx6a: lx6a . '-' ly7

    '+'  shift, and go to state 171
    '-'  shift, and go to state 172

    SETQ      reduce using rule 160 (lx6)
    SETQ      [reduce using rule 166 (ly6a)]
    AND       reduce using rule 160 (lx6)
    AND       [reduce using rule 166 (ly6a)]
    OR        reduce using rule 160 (lx6)
    OR        [reduce using rule 166 (ly6a)]
    MEMBER    reduce using rule 160 (lx6)
    MEMBER    [reduce using rule 166 (ly6a)]
    MEMQ      reduce using rule 160 (lx6)
    MEMQ      [reduce using rule 166 (ly6a)]
    NEQ       reduce using rule 160 (lx6)
    NEQ       [reduce using rule 166 (ly6a)]
    EQ        reduce using rule 160 (lx6)
    EQ        [reduce using rule 166 (ly6a)]
    GEQ       reduce using rule 160 (lx6)
    GEQ       [reduce using rule 166 (ly6a)]
    LEQ       reduce using rule 160 (lx6)
    LEQ       [reduce using rule 166 (ly6a)]
    FREEOF    reduce using rule 160 (lx6)
    FREEOF    [reduce using rule 166 (ly6a)]
    STEP      reduce using rule 166 (ly6a)
    UNTIL     reduce using rule 166 (ly6a)
    DO        reduce using rule 166 (ly6a)
    COLLECT   reduce using rule 166 (ly6a)
    SUM       reduce using rule 166 (ly6a)
    THEN      reduce using rule 166 (ly6a)
    ELSE      reduce using rule 166 (ly6a)
    END       reduce using rule 166 (ly6a)
    RSECT     reduce using rule 166 (ly6a)
    WHERE     reduce using rule 160 (lx6)
    WHERE     [reduce using rule 166 (ly6a)]
    ';'       reduce using rule 166 (ly6a)
    '$'       reduce using rule 166 (ly6a)
    ')'       reduce using rule 166 (ly6a)
    ','       reduce using rule 160 (lx6)
    ','       [reduce using rule 166 (ly6a)]
    '='       reduce using rule 160 (lx6)
    '='       [reduce using rule 166 (ly6a)]
    '>'       reduce using rule 160 (lx6)
    '>'       [reduce using rule 166 (ly6a)]
    '<'       reduce using rule 160 (lx6)
    '<'       [reduce using rule 166 (ly6a)]
    '+'       [reduce using rule 166 (ly6a)]
    ':'       reduce using rule 166 (ly6a)
    '}'       reduce using rule 160 (lx6)
    '}'       [reduce using rule 166 (ly6a)]
    ']'       reduce using rule 166 (ly6a)
    $default  reduce using rule 160 (lx6)


state 281

  163 rx6a: lx6a '-' ry7 .

    $default  reduce using rule 163 (rx6a)


state 282

  167 lx6a: lx6a '-' ly7 .

    $default  reduce using rule 167 (lx6a)


state 283

  123 rx4: NOT . rx4
  125 lx4: NOT . lx4
  187 ry9: NOT . ry9
  193 ly9: NOT . ly9

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 283
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 284
    '-'        shift, and go to state 285
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 96
    lx4            go to state 97
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    ry9            go to state 350
    rx9            go to state 289
    ly9            go to state 351
    lx9            go to state 291
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 284

  171 rx7: '+' . ry7
  176 lx7: '+' . ly7
  188 ry9: '+' . ry9
  194 ly9: '+' . ly9

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 352
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 284
    '-'        shift, and go to state 285
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    ry7            go to state 137
    rx7            go to state 138
    ly7            go to state 139
    lx7            go to state 140
    rx8            go to state 78
    lx8            go to state 79
    ry9            go to state 353
    rx9            go to state 289
    ly9            go to state 354
    lx9            go to state 291
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 285

  172 rx7: '-' . ry7
  177 lx7: '-' . ly7
  189 ry9: '-' . ry9
  195 ly9: '-' . ly9

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 352
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 284
    '-'        shift, and go to state 285
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    ry7            go to state 141
    rx7            go to state 138
    ly7            go to state 142
    lx7            go to state 140
    rx8            go to state 78
    lx8            go to state 79
    ry9            go to state 355
    rx9            go to state 289
    ly9            go to state 356
    lx9            go to state 291
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 286

  181 rx8: lx9 '*' rx8tail .

    $default  reduce using rule 181 (rx8)


state 287

  185 lx8: lx9 '*' lx8tail .

    $default  reduce using rule 185 (lx8)


state 288

  179 rx8tail: ry9 .

    $default  reduce using rule 179 (rx8tail)


state 289

  182 rx8: rx9 .
  190 ry9: rx9 .

    ','       reduce using rule 182 (rx8)
    ','       [reduce using rule 190 (ry9)]
    '}'       reduce using rule 182 (rx8)
    '}'       [reduce using rule 190 (ry9)]
    $default  reduce using rule 190 (ry9)


state 290

  180 rx8tail: ly9 . '*' rx8tail
  183 lx8tail: ly9 .
  184        | ly9 . '*' lx8tail

    '*'  shift, and go to state 357

    $default  reduce using rule 183 (lx8tail)


state 291

  181 rx8: lx9 . '*' rx8tail
  185 lx8: lx9 . '*' lx8tail
  186    | lx9 .
  191 rx9: lx9 . '/' ry10
  196 ly9: lx9 .
  197 lx9: lx9 . '/' ly10

    '*'  shift, and go to state 173
    '/'  shift, and go to state 174

    SETQ      reduce using rule 186 (lx8)
    SETQ      [reduce using rule 196 (ly9)]
    AND       reduce using rule 186 (lx8)
    AND       [reduce using rule 196 (ly9)]
    OR        reduce using rule 186 (lx8)
    OR        [reduce using rule 196 (ly9)]
    MEMBER    reduce using rule 186 (lx8)
    MEMBER    [reduce using rule 196 (ly9)]
    MEMQ      reduce using rule 186 (lx8)
    MEMQ      [reduce using rule 196 (ly9)]
    NEQ       reduce using rule 186 (lx8)
    NEQ       [reduce using rule 196 (ly9)]
    EQ        reduce using rule 186 (lx8)
    EQ        [reduce using rule 196 (ly9)]
    GEQ       reduce using rule 186 (lx8)
    GEQ       [reduce using rule 196 (ly9)]
    LEQ       reduce using rule 186 (lx8)
    LEQ       [reduce using rule 196 (ly9)]
    FREEOF    reduce using rule 186 (lx8)
    FREEOF    [reduce using rule 196 (ly9)]
    STEP      reduce using rule 196 (ly9)
    UNTIL     reduce using rule 196 (ly9)
    DO        reduce using rule 196 (ly9)
    COLLECT   reduce using rule 196 (ly9)
    SUM       reduce using rule 196 (ly9)
    THEN      reduce using rule 196 (ly9)
    ELSE      reduce using rule 196 (ly9)
    END       reduce using rule 196 (ly9)
    RSECT     reduce using rule 196 (ly9)
    WHERE     reduce using rule 186 (lx8)
    WHERE     [reduce using rule 196 (ly9)]
    ';'       reduce using rule 196 (ly9)
    '$'       reduce using rule 196 (ly9)
    ')'       reduce using rule 196 (ly9)
    ','       reduce using rule 186 (lx8)
    ','       [reduce using rule 196 (ly9)]
    '='       reduce using rule 186 (lx8)
    '='       [reduce using rule 196 (ly9)]
    '>'       reduce using rule 186 (lx8)
    '>'       [reduce using rule 196 (ly9)]
    '<'       reduce using rule 186 (lx8)
    '<'       [reduce using rule 196 (ly9)]
    '+'       reduce using rule 186 (lx8)
    '+'       [reduce using rule 196 (ly9)]
    '-'       reduce using rule 186 (lx8)
    '-'       [reduce using rule 196 (ly9)]
    '*'       [reduce using rule 196 (ly9)]
    ':'       reduce using rule 196 (ly9)
    '}'       reduce using rule 186 (lx8)
    '}'       [reduce using rule 196 (ly9)]
    ']'       reduce using rule 196 (ly9)
    $default  reduce using rule 186 (lx8)


state 292

  123 rx4: NOT . rx4
  125 lx4: NOT . lx4
  199 ly10: NOT . ly10
  205 ry10: NOT . ry10

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 292
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 293
    '-'        shift, and go to state 294
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 96
    lx4            go to state 97
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    ly10           go to state 358
    lx10           go to state 296
    ry10           go to state 359
    rx10           go to state 298
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 293

  171 rx7: '+' . ry7
  176 lx7: '+' . ly7
  200 ly10: '+' . ly10
  206 ry10: '+' . ry10

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 360
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 293
    '-'        shift, and go to state 294
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    ry7            go to state 137
    rx7            go to state 138
    ly7            go to state 139
    lx7            go to state 140
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    ly10           go to state 361
    lx10           go to state 296
    ry10           go to state 362
    rx10           go to state 298
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 294

  172 rx7: '-' . ry7
  177 lx7: '-' . ly7
  201 ly10: '-' . ly10
  207 ry10: '-' . ry10

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 360
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 293
    '-'        shift, and go to state 294
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    ry7            go to state 141
    rx7            go to state 138
    ly7            go to state 142
    lx7            go to state 140
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    ly10           go to state 363
    lx10           go to state 296
    ry10           go to state 364
    rx10           go to state 298
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 295

  197 lx9: lx9 '/' ly10 .

    $default  reduce using rule 197 (lx9)


state 296

  198 lx9: lx10 .
  202 ly10: lx10 .

    SETQ      reduce using rule 198 (lx9)
    SETQ      [reduce using rule 202 (ly10)]
    AND       reduce using rule 198 (lx9)
    AND       [reduce using rule 202 (ly10)]
    OR        reduce using rule 198 (lx9)
    OR        [reduce using rule 202 (ly10)]
    MEMBER    reduce using rule 198 (lx9)
    MEMBER    [reduce using rule 202 (ly10)]
    MEMQ      reduce using rule 198 (lx9)
    MEMQ      [reduce using rule 202 (ly10)]
    NEQ       reduce using rule 198 (lx9)
    NEQ       [reduce using rule 202 (ly10)]
    EQ        reduce using rule 198 (lx9)
    EQ        [reduce using rule 202 (ly10)]
    GEQ       reduce using rule 198 (lx9)
    GEQ       [reduce using rule 202 (ly10)]
    LEQ       reduce using rule 198 (lx9)
    LEQ       [reduce using rule 202 (ly10)]
    FREEOF    reduce using rule 198 (lx9)
    FREEOF    [reduce using rule 202 (ly10)]
    STEP      reduce using rule 202 (ly10)
    UNTIL     reduce using rule 202 (ly10)
    DO        reduce using rule 202 (ly10)
    COLLECT   reduce using rule 202 (ly10)
    SUM       reduce using rule 202 (ly10)
    THEN      reduce using rule 202 (ly10)
    ELSE      reduce using rule 202 (ly10)
    END       reduce using rule 202 (ly10)
    RSECT     reduce using rule 202 (ly10)
    WHERE     reduce using rule 198 (lx9)
    WHERE     [reduce using rule 202 (ly10)]
    ';'       reduce using rule 202 (ly10)
    '$'       reduce using rule 202 (ly10)
    ')'       reduce using rule 202 (ly10)
    ','       reduce using rule 198 (lx9)
    ','       [reduce using rule 202 (ly10)]
    '='       reduce using rule 198 (lx9)
    '='       [reduce using rule 202 (ly10)]
    '>'       reduce using rule 198 (lx9)
    '>'       [reduce using rule 202 (ly10)]
    '<'       reduce using rule 198 (lx9)
    '<'       [reduce using rule 202 (ly10)]
    '+'       reduce using rule 198 (lx9)
    '+'       [reduce using rule 202 (ly10)]
    '-'       reduce using rule 198 (lx9)
    '-'       [reduce using rule 202 (ly10)]
    '*'       reduce using rule 198 (lx9)
    '*'       [reduce using rule 202 (ly10)]
    '/'       reduce using rule 198 (lx9)
    '/'       [reduce using rule 202 (ly10)]
    ':'       reduce using rule 202 (ly10)
    '}'       reduce using rule 198 (lx9)
    '}'       [reduce using rule 202 (ly10)]
    ']'       reduce using rule 202 (ly10)
    $default  reduce using rule 198 (lx9)


state 297

  191 rx9: lx9 '/' ry10 .

    $default  reduce using rule 191 (rx9)


state 298

  192 rx9: rx10 .
  208 ry10: rx10 .

    ','       reduce using rule 192 (rx9)
    ','       [reduce using rule 208 (ry10)]
    '}'       reduce using rule 192 (rx9)
    '}'       [reduce using rule 208 (ry10)]
    $default  reduce using rule 208 (ry10)


state 299

  203 lx10: lx11 '^' ly10 .

    $default  reduce using rule 203 (lx10)


state 300

  209 rx10: lx11 '^' ry10 .

    $default  reduce using rule 209 (rx10)


state 301

  123 rx4: NOT . rx4
  125 lx4: NOT . lx4
  211 ry11: NOT . ry11
  225 ly11: NOT . ly11

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 301
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 302
    '-'        shift, and go to state 303
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 96
    lx4            go to state 97
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    ry11           go to state 365
    rx11           go to state 305
    ly11           go to state 366
    lx11           go to state 307
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 302

  171 rx7: '+' . ry7
  176 lx7: '+' . ly7
  212 ry11: '+' . ry11
  226 ly11: '+' . ly11

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 367
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 302
    '-'        shift, and go to state 303
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    ry7            go to state 137
    rx7            go to state 138
    ly7            go to state 139
    lx7            go to state 140
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    ry11           go to state 368
    rx11           go to state 305
    ly11           go to state 369
    lx11           go to state 307
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 303

  172 rx7: '-' . ry7
  177 lx7: '-' . ly7
  213 ry11: '-' . ry11
  227 ly11: '-' . ly11

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 367
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 302
    '-'        shift, and go to state 303
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    ry7            go to state 141
    rx7            go to state 138
    ly7            go to state 142
    lx7            go to state 140
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    ry11           go to state 370
    rx11           go to state 305
    ly11           go to state 371
    lx11           go to state 307
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 304

  215 rx11: x12 '.' ry11 .

    $default  reduce using rule 215 (rx11)


state 305

  210 rx10: rx11 .
  214 ry11: rx11 .

    ','       reduce using rule 210 (rx10)
    ','       [reduce using rule 214 (ry11)]
    '}'       reduce using rule 210 (rx10)
    '}'       [reduce using rule 214 (ry11)]
    $default  reduce using rule 214 (ry11)


state 306

  229 lx11: x12 '.' ly11 .

    $default  reduce using rule 229 (lx11)


state 307

  203 lx10: lx11 . '^' ly10
  204     | lx11 .
  209 rx10: lx11 . '^' ry10
  228 ly11: lx11 .

    '^'  shift, and go to state 175

    SETQ      reduce using rule 204 (lx10)
    SETQ      [reduce using rule 228 (ly11)]
    AND       reduce using rule 204 (lx10)
    AND       [reduce using rule 228 (ly11)]
    OR        reduce using rule 204 (lx10)
    OR        [reduce using rule 228 (ly11)]
    MEMBER    reduce using rule 204 (lx10)
    MEMBER    [reduce using rule 228 (ly11)]
    MEMQ      reduce using rule 204 (lx10)
    MEMQ      [reduce using rule 228 (ly11)]
    NEQ       reduce using rule 204 (lx10)
    NEQ       [reduce using rule 228 (ly11)]
    EQ        reduce using rule 204 (lx10)
    EQ        [reduce using rule 228 (ly11)]
    GEQ       reduce using rule 204 (lx10)
    GEQ       [reduce using rule 228 (ly11)]
    LEQ       reduce using rule 204 (lx10)
    LEQ       [reduce using rule 228 (ly11)]
    FREEOF    reduce using rule 204 (lx10)
    FREEOF    [reduce using rule 228 (ly11)]
    STEP      reduce using rule 228 (ly11)
    UNTIL     reduce using rule 228 (ly11)
    DO        reduce using rule 228 (ly11)
    COLLECT   reduce using rule 228 (ly11)
    SUM       reduce using rule 228 (ly11)
    THEN      reduce using rule 228 (ly11)
    ELSE      reduce using rule 228 (ly11)
    END       reduce using rule 228 (ly11)
    RSECT     reduce using rule 228 (ly11)
    WHERE     reduce using rule 204 (lx10)
    WHERE     [reduce using rule 228 (ly11)]
    ';'       reduce using rule 228 (ly11)
    '$'       reduce using rule 228 (ly11)
    ')'       reduce using rule 228 (ly11)
    ','       reduce using rule 204 (lx10)
    ','       [reduce using rule 228 (ly11)]
    '='       reduce using rule 204 (lx10)
    '='       [reduce using rule 228 (ly11)]
    '>'       reduce using rule 204 (lx10)
    '>'       [reduce using rule 228 (ly11)]
    '<'       reduce using rule 204 (lx10)
    '<'       [reduce using rule 228 (ly11)]
    '+'       reduce using rule 204 (lx10)
    '+'       [reduce using rule 228 (ly11)]
    '-'       reduce using rule 204 (lx10)
    '-'       [reduce using rule 228 (ly11)]
    '*'       reduce using rule 204 (lx10)
    '*'       [reduce using rule 228 (ly11)]
    '/'       reduce using rule 204 (lx10)
    '/'       [reduce using rule 228 (ly11)]
    '^'       [reduce using rule 228 (ly11)]
    ':'       reduce using rule 228 (ly11)
    '}'       reduce using rule 204 (lx10)
    '}'       [reduce using rule 228 (ly11)]
    ']'       reduce using rule 228 (ly11)
    $default  reduce using rule 204 (lx10)


state 308

  238 x12notparened: x13b '(' ')' .

    $default  reduce using rule 238 (x12notparened)


state 309

  233 parened: '(' expr . ')'
  236 commaparened: '(' expr . ',' expr arg_list
  246 x12: expr . brace_list

    ')'  shift, and go to state 234
    ','  shift, and go to state 311
    '}'  shift, and go to state 155

    brace_list  go to state 156


state 310

  237 x12notparened: x13b '[' expr . ']'
  246 x12: expr . brace_list

    ','  shift, and go to state 154
    '}'  shift, and go to state 155
    ']'  shift, and go to state 372

    brace_list  go to state 156


state 311

  235 brace_list: ',' . expr brace_list
  236 commaparened: '(' expr ',' . expr arg_list

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 373
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 312

   41 proc_head: SYMBOL '(' SYMBOL . sym_list

    ')'  shift, and go to state 332
    ','  shift, and go to state 333

    sym_list  go to state 374


state 313

   40 proc_head: SYMBOL '(' ')' .

    $default  reduce using rule 40 (proc_head)


state 314

   43 proc_head: SYMBOL infix SYMBOL .

    $default  reduce using rule 43 (proc_head)


state 315

   44 proc_def: PROCEDURE proc_head sep cmnd .

    $default  reduce using rule 44 (proc_def)


state 316

   65 for_stmt: FOR EACH SYMBOL for_inon . expr for_action cmnd

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 375
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 317

   64 for_stmt: FOR SYMBOL SETQ expr . for_update for_action cmnd
  246 x12: expr . brace_list

    STEP  shift, and go to state 376
    ','   shift, and go to state 154
    ':'   shift, and go to state 377
    '}'   shift, and go to state 155

    for_update  go to state 378
    brace_list  go to state 156


state 318

   66 for_stmt: FOREACH SYMBOL for_inon expr . for_action cmnd
  246 x12: expr . brace_list

    DO       shift, and go to state 379
    COLLECT  shift, and go to state 380
    SUM      shift, and go to state 381
    ','      shift, and go to state 154
    '}'      shift, and go to state 155

    for_action  go to state 382
    brace_list  go to state 156


state 319

   55 if_stmt: IF expr THEN cmnd . ELSE cmnd
   56        | IF expr THEN cmnd .

    ELSE  shift, and go to state 383

    ELSE      [reduce using rule 56 (if_stmt)]
    $default  reduce using rule 56 (if_stmt)


state 320

   68 repeat_stmt: REPEAT cmnd UNTIL expr .
  246 x12: expr . brace_list

    ','  shift, and go to state 154
    '}'  shift, and go to state 155

    ','       [reduce using rule 68 (repeat_stmt)]
    '}'       [reduce using rule 68 (repeat_stmt)]
    $default  reduce using rule 68 (repeat_stmt)

    brace_list  go to state 156


state 321

   67 while_stmt: WHILE expr DO cmnd .

    $default  reduce using rule 67 (while_stmt)


state 322

   79 scalar_tail: ',' . SYMBOL scalar_tail
   80            | ',' . INTEGER scalar_tail

    INTEGER  shift, and go to state 384
    SYMBOL   shift, and go to state 385


state 323

   78 scalar_tail: sep .

    $default  reduce using rule 78 (scalar_tail)


state 324

   81 scalar_def: SCALAR SYMBOL scalar_tail .

    $default  reduce using rule 81 (scalar_def)


state 325

   82 scalar_def: INTEGER SYMBOL scalar_tail .

    $default  reduce using rule 82 (scalar_def)


state 326

   87 block_tail: SYMBOL ':' block_tail .

    $default  reduce using rule 87 (block_tail)


state 327

   88 block_tail: cmnd sep block_tail .

    $default  reduce using rule 88 (block_tail)


state 328

   75 group_tail: sep RSECT .

    $default  reduce using rule 75 (group_tail)


state 329

   76 group_tail: sep cmnd . group_tail

    RSECT  shift, and go to state 223
    ';'    shift, and go to state 121
    '$'    shift, and go to state 122

    sep         go to state 224
    group_tail  go to state 386


state 330

   93 lambda_vars: ',' SYMBOL . lambda_vars

    ';'  shift, and go to state 121
    '$'  shift, and go to state 122
    ','  shift, and go to state 227

    sep          go to state 228
    lambda_vars  go to state 387


state 331

   94 lambda_expr: LAMBDA SYMBOL lambda_vars cmnd .

    $default  reduce using rule 94 (lambda_expr)


state 332

   14 sym_list: ')' .

    $default  reduce using rule 14 (sym_list)


state 333

   15 sym_list: ',' . SYMBOL sym_list

    SYMBOL  shift, and go to state 388


state 334

   96 lambda_expr: LAMBDA '(' SYMBOL sym_list . sep cmnd

    ';'  shift, and go to state 121
    '$'  shift, and go to state 122

    sep  go to state 389


state 335

   95 lambda_expr: LAMBDA '(' ')' sep . cmnd

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IN         shift, and go to state 20
    ON         shift, and go to state 21
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    RLISTAT    shift, and go to state 37
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    rlistat        go to state 48
    cmnd           go to state 390
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 59
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 336

   45 proc_def: proc_type PROCEDURE proc_head sep . cmnd

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IN         shift, and go to state 20
    ON         shift, and go to state 21
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    RLISTAT    shift, and go to state 37
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    rlistat        go to state 48
    cmnd           go to state 391
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 59
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 337

   47 proc_def: proc_type proc_qual PROCEDURE proc_head . sep cmnd

    ';'  shift, and go to state 121
    '$'  shift, and go to state 122

    sep  go to state 392


state 338

   46 proc_def: proc_qual PROCEDURE proc_head sep . cmnd

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IN         shift, and go to state 20
    ON         shift, and go to state 21
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    RLISTAT    shift, and go to state 37
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    rlistat        go to state 48
    cmnd           go to state 393
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 59
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 339

   52 rltail: expr ',' rltail .

    $default  reduce using rule 52 (rltail)


state 340

   51 rltail: expr .
   52       | expr . ',' rltail
  235 brace_list: ',' expr . brace_list
  246 x12: expr . brace_list

    ','  shift, and go to state 238
    '}'  shift, and go to state 155

    ','       [reduce using rule 51 (rltail)]
    '}'       [reduce using rule 51 (rltail)]
    $default  reduce using rule 51 (rltail)

    brace_list  go to state 341


state 341

  235 brace_list: ',' expr brace_list .
  246 x12: expr brace_list .

    SETQ      reduce using rule 235 (brace_list)
    SETQ      [reduce using rule 246 (x12)]
    AND       reduce using rule 235 (brace_list)
    AND       [reduce using rule 246 (x12)]
    OR        reduce using rule 235 (brace_list)
    OR        [reduce using rule 246 (x12)]
    MEMBER    reduce using rule 235 (brace_list)
    MEMBER    [reduce using rule 246 (x12)]
    MEMQ      reduce using rule 235 (brace_list)
    MEMQ      [reduce using rule 246 (x12)]
    NEQ       reduce using rule 235 (brace_list)
    NEQ       [reduce using rule 246 (x12)]
    EQ        reduce using rule 235 (brace_list)
    EQ        [reduce using rule 246 (x12)]
    GEQ       reduce using rule 235 (brace_list)
    GEQ       [reduce using rule 246 (x12)]
    LEQ       reduce using rule 235 (brace_list)
    LEQ       [reduce using rule 246 (x12)]
    FREEOF    reduce using rule 235 (brace_list)
    FREEOF    [reduce using rule 246 (x12)]
    STEP      reduce using rule 235 (brace_list)
    STEP      [reduce using rule 246 (x12)]
    UNTIL     reduce using rule 235 (brace_list)
    UNTIL     [reduce using rule 246 (x12)]
    DO        reduce using rule 235 (brace_list)
    DO        [reduce using rule 246 (x12)]
    COLLECT   reduce using rule 235 (brace_list)
    COLLECT   [reduce using rule 246 (x12)]
    SUM       reduce using rule 235 (brace_list)
    SUM       [reduce using rule 246 (x12)]
    THEN      reduce using rule 235 (brace_list)
    THEN      [reduce using rule 246 (x12)]
    ELSE      reduce using rule 235 (brace_list)
    ELSE      [reduce using rule 246 (x12)]
    END       reduce using rule 235 (brace_list)
    END       [reduce using rule 246 (x12)]
    RSECT     reduce using rule 235 (brace_list)
    RSECT     [reduce using rule 246 (x12)]
    WHERE     reduce using rule 235 (brace_list)
    WHERE     [reduce using rule 246 (x12)]
    ';'       reduce using rule 235 (brace_list)
    ';'       [reduce using rule 246 (x12)]
    '$'       reduce using rule 235 (brace_list)
    '$'       [reduce using rule 246 (x12)]
    ')'       reduce using rule 235 (brace_list)
    ')'       [reduce using rule 246 (x12)]
    ','       reduce using rule 235 (brace_list)
    ','       [reduce using rule 246 (x12)]
    '='       reduce using rule 235 (brace_list)
    '='       [reduce using rule 246 (x12)]
    '>'       reduce using rule 235 (brace_list)
    '>'       [reduce using rule 246 (x12)]
    '<'       reduce using rule 235 (brace_list)
    '<'       [reduce using rule 246 (x12)]
    '+'       reduce using rule 235 (brace_list)
    '+'       [reduce using rule 246 (x12)]
    '-'       reduce using rule 235 (brace_list)
    '-'       [reduce using rule 246 (x12)]
    '*'       reduce using rule 235 (brace_list)
    '*'       [reduce using rule 246 (x12)]
    '/'       reduce using rule 235 (brace_list)
    '/'       [reduce using rule 246 (x12)]
    '^'       reduce using rule 235 (brace_list)
    '^'       [reduce using rule 246 (x12)]
    '.'       reduce using rule 235 (brace_list)
    '.'       [reduce using rule 246 (x12)]
    ':'       reduce using rule 235 (brace_list)
    ':'       [reduce using rule 246 (x12)]
    '}'       reduce using rule 235 (brace_list)
    '}'       [reduce using rule 246 (x12)]
    ']'       reduce using rule 235 (brace_list)
    ']'       [reduce using rule 246 (x12)]
    $default  reduce using rule 235 (brace_list)


state 342

   99 rx0: lx0 WHERE SYMBOL '=' . rx1
  101 lx0: lx0 WHERE SYMBOL '=' . lx1

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 394
    lx1            go to state 395
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 343

  108 rx2tail: lx3 OR . rx2tail
  109 rx2: lx3 OR . rx2tail
  112 lx2tail: lx3 OR . lx2tail
  113 lx2: lx3 OR . lx2tail

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2tail        go to state 396
    rx2            go to state 64
    lx2tail        go to state 397
    lx2            go to state 65
    rx3            go to state 245
    lx3            go to state 246
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 344

  116 rx3tail: lx4 AND . rx3tail
  117 rx3: lx4 AND . rx3tail
  120 lx3tail: lx4 AND . lx3tail
  121 lx3: lx4 AND . lx3tail

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3tail        go to state 398
    rx3            go to state 66
    lx3tail        go to state 399
    lx3            go to state 67
    rx4            go to state 249
    lx4            go to state 250
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 345

  149 ry6: NOT ry6 .

    $default  reduce using rule 149 (ry6)


state 346

  151 ly6: NOT ly6 .

    $default  reduce using rule 151 (ly6)


state 347

  161 ry6a: NOT ry6a .

    $default  reduce using rule 161 (ry6a)


state 348

  165 ly6a: NOT ly6a .

    $default  reduce using rule 165 (ly6a)


state 349

  154 rx6tail: ly6a '+' . rx6tail
  158 lx6tail: ly6a '+' . lx6tail

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 274
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6tail        go to state 400
    rx6            go to state 72
    lx6tail        go to state 401
    lx6            go to state 73
    ry6a           go to state 277
    rx6a           go to state 278
    ly6a           go to state 279
    lx6a           go to state 280
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 350

  187 ry9: NOT ry9 .

    $default  reduce using rule 187 (ry9)


state 351

  193 ly9: NOT ly9 .

    $default  reduce using rule 193 (ly9)


state 352

  123 rx4: NOT . rx4
  125 lx4: NOT . lx4
  169 ry7: NOT . ry7
  174 ly7: NOT . ly7
  187 ry9: NOT . ry9
  193 ly9: NOT . ly9

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 352
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 284
    '-'        shift, and go to state 285
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 96
    lx4            go to state 97
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    ry7            go to state 232
    rx7            go to state 138
    ly7            go to state 233
    lx7            go to state 140
    rx8            go to state 78
    lx8            go to state 79
    ry9            go to state 350
    rx9            go to state 289
    ly9            go to state 351
    lx9            go to state 291
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 353

  188 ry9: '+' ry9 .

    $default  reduce using rule 188 (ry9)


state 354

  194 ly9: '+' ly9 .

    $default  reduce using rule 194 (ly9)


state 355

  189 ry9: '-' ry9 .

    $default  reduce using rule 189 (ry9)


state 356

  195 ly9: '-' ly9 .

    $default  reduce using rule 195 (ly9)


state 357

  180 rx8tail: ly9 '*' . rx8tail
  184 lx8tail: ly9 '*' . lx8tail

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 283
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 284
    '-'        shift, and go to state 285
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8tail        go to state 402
    rx8            go to state 78
    lx8tail        go to state 403
    lx8            go to state 79
    ry9            go to state 288
    rx9            go to state 289
    ly9            go to state 290
    lx9            go to state 291
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 358

  199 ly10: NOT ly10 .

    $default  reduce using rule 199 (ly10)


state 359

  205 ry10: NOT ry10 .

    $default  reduce using rule 205 (ry10)


state 360

  123 rx4: NOT . rx4
  125 lx4: NOT . lx4
  169 ry7: NOT . ry7
  174 ly7: NOT . ly7
  199 ly10: NOT . ly10
  205 ry10: NOT . ry10

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 360
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 293
    '-'        shift, and go to state 294
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 96
    lx4            go to state 97
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    ry7            go to state 232
    rx7            go to state 138
    ly7            go to state 233
    lx7            go to state 140
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    ly10           go to state 358
    lx10           go to state 296
    ry10           go to state 359
    rx10           go to state 298
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 361

  200 ly10: '+' ly10 .

    $default  reduce using rule 200 (ly10)


state 362

  206 ry10: '+' ry10 .

    $default  reduce using rule 206 (ry10)


state 363

  201 ly10: '-' ly10 .

    $default  reduce using rule 201 (ly10)


state 364

  207 ry10: '-' ry10 .

    $default  reduce using rule 207 (ry10)


state 365

  211 ry11: NOT ry11 .

    $default  reduce using rule 211 (ry11)


state 366

  225 ly11: NOT ly11 .

    $default  reduce using rule 225 (ly11)


state 367

  123 rx4: NOT . rx4
  125 lx4: NOT . lx4
  169 ry7: NOT . ry7
  174 ly7: NOT . ly7
  211 ry11: NOT . ry11
  225 ly11: NOT . ly11

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 367
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 302
    '-'        shift, and go to state 303
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 95
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 96
    lx4            go to state 97
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    ry7            go to state 232
    rx7            go to state 138
    ly7            go to state 233
    lx7            go to state 140
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    ry11           go to state 365
    rx11           go to state 305
    ly11           go to state 366
    lx11           go to state 307
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 368

  212 ry11: '+' ry11 .

    $default  reduce using rule 212 (ry11)


state 369

  226 ly11: '+' ly11 .

    $default  reduce using rule 226 (ly11)


state 370

  213 ry11: '-' ry11 .

    $default  reduce using rule 213 (ry11)


state 371

  227 ly11: '-' ly11 .

    $default  reduce using rule 227 (ly11)


state 372

  237 x12notparened: x13b '[' expr ']' .

    $default  reduce using rule 237 (x12notparened)


state 373

  235 brace_list: ',' expr . brace_list
  236 commaparened: '(' expr ',' expr . arg_list
  246 x12: expr . brace_list

    ')'  shift, and go to state 404
    ','  shift, and go to state 405
    '}'  shift, and go to state 155

    arg_list    go to state 406
    brace_list  go to state 341


state 374

   41 proc_head: SYMBOL '(' SYMBOL sym_list .

    $default  reduce using rule 41 (proc_head)


state 375

   65 for_stmt: FOR EACH SYMBOL for_inon expr . for_action cmnd
  246 x12: expr . brace_list

    DO       shift, and go to state 379
    COLLECT  shift, and go to state 380
    SUM      shift, and go to state 381
    ','      shift, and go to state 154
    '}'      shift, and go to state 155

    for_action  go to state 407
    brace_list  go to state 156


state 376

   58 for_update: STEP . expr UNTIL expr

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 408
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 377

   57 for_update: ':' . expr

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 409
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 378

   64 for_stmt: FOR SYMBOL SETQ expr for_update . for_action cmnd

    DO       shift, and go to state 379
    COLLECT  shift, and go to state 380
    SUM      shift, and go to state 381

    for_action  go to state 410


state 379

   59 for_action: DO .

    $default  reduce using rule 59 (for_action)


state 380

   61 for_action: COLLECT .

    $default  reduce using rule 61 (for_action)


state 381

   60 for_action: SUM .

    $default  reduce using rule 60 (for_action)


state 382

   66 for_stmt: FOREACH SYMBOL for_inon expr for_action . cmnd

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IN         shift, and go to state 20
    ON         shift, and go to state 21
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    RLISTAT    shift, and go to state 37
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    rlistat        go to state 48
    cmnd           go to state 411
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 59
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 383

   55 if_stmt: IF expr THEN cmnd ELSE . cmnd

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IN         shift, and go to state 20
    ON         shift, and go to state 21
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    RLISTAT    shift, and go to state 37
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    rlistat        go to state 48
    cmnd           go to state 412
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 59
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 384

   80 scalar_tail: ',' INTEGER . scalar_tail

    ';'  shift, and go to state 121
    '$'  shift, and go to state 122
    ','  shift, and go to state 322

    sep          go to state 323
    scalar_tail  go to state 413


state 385

   79 scalar_tail: ',' SYMBOL . scalar_tail

    ';'  shift, and go to state 121
    '$'  shift, and go to state 122
    ','  shift, and go to state 322

    sep          go to state 323
    scalar_tail  go to state 414


state 386

   76 group_tail: sep cmnd group_tail .

    $default  reduce using rule 76 (group_tail)


state 387

   93 lambda_vars: ',' SYMBOL lambda_vars .

    $default  reduce using rule 93 (lambda_vars)


state 388

   15 sym_list: ',' SYMBOL . sym_list

    ')'  shift, and go to state 332
    ','  shift, and go to state 333

    sym_list  go to state 415


state 389

   96 lambda_expr: LAMBDA '(' SYMBOL sym_list sep . cmnd

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IN         shift, and go to state 20
    ON         shift, and go to state 21
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    RLISTAT    shift, and go to state 37
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    rlistat        go to state 48
    cmnd           go to state 416
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 59
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 390

   95 lambda_expr: LAMBDA '(' ')' sep cmnd .

    $default  reduce using rule 95 (lambda_expr)


state 391

   45 proc_def: proc_type PROCEDURE proc_head sep cmnd .

    $default  reduce using rule 45 (proc_def)


state 392

   47 proc_def: proc_type proc_qual PROCEDURE proc_head sep . cmnd

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IN         shift, and go to state 20
    ON         shift, and go to state 21
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    RLISTAT    shift, and go to state 37
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    rlistat        go to state 48
    cmnd           go to state 417
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 59
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 393

   46 proc_def: proc_qual PROCEDURE proc_head sep cmnd .

    $default  reduce using rule 46 (proc_def)


state 394

   99 rx0: lx0 WHERE SYMBOL '=' rx1 .
  100    | rx1 .

    ','       reduce using rule 99 (rx0)
    ','       [reduce using rule 100 (rx0)]
    '}'       reduce using rule 99 (rx0)
    '}'       [reduce using rule 100 (rx0)]
    $default  reduce using rule 99 (rx0)


state 395

  101 lx0: lx0 WHERE SYMBOL '=' lx1 .
  102    | lx1 .

    WHERE     reduce using rule 101 (lx0)
    WHERE     [reduce using rule 102 (lx0)]
    ','       reduce using rule 101 (lx0)
    ','       [reduce using rule 102 (lx0)]
    '}'       reduce using rule 101 (lx0)
    '}'       [reduce using rule 102 (lx0)]
    $default  reduce using rule 101 (lx0)


state 396

  108 rx2tail: lx3 OR rx2tail .
  109 rx2: lx3 OR rx2tail .

    ','       reduce using rule 108 (rx2tail)
    ','       [reduce using rule 109 (rx2)]
    '}'       reduce using rule 108 (rx2tail)
    '}'       [reduce using rule 109 (rx2)]
    $default  reduce using rule 108 (rx2tail)


state 397

  112 lx2tail: lx3 OR lx2tail .
  113 lx2: lx3 OR lx2tail .

    SETQ      reduce using rule 112 (lx2tail)
    SETQ      [reduce using rule 113 (lx2)]
    WHERE     reduce using rule 112 (lx2tail)
    WHERE     [reduce using rule 113 (lx2)]
    ','       reduce using rule 112 (lx2tail)
    ','       [reduce using rule 113 (lx2)]
    '}'       reduce using rule 112 (lx2tail)
    '}'       [reduce using rule 113 (lx2)]
    $default  reduce using rule 112 (lx2tail)


state 398

  116 rx3tail: lx4 AND rx3tail .
  117 rx3: lx4 AND rx3tail .

    ','       reduce using rule 116 (rx3tail)
    ','       [reduce using rule 117 (rx3)]
    '}'       reduce using rule 116 (rx3tail)
    '}'       [reduce using rule 117 (rx3)]
    $default  reduce using rule 116 (rx3tail)


state 399

  120 lx3tail: lx4 AND lx3tail .
  121 lx3: lx4 AND lx3tail .

    SETQ      reduce using rule 120 (lx3tail)
    SETQ      [reduce using rule 121 (lx3)]
    OR        reduce using rule 120 (lx3tail)
    OR        [reduce using rule 121 (lx3)]
    WHERE     reduce using rule 120 (lx3tail)
    WHERE     [reduce using rule 121 (lx3)]
    ','       reduce using rule 120 (lx3tail)
    ','       [reduce using rule 121 (lx3)]
    '}'       reduce using rule 120 (lx3tail)
    '}'       [reduce using rule 121 (lx3)]
    $default  reduce using rule 120 (lx3tail)


state 400

  154 rx6tail: ly6a '+' rx6tail .

    $default  reduce using rule 154 (rx6tail)


state 401

  158 lx6tail: ly6a '+' lx6tail .

    $default  reduce using rule 158 (lx6tail)


state 402

  180 rx8tail: ly9 '*' rx8tail .

    $default  reduce using rule 180 (rx8tail)


state 403

  184 lx8tail: ly9 '*' lx8tail .

    $default  reduce using rule 184 (lx8tail)


state 404

  231 arg_list: ')' .

    $default  reduce using rule 231 (arg_list)


state 405

  232 arg_list: ',' . expr arg_list
  235 brace_list: ',' . expr brace_list

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 418
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 406

  236 commaparened: '(' expr ',' expr arg_list .

    $default  reduce using rule 236 (commaparened)


state 407

   65 for_stmt: FOR EACH SYMBOL for_inon expr for_action . cmnd

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IN         shift, and go to state 20
    ON         shift, and go to state 21
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    RLISTAT    shift, and go to state 37
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    rlistat        go to state 48
    cmnd           go to state 419
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 59
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 408

   58 for_update: STEP expr . UNTIL expr
  246 x12: expr . brace_list

    UNTIL  shift, and go to state 420
    ','    shift, and go to state 154
    '}'    shift, and go to state 155

    brace_list  go to state 156


state 409

   57 for_update: ':' expr .
  246 x12: expr . brace_list

    ','  shift, and go to state 154
    '}'  shift, and go to state 155

    $default  reduce using rule 57 (for_update)

    brace_list  go to state 156


state 410

   64 for_stmt: FOR SYMBOL SETQ expr for_update for_action . cmnd

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IN         shift, and go to state 20
    ON         shift, and go to state 21
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    RLISTAT    shift, and go to state 37
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    rlistat        go to state 48
    cmnd           go to state 421
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 59
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 411

   66 for_stmt: FOREACH SYMBOL for_inon expr for_action cmnd .

    $default  reduce using rule 66 (for_stmt)


state 412

   55 if_stmt: IF expr THEN cmnd ELSE cmnd .

    $default  reduce using rule 55 (if_stmt)


state 413

   80 scalar_tail: ',' INTEGER scalar_tail .

    $default  reduce using rule 80 (scalar_tail)


state 414

   79 scalar_tail: ',' SYMBOL scalar_tail .

    $default  reduce using rule 79 (scalar_tail)


state 415

   15 sym_list: ',' SYMBOL sym_list .

    $default  reduce using rule 15 (sym_list)


state 416

   96 lambda_expr: LAMBDA '(' SYMBOL sym_list sep cmnd .

    $default  reduce using rule 96 (lambda_expr)


state 417

   47 proc_def: proc_type proc_qual PROCEDURE proc_head sep cmnd .

    $default  reduce using rule 47 (proc_def)


state 418

  232 arg_list: ',' expr . arg_list
  235 brace_list: ',' expr . brace_list
  246 x12: expr . brace_list

    ')'  shift, and go to state 404
    ','  shift, and go to state 405
    '}'  shift, and go to state 155

    arg_list    go to state 422
    brace_list  go to state 341


state 419

   65 for_stmt: FOR EACH SYMBOL for_inon expr for_action cmnd .

    $default  reduce using rule 65 (for_stmt)


state 420

   58 for_update: STEP expr UNTIL . expr

    SETQ       shift, and go to state 1
    AND        shift, and go to state 2
    OR         shift, and go to state 3
    NOT        shift, and go to state 4
    MEMBER     shift, and go to state 5
    MEMQ       shift, and go to state 6
    NEQ        shift, and go to state 7
    EQ         shift, and go to state 8
    GEQ        shift, and go to state 9
    LEQ        shift, and go to state 10
    FREEOF     shift, and go to state 11
    SYMBOLIC   shift, and go to state 12
    ALGEBRAIC  shift, and go to state 13
    EXPR       shift, and go to state 14
    MACRO      shift, and go to state 15
    SMACRO     shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    FOR        shift, and go to state 18
    FOREACH    shift, and go to state 19
    IF         shift, and go to state 22
    REPEAT     shift, and go to state 23
    WHILE      shift, and go to state 24
    BEGIN      shift, and go to state 25
    LSECT      shift, and go to state 28
    GO         shift, and go to state 29
    GOTO       shift, and go to state 30
    LAMBDA     shift, and go to state 31
    SYMBOL     shift, and go to state 32
    NUMBER     shift, and go to state 33
    STRING     shift, and go to state 34
    LIST       shift, and go to state 35
    RETURN     shift, and go to state 36
    ENDSTAT    shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '('        shift, and go to state 41
    '{'        shift, and go to state 42

    proc_type      go to state 94
    proc_qual      go to state 46
    proc_def       go to state 47
    if_stmt        go to state 50
    for_stmt       go to state 51
    while_stmt     go to state 52
    repeat_stmt    go to state 53
    return_stmt    go to state 54
    goto_stmt      go to state 55
    group_expr     go to state 56
    block_expr     go to state 57
    lambda_expr    go to state 58
    expr           go to state 423
    rx0            go to state 60
    lx0            go to state 61
    rx1            go to state 62
    lx1            go to state 63
    rx2            go to state 64
    lx2            go to state 65
    rx3            go to state 66
    lx3            go to state 67
    rx4            go to state 68
    lx4            go to state 69
    rx5            go to state 70
    lx5            go to state 71
    rx6            go to state 72
    lx6            go to state 73
    rx6a           go to state 74
    lx6a           go to state 75
    rx7            go to state 76
    lx7            go to state 77
    rx8            go to state 78
    lx8            go to state 79
    rx9            go to state 80
    lx9            go to state 81
    lx10           go to state 82
    rx10           go to state 83
    rx11           go to state 84
    lx11           go to state 85
    parened        go to state 86
    x12notparened  go to state 87
    x12            go to state 88
    x13b           go to state 89


state 421

   64 for_stmt: FOR SYMBOL SETQ expr for_update for_action cmnd .

    $default  reduce using rule 64 (for_stmt)


state 422

  232 arg_list: ',' expr arg_list .

    $default  reduce using rule 232 (arg_list)


state 423

   58 for_update: STEP expr UNTIL expr .
  246 x12: expr . brace_list

    ','  shift, and go to state 154
    '}'  shift, and go to state 155

    $default  reduce using rule 58 (for_update)

    brace_list  go to state 156
