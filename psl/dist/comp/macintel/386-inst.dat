 (DEFOPCODE ADC (PAR1 PAR2) 
            ((AND (REGP PAR1) (EFFAP PAR2)) (OP-REG-EFFA '(17) PAR1 PAR2)) 
            ((AND (EFFAP PAR1) (REGP PAR2)) (OP-REG-EFFA '(19) PAR2 PAR1)) 
            ((AND (STDIMMEDIATEP PAR1) (EAXP PAR2)) 
             (OP-IMM-EAX '(21) PAR1 PAR2))
            ((AND (SMALLIMMEDIATEP PAR1) (REGP PAR2)) 
             (OP-IMM8-EFFA '(131 16) PAR1 PAR2))
            ((AND (STDIMMEDIATEP PAR1) (EFFAP PAR2)) 
             (OP-IMM-EFFA '(129 16) PAR1 PAR2)))
 (DEFOPLENGTH ADC (PAR1 PAR2) 
              ((AND (REGP PAR1) (EFFAP PAR2)) 
               (LTH-REG-EFFA '(17) PAR1 PAR2))
              ((AND (EFFAP PAR1) (REGP PAR2)) 
               (LTH-REG-EFFA '(19) PAR2 PAR1))
              ((AND (STDIMMEDIATEP PAR1) (EAXP PAR2)) 
               (LTH-IMM-EAX '(21) PAR1 PAR2))
              ((AND (SMALLIMMEDIATEP PAR1) (REGP PAR2)) 
               (LTH-IMM8-EFFA '(131 16) PAR1 PAR2))
              ((AND (STDIMMEDIATEP PAR1) (EFFAP PAR2)) 
               (LTH-IMM-EFFA '(129 16) PAR1 PAR2)))

 (DEFOPCODE ADD (PAR1 PAR2) 
            ((AND (REGP PAR1) (EFFAP PAR2)) (OP-REG-EFFA '(1) PAR1 PAR2)) 
            ((AND (EFFAP PAR1) (REGP PAR2)) (OP-REG-EFFA '(3) PAR2 PAR1)) 
            ((AND (STDIMMEDIATEP PAR1) (EAXP PAR2)) 
             (OP-IMM-EAX '(5) PAR1 PAR2))
            ((AND (SMALLIMMEDIATEP PAR1) (REGP PAR2)) 
             (OP-IMM8-EFFA '(131 0) PAR1 PAR2))
            ((AND (STDIMMEDIATEP PAR1) (EFFAP PAR2)) 
             (OP-IMM-EFFA '(129 0) PAR1 PAR2)))
 (DEFOPLENGTH ADD (PAR1 PAR2) 
              ((AND (REGP PAR1) (EFFAP PAR2)) 
               (LTH-REG-EFFA '(1) PAR1 PAR2))
              ((AND (EFFAP PAR1) (REGP PAR2)) 
               (LTH-REG-EFFA '(3) PAR2 PAR1))
              ((AND (STDIMMEDIATEP PAR1) (EAXP PAR2)) 
               (LTH-IMM-EAX '(5) PAR1 PAR2))
              ((AND (SMALLIMMEDIATEP PAR1) (REGP PAR2)) 
               (LTH-IMM8-EFFA '(131 0) PAR1 PAR2))
              ((AND (STDIMMEDIATEP PAR1) (EFFAP PAR2)) 
               (LTH-IMM-EFFA '(129 0) PAR1 PAR2)))

 (DEFOPCODE AND (PAR1 PAR2) 
            ((AND (REGP PAR1) (REGP PAR2)) (OP-REG-EFFA '(35) PAR2 PAR1)) 
            ((AND (REGP PAR1) (EFFAP PAR2)) (OP-REG-EFFA '(33) PAR1 PAR2)) 
            ((AND (EFFAP PAR1) (REGP PAR2)) (OP-REG-EFFA '(35) PAR2 PAR1)) 
            ((AND (STDIMMEDIATEP PAR1) (EAXP PAR2)) 
             (OP-IMM-EAX '(37) PAR1 PAR2))
            ((AND (SMALLIMMEDIATEP PAR1) (REGP PAR2)) 
             (OP-IMM8-EFFA '(131 32) PAR1 PAR2))
            ((AND (STDIMMEDIATEP PAR1) (REGP PAR2)) 
             (OP-IMM-EFFA '(129 32) PAR1 PAR2)))
 (DEFOPLENGTH AND (PAR1 PAR2) 
              ((AND (REGP PAR1) (REGP PAR2)) 
               (LTH-REG-EFFA '(35) PAR2 PAR1))
              ((AND (REGP PAR1) (EFFAP PAR2)) 
               (LTH-REG-EFFA '(33) PAR1 PAR2))
              ((AND (EFFAP PAR1) (REGP PAR2)) 
               (LTH-REG-EFFA '(35) PAR2 PAR1))
              ((AND (STDIMMEDIATEP PAR1) (EAXP PAR2)) 
               (LTH-IMM-EAX '(37) PAR1 PAR2))
              ((AND (SMALLIMMEDIATEP PAR1) (REGP PAR2)) 
               (LTH-IMM8-EFFA '(131 32) PAR1 PAR2))
              ((AND (STDIMMEDIATEP PAR1) (REGP PAR2)) 
               (LTH-IMM-EFFA '(129 32) PAR1 PAR2)))

 (DEFOPCODE AS: (PAR1 PAR2) (T (OP-BYTE '(103))))
 (DEFOPLENGTH AS: (PAR1 PAR2) (T (LTH-BYTE '(103))))

 (DEFOPCODE CALL (PAR1 PAR2) 
            ((INDIRECTADRP PAR1) (OP-JUMP-EFFA '(255 16) PAR1)) 
            ((ADRP PAR1) (OP-JUMP '(232) PAR1)))
 (DEFOPLENGTH CALL (PAR1 PAR2) 
              ((INDIRECTADRP PAR1) (LTH-JUMP-EFFA '(255 16) PAR1)) 
              ((ADRP PAR1) (LTH-JUMP '(232) PAR1)))

 (DEFOPCODE CBW (PAR1 PAR2) (T (OP-BYTE '(102 152))) (T (OP-BYTE '(152))))
 (DEFOPLENGTH CBW (PAR1 PAR2) (T (LTH-BYTE '(102 152))) 
              (T (LTH-BYTE '(152))))

 (DEFOPCODE CDQ (PAR1 PAR2) (T (OP-BYTE '(153))))
 (DEFOPLENGTH CDQ (PAR1 PAR2) (T (LTH-BYTE '(153))))

 (DEFOPCODE CLC (PAR1 PAR2) (T (OP-BYTE '(248))))
 (DEFOPLENGTH CLC (PAR1 PAR2) (T (LTH-BYTE '(248))))

 (DEFOPCODE CLD (PAR1 PAR2) (T (OP-BYTE '(252))))
 (DEFOPLENGTH CLD (PAR1 PAR2) (T (LTH-BYTE '(252))))

 (DEFOPCODE CLI (PAR1 PAR2) (T (OP-BYTE '(250))))
 (DEFOPLENGTH CLI (PAR1 PAR2) (T (LTH-BYTE '(250))))

 (DEFOPCODE CMP (PAR1 PAR2) 
            ((AND (REGP PAR1) (EFFAP PAR2)) (OP-REG-EFFA '(57) PAR1 PAR2)) 
            ((AND (EFFAP PAR1) (REGP PAR2)) (OP-REG-EFFA '(59) PAR2 PAR1)) 
            ((AND (STDIMMEDIATEP PAR1) (EAXP PAR2)) 
             (OP-IMM-EAX '(61) PAR1 PAR2))
            ((AND (SMALLIMMEDIATEP PAR1) (EFFAP PAR2)) 
             (OP-IMM8-EFFA '(131 56) PAR1 PAR2))
            ((AND (STDIMMEDIATEP PAR1) (EFFAP PAR2)) 
             (OP-IMM-EFFA '(129 56) PAR1 PAR2)))
 (DEFOPLENGTH CMP (PAR1 PAR2) 
              ((AND (REGP PAR1) (EFFAP PAR2)) 
               (LTH-REG-EFFA '(57) PAR1 PAR2))
              ((AND (EFFAP PAR1) (REGP PAR2)) 
               (LTH-REG-EFFA '(59) PAR2 PAR1))
              ((AND (STDIMMEDIATEP PAR1) (EAXP PAR2)) 
               (LTH-IMM-EAX '(61) PAR1 PAR2))
              ((AND (SMALLIMMEDIATEP PAR1) (EFFAP PAR2)) 
               (LTH-IMM8-EFFA '(131 56) PAR1 PAR2))
              ((AND (STDIMMEDIATEP PAR1) (EFFAP PAR2)) 
               (LTH-IMM-EFFA '(129 56) PAR1 PAR2)))

 (DEFOPCODE CS: (PAR1 PAR2) (T (OP-BYTE '(46))))
 (DEFOPLENGTH CS: (PAR1 PAR2) (T (LTH-BYTE '(46))))

 (DEFOPCODE CWD (PAR1 PAR2) (T (OP-BYTE '(102 153))) (T (OP-BYTE '(153))))
 (DEFOPLENGTH CWD (PAR1 PAR2) (T (LTH-BYTE '(102 153))) 
              (T (LTH-BYTE '(153))))

 (DEFOPCODE CWDE (PAR1 PAR2) (T (OP-BYTE '(152))))
 (DEFOPLENGTH CWDE (PAR1 PAR2) (T (LTH-BYTE '(152))))

 (DEFOPCODE DEC (PAR1 PAR2) ((REGP PAR1) (OP-PUSH-REG '(72) PAR1)) 
            ((EFFAP PAR1) (OP-EFFA '(255 8) PAR1)))
 (DEFOPLENGTH DEC (PAR1 PAR2) ((REGP PAR1) (LTH-PUSH-REG '(72) PAR1)) 
              ((EFFAP PAR1) (LTH-EFFA '(255 8) PAR1)))

 (DEFOPCODE DIV (PAR1 PAR2) ((EFFAP PAR1) (OP-MUL '(247 48) PAR1)))
 (DEFOPLENGTH DIV (PAR1 PAR2) ((EFFAP PAR1) (LTH-MUL '(247 48) PAR1)))

 (DEFOPCODE DS: (PAR1 PAR2) (T (OP-BYTE '(62))))
 (DEFOPLENGTH DS: (PAR1 PAR2) (T (LTH-BYTE '(62))))

 (DEFOPCODE ENTER (PAR1 PAR2) 
            ((STDIMMEDIATEP PAR1) (OP-ENTER '(200) PAR1)))
 (DEFOPLENGTH ENTER (PAR1 PAR2) 
              ((STDIMMEDIATEP PAR1) (LTH-ENTER '(200) PAR1)))

 (DEFOPCODE ES: (PAR1 PAR2) (T (OP-BYTE '(38))))
 (DEFOPLENGTH ES: (PAR1 PAR2) (T (LTH-BYTE '(38))))

 (DEFOPCODE F2XM1 (PAR1 PAR2) (T (OP-BYTE '(217 240))))
 (DEFOPLENGTH F2XM1 (PAR1 PAR2) (T (LTH-BYTE '(217 240))))

 (DEFOPCODE FABS (PAR1 PAR2) (T (OP-BYTE '(217 225))))
 (DEFOPLENGTH FABS (PAR1 PAR2) (T (LTH-BYTE '(217 225))))

 (DEFOPCODE FADD (PAR1 PAR2) ((EFFAP PAR1) (OP-EFFA '(220 0) PAR1)))
 (DEFOPLENGTH FADD (PAR1 PAR2) ((EFFAP PAR1) (LTH-EFFA '(220 0) PAR1)))

 (DEFOPCODE FADDP (PAR1 PAR2) (T (OP-BYTE '(222 193))))
 (DEFOPLENGTH FADDP (PAR1 PAR2) (T (LTH-BYTE '(222 193))))

 (DEFOPCODE FBSTP (PAR1 PAR2) ((EFFAP PAR1) (OP-EFFA '(223 48) PAR1)))
 (DEFOPLENGTH FBSTP (PAR1 PAR2) ((EFFAP PAR1) (LTH-EFFA '(223 48) PAR1)))

 (DEFOPCODE FCLEX (PAR1 PAR2) (T (OP-BYTE '(155 219 226))))
 (DEFOPLENGTH FCLEX (PAR1 PAR2) (T (LTH-BYTE '(155 219 226))))

 (DEFOPCODE FCOM (PAR1 PAR2) ((EFFAP PAR1) (OP-EFFA '(220 16) PAR1)) 
            (T (OP-BYTE '(216 209))))
 (DEFOPLENGTH FCOM (PAR1 PAR2) ((EFFAP PAR1) (LTH-EFFA '(220 16) PAR1)) 
              (T (LTH-BYTE '(216 209))))

 (DEFOPCODE FCOMP (PAR1 PAR2) ((EFFAP PAR1) (OP-EFFA '(220 24) PAR1)) 
            (T (OP-BYTE '(216 217))))
 (DEFOPLENGTH FCOMP (PAR1 PAR2) ((EFFAP PAR1) (LTH-EFFA '(220 24) PAR1)) 
              (T (LTH-BYTE '(216 217))))

 (DEFOPCODE FCOS (PAR1 PAR2) (T (OP-BYTE '(217 255))))
 (DEFOPLENGTH FCOS (PAR1 PAR2) (T (LTH-BYTE '(217 255))))

 (DEFOPCODE FDIV (PAR1 PAR2) ((EFFAP PAR1) (OP-EFFA '(220 48) PAR1)))
 (DEFOPLENGTH FDIV (PAR1 PAR2) ((EFFAP PAR1) (LTH-EFFA '(220 48) PAR1)))

 (DEFOPCODE FDIVP (PAR1 PAR2) (T (OP-BYTE '(222 249))))
 (DEFOPLENGTH FDIVP (PAR1 PAR2) (T (LTH-BYTE '(222 249))))

 (DEFOPCODE FDIVR (PAR1 PAR2) ((EFFAP PAR1) (OP-EFFA '(220 56) PAR1)) 
            (T (OP-BYTE '(222 241))))
 (DEFOPLENGTH FDIVR (PAR1 PAR2) ((EFFAP PAR1) (LTH-EFFA '(220 56) PAR1)) 
              (T (LTH-BYTE '(222 241))))

 (DEFOPCODE FILD (PAR1 PAR2) ((EFFAP PAR1) (OP-EFFA '(219 0) PAR1)))
 (DEFOPLENGTH FILD (PAR1 PAR2) ((EFFAP PAR1) (LTH-EFFA '(219 0) PAR1)))

 (DEFOPCODE FIST (PAR1 PAR2) ((EFFAP PAR1) (OP-EFFA '(219 16) PAR1)))
 (DEFOPLENGTH FIST (PAR1 PAR2) ((EFFAP PAR1) (LTH-EFFA '(219 16) PAR1)))

 (DEFOPCODE FISTP (PAR1 PAR2) ((EFFAP PAR1) (OP-EFFA '(219 24) PAR1)))
 (DEFOPLENGTH FISTP (PAR1 PAR2) ((EFFAP PAR1) (LTH-EFFA '(219 24) PAR1)))

 (DEFOPCODE FLD (PAR1 PAR2) ((EFFAP PAR1) (OP-EFFA '(221 0) PAR1)))
 (DEFOPLENGTH FLD (PAR1 PAR2) ((EFFAP PAR1) (LTH-EFFA '(221 0) PAR1)))

 (DEFOPCODE FLD1 (PAR1 PAR2) (T (OP-BYTE '(217 232))))
 (DEFOPLENGTH FLD1 (PAR1 PAR2) (T (LTH-BYTE '(217 232))))

 (DEFOPCODE FLDCW (PAR1 PAR2) ((EFFAP PAR1) (OP-EFFA '(217 40) PAR1)))
 (DEFOPLENGTH FLDCW (PAR1 PAR2) ((EFFAP PAR1) (LTH-EFFA '(217 40) PAR1)))

 (DEFOPCODE FLDENV (PAR1 PAR2) ((EFFAP PAR1) (OP-EFFA '(217 32) PAR1)))
 (DEFOPLENGTH FLDENV (PAR1 PAR2) ((EFFAP PAR1) (LTH-EFFA '(217 32) PAR1)))

 (DEFOPCODE FLDL2E (PAR1 PAR2) (T (OP-BYTE '(217 234))))
 (DEFOPLENGTH FLDL2E (PAR1 PAR2) (T (LTH-BYTE '(217 234))))

 (DEFOPCODE FLDLN2 (PAR1 PAR2) (T (OP-BYTE '(217 237))))
 (DEFOPLENGTH FLDLN2 (PAR1 PAR2) (T (LTH-BYTE '(217 237))))

 (DEFOPCODE FMUL (PAR1 PAR2) ((EFFAP PAR1) (OP-EFFA '(220 8) PAR1)))
 (DEFOPLENGTH FMUL (PAR1 PAR2) ((EFFAP PAR1) (LTH-EFFA '(220 8) PAR1)))

 (DEFOPCODE FMULP (PAR1 PAR2) (T (OP-BYTE '(222 201))))
 (DEFOPLENGTH FMULP (PAR1 PAR2) (T (LTH-BYTE '(222 201))))

 (DEFOPCODE FPATAN (PAR1 PAR2) (T (OP-BYTE '(217 243))))
 (DEFOPLENGTH FPATAN (PAR1 PAR2) (T (LTH-BYTE '(217 243))))

 (DEFOPCODE FPTAN (PAR1 PAR2) (T (OP-BYTE '(217 242))))
 (DEFOPLENGTH FPTAN (PAR1 PAR2) (T (LTH-BYTE '(217 242))))

 (DEFOPCODE FS: (PAR1 PAR2) (T (OP-BYTE '(100))))
 (DEFOPLENGTH FS: (PAR1 PAR2) (T (LTH-BYTE '(100))))

 (DEFOPCODE FSIN (PAR1 PAR2) (T (OP-BYTE '(217 254))))
 (DEFOPLENGTH FSIN (PAR1 PAR2) (T (LTH-BYTE '(217 254))))

 (DEFOPCODE FSQRT (PAR1 PAR2) (T (OP-BYTE '(217 250))))
 (DEFOPLENGTH FSQRT (PAR1 PAR2) (T (LTH-BYTE '(217 250))))

 (DEFOPCODE FST (PAR1 PAR2) ((EFFAP PAR1) (OP-EFFA '(221 16) PAR1)))
 (DEFOPLENGTH FST (PAR1 PAR2) ((EFFAP PAR1) (LTH-EFFA '(221 16) PAR1)))

 (DEFOPCODE FSTCW (PAR1 PAR2) ((EFFAP PAR1) (OP-EFFA '(217 56) PAR1)))
 (DEFOPLENGTH FSTCW (PAR1 PAR2) ((EFFAP PAR1) (LTH-EFFA '(217 56) PAR1)))

 (DEFOPCODE FSTENV (PAR1 PAR2) ((EFFAP PAR1) (OP-EFFA '(217 48) PAR1)))
 (DEFOPLENGTH FSTENV (PAR1 PAR2) ((EFFAP PAR1) (LTH-EFFA '(217 48) PAR1)))

 (DEFOPCODE FSTP (PAR1 PAR2) ((EFFAP PAR1) (OP-EFFA '(221 24) PAR1)))
 (DEFOPLENGTH FSTP (PAR1 PAR2) ((EFFAP PAR1) (LTH-EFFA '(221 24) PAR1)))

 (DEFOPCODE FSTSW (PAR1 PAR2) 
            ((EQUAL '(REG AX) PAR1) (OP-BYTE '(223 224))))
 (DEFOPLENGTH FSTSW (PAR1 PAR2) 
              ((EQUAL '(REG AX) PAR1) (LTH-BYTE '(223 224))))

 (DEFOPCODE FSUB (PAR1 PAR2) ((EFFAP PAR1) (OP-EFFA '(220 32) PAR1)))
 (DEFOPLENGTH FSUB (PAR1 PAR2) ((EFFAP PAR1) (LTH-EFFA '(220 32) PAR1)))

 (DEFOPCODE FSUBP (PAR1 PAR2) (T (OP-BYTE '(222 233))))
 (DEFOPLENGTH FSUBP (PAR1 PAR2) (T (LTH-BYTE '(222 233))))

 (DEFOPCODE FSUBR (PAR1 PAR2) ((EFFAP PAR1) (OP-EFFA '(220 40) PAR1)))
 (DEFOPLENGTH FSUBR (PAR1 PAR2) ((EFFAP PAR1) (LTH-EFFA '(220 40) PAR1)))

 (DEFOPCODE FSUBRP (PAR1 PAR2) (T (OP-BYTE '(222 225))))
 (DEFOPLENGTH FSUBRP (PAR1 PAR2) (T (LTH-BYTE '(222 225))))

 (DEFOPCODE FYL2X (PAR1 PAR2) (T (OP-BYTE '(217 241))))
 (DEFOPLENGTH FYL2X (PAR1 PAR2) (T (LTH-BYTE '(217 241))))

 (DEFOPCODE GS: (PAR1 PAR2) (T (OP-BYTE '(101))))
 (DEFOPLENGTH GS: (PAR1 PAR2) (T (LTH-BYTE '(101))))

 (DEFOPCODE IDIV (PAR1 PAR2) ((EFFAP PAR1) (OP-MUL '(247 56) PAR1)))
 (DEFOPLENGTH IDIV (PAR1 PAR2) ((EFFAP PAR1) (LTH-MUL '(247 56) PAR1)))

 (DEFOPCODE IMUL (PAR1 PAR2) ((EFFAP PAR1) (OP-MUL '(247 40) PAR1)) 
            ((AND (REGP PAR1) (REGP PAR2)) (OP-IMUL '(15 175) PAR2 PAR1)))
 (DEFOPLENGTH IMUL (PAR1 PAR2) ((EFFAP PAR1) (LTH-MUL '(247 40) PAR1)) 
              ((AND (REGP PAR1) (REGP PAR2)) 
               (LTH-IMUL '(15 175) PAR2 PAR1)))

 (DEFOPCODE INC (PAR1 PAR2) ((REGP PAR1) (OP-PUSH-REG '(64) PAR1)) 
            ((EFFAP PAR1) (OP-EFFA '(255 0) PAR1)))
 (DEFOPLENGTH INC (PAR1 PAR2) ((REGP PAR1) (LTH-PUSH-REG '(64) PAR1)) 
              ((EFFAP PAR1) (LTH-EFFA '(255 0) PAR1)))

 (DEFOPCODE INT (PAR1 PAR2) ((EQUAL '3 PAR1) (OP-BYTE '(204))) 
            ((SMALLIMMEDIATEP PAR1) (OP-INT '(205) PAR1)))
 (DEFOPLENGTH INT (PAR1 PAR2) ((EQUAL '3 PAR1) (LTH-BYTE '(204))) 
              ((SMALLIMMEDIATEP PAR1) (LTH-INT '(205) PAR1)))

 (DEFOPCODE IRET (PAR1 PAR2) (T (OP-BYTE '(207))))
 (DEFOPLENGTH IRET (PAR1 PAR2) (T (LTH-BYTE '(207))))

 (DEFOPCODE JA (PAR1 PAR2) 
            ((SHORTLABELP PAR1) (OP-JUMP-SHORT '(119) PAR1)))
 (DEFOPLENGTH JA (PAR1 PAR2) 
              ((SHORTLABELP PAR1) (LTH-JUMP-SHORT '(119) PAR1)))

 (DEFOPCODE JAE (PAR1 PAR2) 
            ((SHORTLABELP PAR1) (OP-JUMP-SHORT '(115) PAR1)))
 (DEFOPLENGTH JAE (PAR1 PAR2) 
              ((SHORTLABELP PAR1) (LTH-JUMP-SHORT '(115) PAR1)))

 (DEFOPCODE JAEL (PAR1 PAR2) ((ADRP PAR1) (OP-JUMP '(15 131) PAR1)))
 (DEFOPLENGTH JAEL (PAR1 PAR2) ((ADRP PAR1) (LTH-JUMP '(15 131) PAR1)))

 (DEFOPCODE JAL (PAR1 PAR2) ((ADRP PAR1) (OP-JUMP '(15 135) PAR1)))
 (DEFOPLENGTH JAL (PAR1 PAR2) ((ADRP PAR1) (LTH-JUMP '(15 135) PAR1)))

 (DEFOPCODE JB (PAR1 PAR2) 
            ((SHORTLABELP PAR1) (OP-JUMP-SHORT '(114) PAR1)))
 (DEFOPLENGTH JB (PAR1 PAR2) 
              ((SHORTLABELP PAR1) (LTH-JUMP-SHORT '(114) PAR1)))

 (DEFOPCODE JBE (PAR1 PAR2) 
            ((SHORTLABELP PAR1) (OP-JUMP-SHORT '(118) PAR1)))
 (DEFOPLENGTH JBE (PAR1 PAR2) 
              ((SHORTLABELP PAR1) (LTH-JUMP-SHORT '(118) PAR1)))

 (DEFOPCODE JBEL (PAR1 PAR2) ((ADRP PAR1) (OP-JUMP '(15 134) PAR1)))
 (DEFOPLENGTH JBEL (PAR1 PAR2) ((ADRP PAR1) (LTH-JUMP '(15 134) PAR1)))

 (DEFOPCODE JBL (PAR1 PAR2) ((ADRP PAR1) (OP-JUMP '(15 130) PAR1)))
 (DEFOPLENGTH JBL (PAR1 PAR2) ((ADRP PAR1) (LTH-JUMP '(15 130) PAR1)))

 (DEFOPCODE JCXZ (PAR1 PAR2) 
            ((SHORTLABELP PAR1) (OP-JUMP-SHORT '(227) PAR1)))
 (DEFOPLENGTH JCXZ (PAR1 PAR2) 
              ((SHORTLABELP PAR1) (LTH-JUMP-SHORT '(227) PAR1)))

 (DEFOPCODE JE (PAR1 PAR2) 
            ((SHORTLABELP PAR1) (OP-JUMP-SHORT '(116) PAR1)))
 (DEFOPLENGTH JE (PAR1 PAR2) 
              ((SHORTLABELP PAR1) (LTH-JUMP-SHORT '(116) PAR1)))

 (DEFOPCODE JECXZ (PAR1 PAR2) 
            ((SHORTLABELP PAR1) (OP-JUMP-SHORT '(227) PAR1)))
 (DEFOPLENGTH JECXZ (PAR1 PAR2) 
              ((SHORTLABELP PAR1) (LTH-JUMP-SHORT '(227) PAR1)))

 (DEFOPCODE JEL (PAR1 PAR2) ((ADRP PAR1) (OP-JUMP '(15 132) PAR1)))
 (DEFOPLENGTH JEL (PAR1 PAR2) ((ADRP PAR1) (LTH-JUMP '(15 132) PAR1)))

 (DEFOPCODE JG (PAR1 PAR2) 
            ((SHORTLABELP PAR1) (OP-JUMP-SHORT '(127) PAR1)))
 (DEFOPLENGTH JG (PAR1 PAR2) 
              ((SHORTLABELP PAR1) (LTH-JUMP-SHORT '(127) PAR1)))

 (DEFOPCODE JGE (PAR1 PAR2) 
            ((SHORTLABELP PAR1) (OP-JUMP-SHORT '(125) PAR1)))
 (DEFOPLENGTH JGE (PAR1 PAR2) 
              ((SHORTLABELP PAR1) (LTH-JUMP-SHORT '(125) PAR1)))

 (DEFOPCODE JGEL (PAR1 PAR2) ((ADRP PAR1) (OP-JUMP '(15 141) PAR1)))
 (DEFOPLENGTH JGEL (PAR1 PAR2) ((ADRP PAR1) (LTH-JUMP '(15 141) PAR1)))

 (DEFOPCODE JGL (PAR1 PAR2) ((ADRP PAR1) (OP-JUMP '(15 143) PAR1)))
 (DEFOPLENGTH JGL (PAR1 PAR2) ((ADRP PAR1) (LTH-JUMP '(15 143) PAR1)))

 (DEFOPCODE JL (PAR1 PAR2) 
            ((SHORTLABELP PAR1) (OP-JUMP-SHORT '(124) PAR1)))
 (DEFOPLENGTH JL (PAR1 PAR2) 
              ((SHORTLABELP PAR1) (LTH-JUMP-SHORT '(124) PAR1)))

 (DEFOPCODE JLE (PAR1 PAR2) 
            ((SHORTLABELP PAR1) (OP-JUMP-SHORT '(126) PAR1)))
 (DEFOPLENGTH JLE (PAR1 PAR2) 
              ((SHORTLABELP PAR1) (LTH-JUMP-SHORT '(126) PAR1)))

 (DEFOPCODE JLEL (PAR1 PAR2) ((ADRP PAR1) (OP-JUMP '(15 142) PAR1)))
 (DEFOPLENGTH JLEL (PAR1 PAR2) ((ADRP PAR1) (LTH-JUMP '(15 142) PAR1)))

 (DEFOPCODE JLL (PAR1 PAR2) ((ADRP PAR1) (OP-JUMP '(15 140) PAR1)))
 (DEFOPLENGTH JLL (PAR1 PAR2) ((ADRP PAR1) (LTH-JUMP '(15 140) PAR1)))

 (DEFOPCODE JMP (PAR1 PAR2) 
            ((SHORTLABELP PAR1) (OP-JUMP-SHORT '(235) PAR1)) 
            ((INDIRECTADRP PAR1) (OP-JUMP-EFFA '(255 32) PAR1)) 
            ((REGP PAR1) (OP-JUMP-EFFA '(255 32) PAR1)) 
            ((ADRP PAR1) (OP-JUMP '(233) PAR1)))
 (DEFOPLENGTH JMP (PAR1 PAR2) 
              ((SHORTLABELP PAR1) (LTH-JUMP-SHORT '(235) PAR1)) 
              ((INDIRECTADRP PAR1) (LTH-JUMP-EFFA '(255 32) PAR1)) 
              ((REGP PAR1) (LTH-JUMP-EFFA '(255 32) PAR1)) 
              ((ADRP PAR1) (LTH-JUMP '(233) PAR1)))

 (DEFOPCODE JMPL (PAR1 PAR2) ((ADRP PAR1) (OP-JUMP '(233) PAR1)))
 (DEFOPLENGTH JMPL (PAR1 PAR2) ((ADRP PAR1) (LTH-JUMP '(233) PAR1)))

 (DEFOPCODE JNA (PAR1 PAR2) 
            ((SHORTLABELP PAR1) (OP-JUMP-SHORT '(118) PAR1)))
 (DEFOPLENGTH JNA (PAR1 PAR2) 
              ((SHORTLABELP PAR1) (LTH-JUMP-SHORT '(118) PAR1)))

 (DEFOPCODE JNAE (PAR1 PAR2) 
            ((SHORTLABELP PAR1) (OP-JUMP-SHORT '(114) PAR1)))
 (DEFOPLENGTH JNAE (PAR1 PAR2) 
              ((SHORTLABELP PAR1) (LTH-JUMP-SHORT '(114) PAR1)))

 (DEFOPCODE JNAEL (PAR1 PAR2) ((ADRP PAR1) (OP-JUMP '(15 130) PAR1)))
 (DEFOPLENGTH JNAEL (PAR1 PAR2) ((ADRP PAR1) (LTH-JUMP '(15 130) PAR1)))

 (DEFOPCODE JNAL (PAR1 PAR2) ((ADRP PAR1) (OP-JUMP '(15 134) PAR1)))
 (DEFOPLENGTH JNAL (PAR1 PAR2) ((ADRP PAR1) (LTH-JUMP '(15 134) PAR1)))

 (DEFOPCODE JNB (PAR1 PAR2) 
            ((SHORTLABELP PAR1) (OP-JUMP-SHORT '(115) PAR1)))
 (DEFOPLENGTH JNB (PAR1 PAR2) 
              ((SHORTLABELP PAR1) (LTH-JUMP-SHORT '(115) PAR1)))

 (DEFOPCODE JNBE (PAR1 PAR2) 
            ((SHORTLABELP PAR1) (OP-JUMP-SHORT '(119) PAR1)))
 (DEFOPLENGTH JNBE (PAR1 PAR2) 
              ((SHORTLABELP PAR1) (LTH-JUMP-SHORT '(119) PAR1)))

 (DEFOPCODE JNBEL (PAR1 PAR2) ((ADRP PAR1) (OP-JUMP '(15 135) PAR1)))
 (DEFOPLENGTH JNBEL (PAR1 PAR2) ((ADRP PAR1) (LTH-JUMP '(15 135) PAR1)))

 (DEFOPCODE JNBL (PAR1 PAR2) ((ADRP PAR1) (OP-JUMP '(15 131) PAR1)))
 (DEFOPLENGTH JNBL (PAR1 PAR2) ((ADRP PAR1) (LTH-JUMP '(15 131) PAR1)))

 (DEFOPCODE JNE (PAR1 PAR2) 
            ((SHORTLABELP PAR1) (OP-JUMP-SHORT '(117) PAR1)))
 (DEFOPLENGTH JNE (PAR1 PAR2) 
              ((SHORTLABELP PAR1) (LTH-JUMP-SHORT '(117) PAR1)))

 (DEFOPCODE JNEL (PAR1 PAR2) ((ADRP PAR1) (OP-JUMP '(15 133) PAR1)))
 (DEFOPLENGTH JNEL (PAR1 PAR2) ((ADRP PAR1) (LTH-JUMP '(15 133) PAR1)))

 (DEFOPCODE JNG (PAR1 PAR2) 
            ((SHORTLABELP PAR1) (OP-JUMP-SHORT '(126) PAR1)))
 (DEFOPLENGTH JNG (PAR1 PAR2) 
              ((SHORTLABELP PAR1) (LTH-JUMP-SHORT '(126) PAR1)))

 (DEFOPCODE JNGE (PAR1 PAR2) 
            ((SHORTLABELP PAR1) (OP-JUMP-SHORT '(124) PAR1)))
 (DEFOPLENGTH JNGE (PAR1 PAR2) 
              ((SHORTLABELP PAR1) (LTH-JUMP-SHORT '(124) PAR1)))

 (DEFOPCODE JNGEL (PAR1 PAR2) ((ADRP PAR1) (OP-JUMP '(15 140) PAR1)))
 (DEFOPLENGTH JNGEL (PAR1 PAR2) ((ADRP PAR1) (LTH-JUMP '(15 140) PAR1)))

 (DEFOPCODE JNGL (PAR1 PAR2) ((ADRP PAR1) (OP-JUMP '(15 142) PAR1)))
 (DEFOPLENGTH JNGL (PAR1 PAR2) ((ADRP PAR1) (LTH-JUMP '(15 142) PAR1)))

 (DEFOPCODE JNL (PAR1 PAR2) 
            ((SHORTLABELP PAR1) (OP-JUMP-SHORT '(125) PAR1)))
 (DEFOPLENGTH JNL (PAR1 PAR2) 
              ((SHORTLABELP PAR1) (LTH-JUMP-SHORT '(125) PAR1)))

 (DEFOPCODE JNLE (PAR1 PAR2) 
            ((SHORTLABELP PAR1) (OP-JUMP-SHORT '(127) PAR1)))
 (DEFOPLENGTH JNLE (PAR1 PAR2) 
              ((SHORTLABELP PAR1) (LTH-JUMP-SHORT '(127) PAR1)))

 (DEFOPCODE JNLEL (PAR1 PAR2) ((ADRP PAR1) (OP-JUMP '(15 143) PAR1)))
 (DEFOPLENGTH JNLEL (PAR1 PAR2) ((ADRP PAR1) (LTH-JUMP '(15 143) PAR1)))

 (DEFOPCODE JNLL (PAR1 PAR2) ((ADRP PAR1) (OP-JUMP '(15 141) PAR1)))
 (DEFOPLENGTH JNLL (PAR1 PAR2) ((ADRP PAR1) (LTH-JUMP '(15 141) PAR1)))

 (DEFOPCODE JNO (PAR1 PAR2) 
            ((SHORTLABELP PAR1) (OP-JUMP-SHORT '(113) PAR1)))
 (DEFOPLENGTH JNO (PAR1 PAR2) 
              ((SHORTLABELP PAR1) (LTH-JUMP-SHORT '(113) PAR1)))

 (DEFOPCODE JNOL (PAR1 PAR2) ((ADRP PAR1) (OP-JUMP '(15 129) PAR1)))
 (DEFOPLENGTH JNOL (PAR1 PAR2) ((ADRP PAR1) (LTH-JUMP '(15 129) PAR1)))

 (DEFOPCODE JNP (PAR1 PAR2) 
            ((SHORTLABELP PAR1) (OP-JUMP-SHORT '(123) PAR1)))
 (DEFOPLENGTH JNP (PAR1 PAR2) 
              ((SHORTLABELP PAR1) (LTH-JUMP-SHORT '(123) PAR1)))

 (DEFOPCODE JNPL (PAR1 PAR2) ((ADRP PAR1) (OP-JUMP '(15 139) PAR1)))
 (DEFOPLENGTH JNPL (PAR1 PAR2) ((ADRP PAR1) (LTH-JUMP '(15 139) PAR1)))

 (DEFOPCODE JNS (PAR1 PAR2) 
            ((SHORTLABELP PAR1) (OP-JUMP-SHORT '(121) PAR1)))
 (DEFOPLENGTH JNS (PAR1 PAR2) 
              ((SHORTLABELP PAR1) (LTH-JUMP-SHORT '(121) PAR1)))

 (DEFOPCODE JNSL (PAR1 PAR2) ((ADRP PAR1) (OP-JUMP '(15 137) PAR1)))
 (DEFOPLENGTH JNSL (PAR1 PAR2) ((ADRP PAR1) (LTH-JUMP '(15 137) PAR1)))

 (DEFOPCODE JNZ (PAR1 PAR2) 
            ((SHORTLABELP PAR1) (OP-JUMP-SHORT '(117) PAR1)))
 (DEFOPLENGTH JNZ (PAR1 PAR2) 
              ((SHORTLABELP PAR1) (LTH-JUMP-SHORT '(117) PAR1)))

 (DEFOPCODE JNZL (PAR1 PAR2) ((ADRP PAR1) (OP-JUMP '(15 133) PAR1)))
 (DEFOPLENGTH JNZL (PAR1 PAR2) ((ADRP PAR1) (LTH-JUMP '(15 133) PAR1)))

 (DEFOPCODE JO (PAR1 PAR2) 
            ((SHORTLABELP PAR1) (OP-JUMP-SHORT '(112) PAR1)))
 (DEFOPLENGTH JO (PAR1 PAR2) 
              ((SHORTLABELP PAR1) (LTH-JUMP-SHORT '(112) PAR1)))

 (DEFOPCODE JOL (PAR1 PAR2) ((ADRP PAR1) (OP-JUMP '(15 128) PAR1)))
 (DEFOPLENGTH JOL (PAR1 PAR2) ((ADRP PAR1) (LTH-JUMP '(15 128) PAR1)))

 (DEFOPCODE JP (PAR1 PAR2) 
            ((SHORTLABELP PAR1) (OP-JUMP-SHORT '(122) PAR1)))
 (DEFOPLENGTH JP (PAR1 PAR2) 
              ((SHORTLABELP PAR1) (LTH-JUMP-SHORT '(122) PAR1)))

 (DEFOPCODE JPE (PAR1 PAR2) 
            ((SHORTLABELP PAR1) (OP-JUMP-SHORT '(122) PAR1)))
 (DEFOPLENGTH JPE (PAR1 PAR2) 
              ((SHORTLABELP PAR1) (LTH-JUMP-SHORT '(122) PAR1)))

 (DEFOPCODE JPEL (PAR1 PAR2) ((ADRP PAR1) (OP-JUMP '(15 138) PAR1)))
 (DEFOPLENGTH JPEL (PAR1 PAR2) ((ADRP PAR1) (LTH-JUMP '(15 138) PAR1)))

 (DEFOPCODE JPL (PAR1 PAR2) ((ADRP PAR1) (OP-JUMP '(15 138) PAR1)))
 (DEFOPLENGTH JPL (PAR1 PAR2) ((ADRP PAR1) (LTH-JUMP '(15 138) PAR1)))

 (DEFOPCODE JPO (PAR1 PAR2) 
            ((SHORTLABELP PAR1) (OP-JUMP-SHORT '(123) PAR1)))
 (DEFOPLENGTH JPO (PAR1 PAR2) 
              ((SHORTLABELP PAR1) (LTH-JUMP-SHORT '(123) PAR1)))

 (DEFOPCODE JPOL (PAR1 PAR2) ((ADRP PAR1) (OP-JUMP '(15 139) PAR1)))
 (DEFOPLENGTH JPOL (PAR1 PAR2) ((ADRP PAR1) (LTH-JUMP '(15 139) PAR1)))

 (DEFOPCODE JS (PAR1 PAR2) 
            ((SHORTLABELP PAR1) (OP-JUMP-SHORT '(120) PAR1)))
 (DEFOPLENGTH JS (PAR1 PAR2) 
              ((SHORTLABELP PAR1) (LTH-JUMP-SHORT '(120) PAR1)))

 (DEFOPCODE JSL (PAR1 PAR2) ((ADRP PAR1) (OP-JUMP '(15 136) PAR1)))
 (DEFOPLENGTH JSL (PAR1 PAR2) ((ADRP PAR1) (LTH-JUMP '(15 136) PAR1)))

 (DEFOPCODE JZ (PAR1 PAR2) 
            ((SHORTLABELP PAR1) (OP-JUMP-SHORT '(116) PAR1)))
 (DEFOPLENGTH JZ (PAR1 PAR2) 
              ((SHORTLABELP PAR1) (LTH-JUMP-SHORT '(116) PAR1)))

 (DEFOPCODE JZL (PAR1 PAR2) ((ADRP PAR1) (OP-JUMP '(15 132) PAR1)))
 (DEFOPLENGTH JZL (PAR1 PAR2) ((ADRP PAR1) (LTH-JUMP '(15 132) PAR1)))

 (DEFOPCODE LEA (PAR1 PAR2) 
            ((AND (EFFAP PAR1) (REGP PAR2)) (OP-REG-EFFA '(141) PAR2 PAR1)) 
            ((AND (ADRP PAR1) (REGP PAR2)) (OP-REG-EFFA '(141) PAR2 PAR1)))
 (DEFOPLENGTH LEA (PAR1 PAR2) 
              ((AND (EFFAP PAR1) (REGP PAR2)) 
               (LTH-REG-EFFA '(141) PAR2 PAR1))
              ((AND (ADRP PAR1) (REGP PAR2)) 
               (LTH-REG-EFFA '(141) PAR2 PAR1)))

 (DEFOPCODE LEAVE (PAR1 PAR2) (T (OP-BYTE '(201))))
 (DEFOPLENGTH LEAVE (PAR1 PAR2) (T (LTH-BYTE '(201))))

 (DEFOPCODE MOV (PAR1 PAR2) 
            ((AND (MEMORYP PAR1) (EAXP PAR2)) 
             (OP-MEM-EAX '(161) PAR1 PAR2))
            ((AND (EAXP PAR1) (MEMORYP PAR2)) 
             (OP-MEM-EAX '(163) PAR2 PAR1))
            ((AND (SREGP PAR1) (EFFAP PAR2)) 
             (OP-REG-EFFA '(140) PAR1 PAR2))
            ((AND (EFFAP PAR1) (SREGP PAR2)) 
             (OP-REG-EFFA '(142) PAR2 PAR1))
            ((AND (REGP PAR1) (EFFAP PAR2)) (OP-REG-EFFA '(137) PAR1 PAR2)) 
            ((AND (EFFAP PAR1) (REGP PAR2)) (OP-REG-EFFA '(139) PAR2 PAR1)) 
            ((AND (STDIMMEDIATEP PAR1) (REGP PAR2)) 
             (OP-IMM-REG '(184) PAR1 PAR2))
            ((AND (STDIMMEDIATEP PAR1) (EFFAP PAR2)) 
             (OP-IMM-EFFA '(199 0) PAR1 PAR2))
            ((AND (ADRP PAR1) (REGP PAR2)) (OP-REG-EFFA '(139) PAR2 PAR1)))
 (DEFOPLENGTH MOV (PAR1 PAR2) 
              ((AND (MEMORYP PAR1) (EAXP PAR2)) 
               (LTH-MEM-EAX '(161) PAR1 PAR2))
              ((AND (EAXP PAR1) (MEMORYP PAR2)) 
               (LTH-MEM-EAX '(163) PAR2 PAR1))
              ((AND (SREGP PAR1) (EFFAP PAR2)) 
               (LTH-REG-EFFA '(140) PAR1 PAR2))
              ((AND (EFFAP PAR1) (SREGP PAR2)) 
               (LTH-REG-EFFA '(142) PAR2 PAR1))
              ((AND (REGP PAR1) (EFFAP PAR2)) 
               (LTH-REG-EFFA '(137) PAR1 PAR2))
              ((AND (EFFAP PAR1) (REGP PAR2)) 
               (LTH-REG-EFFA '(139) PAR2 PAR1))
              ((AND (STDIMMEDIATEP PAR1) (REGP PAR2)) 
               (LTH-IMM-REG '(184) PAR1 PAR2))
              ((AND (STDIMMEDIATEP PAR1) (EFFAP PAR2)) 
               (LTH-IMM-EFFA '(199 0) PAR1 PAR2))
              ((AND (ADRP PAR1) (REGP PAR2)) 
               (LTH-REG-EFFA '(139) PAR2 PAR1)))

 (DEFOPCODE MOVB (PAR1 PAR2) 
            ((AND (REGP PAR1) (EFFAP PAR2)) (OP-REG-EFFA '(136) PAR1 PAR2)) 
            ((AND (EFFAP PAR1) (REGP PAR2)) (OP-REG-EFFA '(138) PAR2 PAR1)))
 (DEFOPLENGTH MOVB (PAR1 PAR2) 
              ((AND (REGP PAR1) (EFFAP PAR2)) 
               (LTH-REG-EFFA '(136) PAR1 PAR2))
              ((AND (EFFAP PAR1) (REGP PAR2)) 
               (LTH-REG-EFFA '(138) PAR2 PAR1)))

 (DEFOPCODE MOVSX (PAR1 PAR2) 
            ((AND (REGP PAR1) (REGP PAR2)) 
             (OP-REG-EFFA-2 '(15 191) PAR1 PAR2)))
 (DEFOPLENGTH MOVSX (PAR1 PAR2) 
              ((AND (REGP PAR1) (REGP PAR2)) 
               (LTH-REG-EFFA-2 '(15 191) PAR1 PAR2)))

 (DEFOPCODE MOVW (PAR1 PAR2) 
            ((AND (REGP PAR1) (EFFAP PAR2)) 
             (OP-REG-EFFA-2 '(102 137) PAR1 PAR2))
            ((AND (EFFAP PAR1) (REGP PAR2)) 
             (OP-REG-EFFA-2 '(102 139) PAR2 PAR1)))
 (DEFOPLENGTH MOVW (PAR1 PAR2) 
              ((AND (REGP PAR1) (EFFAP PAR2)) 
               (LTH-REG-EFFA-2 '(102 137) PAR1 PAR2))
              ((AND (EFFAP PAR1) (REGP PAR2)) 
               (LTH-REG-EFFA-2 '(102 139) PAR2 PAR1)))

 (DEFOPCODE MOVZX (PAR1 PAR2) 
            ((AND (REGP PAR1) (REGP PAR2)) 
             (OP-REG-EFFA-2 '(15 183) PAR1 PAR2)))
 (DEFOPLENGTH MOVZX (PAR1 PAR2) 
              ((AND (REGP PAR1) (REGP PAR2)) 
               (LTH-REG-EFFA-2 '(15 183) PAR1 PAR2)))

 (DEFOPCODE MUL (PAR1 PAR2) ((EFFAP PAR1) (OP-MUL '(247 32) PAR1)))
 (DEFOPLENGTH MUL (PAR1 PAR2) ((EFFAP PAR1) (LTH-MUL '(247 32) PAR1)))

 (DEFOPCODE NEG (PAR1 PAR2) ((REGP PAR1) (OP-EFFA '(247 24) PAR1)))
 (DEFOPLENGTH NEG (PAR1 PAR2) ((REGP PAR1) (LTH-EFFA '(247 24) PAR1)))

 (DEFOPCODE NOP (PAR1 PAR2) (T (OP-BYTE '(144))))
 (DEFOPLENGTH NOP (PAR1 PAR2) (T (LTH-BYTE '(144))))

 (DEFOPCODE NOT (PAR1 PAR2) ((REGP PAR1) (OP-EFFA '(247 16) PAR1)))
 (DEFOPLENGTH NOT (PAR1 PAR2) ((REGP PAR1) (LTH-EFFA '(247 16) PAR1)))

 (DEFOPCODE OR (PAR1 PAR2) 
            ((AND (REGP PAR1) (REGP PAR2)) (OP-REG-EFFA '(11) PAR2 PAR1)) 
            ((AND (REGP PAR1) (EFFAP PAR2)) (OP-REG-EFFA '(9) PAR1 PAR2)) 
            ((AND (EFFAP PAR1) (REGP PAR2)) (OP-REG-EFFA '(11) PAR2 PAR1)) 
            ((AND (STDIMMEDIATEP PAR1) (EAXP PAR2)) 
             (OP-IMM-EAX '(13) PAR1 PAR2))
            ((AND (SMALLIMMEDIATEP PAR1) (REGP PAR2)) 
             (OP-IMM8-EFFA '(131 8) PAR1 PAR2))
            ((AND (STDIMMEDIATEP PAR1) (REGP PAR2)) 
             (OP-IMM-EFFA '(129 8) PAR1 PAR2)))
 (DEFOPLENGTH OR (PAR1 PAR2) 
              ((AND (REGP PAR1) (REGP PAR2)) 
               (LTH-REG-EFFA '(11) PAR2 PAR1))
              ((AND (REGP PAR1) (EFFAP PAR2)) 
               (LTH-REG-EFFA '(9) PAR1 PAR2))
              ((AND (EFFAP PAR1) (REGP PAR2)) 
               (LTH-REG-EFFA '(11) PAR2 PAR1))
              ((AND (STDIMMEDIATEP PAR1) (EAXP PAR2)) 
               (LTH-IMM-EAX '(13) PAR1 PAR2))
              ((AND (SMALLIMMEDIATEP PAR1) (REGP PAR2)) 
               (LTH-IMM8-EFFA '(131 8) PAR1 PAR2))
              ((AND (STDIMMEDIATEP PAR1) (REGP PAR2)) 
               (LTH-IMM-EFFA '(129 8) PAR1 PAR2)))

 (DEFOPCODE OS: (PAR1 PAR2) (T (OP-BYTE '(102))))
 (DEFOPLENGTH OS: (PAR1 PAR2) (T (LTH-BYTE '(102))))

 (DEFOPCODE POP (PAR1 PAR2) ((REGP PAR1) (OP-PUSH-REG '(88) PAR1)) 
            ((EFFAP PAR1) (OP-EFFA '(143 0) PAR1)))
 (DEFOPLENGTH POP (PAR1 PAR2) ((REGP PAR1) (LTH-PUSH-REG '(88) PAR1)) 
              ((EFFAP PAR1) (LTH-EFFA '(143 0) PAR1)))

 (DEFOPCODE POPFD (PAR1 PAR2) (T (OP-BYTE '(157))))
 (DEFOPLENGTH POPFD (PAR1 PAR2) (T (LTH-BYTE '(157))))

 (DEFOPCODE PUSH (PAR1 PAR2) ((REGP PAR1) (OP-PUSH-REG '(80) PAR1)) 
            ((EFFAP PAR1) (OP-EFFA '(255 48) PAR1)) 
            ((STDIMMEDIATEP PAR1) (OP-IMM '(104) PAR1)))
 (DEFOPLENGTH PUSH (PAR1 PAR2) ((REGP PAR1) (LTH-PUSH-REG '(80) PAR1)) 
              ((EFFAP PAR1) (LTH-EFFA '(255 48) PAR1)) 
              ((STDIMMEDIATEP PAR1) (LTH-IMM '(104) PAR1)))

 (DEFOPCODE PUSHFD (PAR1 PAR2) (T (OP-BYTE '(156))))
 (DEFOPLENGTH PUSHFD (PAR1 PAR2) (T (LTH-BYTE '(156))))

 (DEFOPCODE RCL (PAR1 PAR2) 
            ((AND (EQUAL '1 PAR1) (REGP PAR2)) (OP-SHIFT '(209 16) PAR2)) 
            ((AND (EQUAL '(REG CL) PAR1) (REGP PAR2)) 
             (OP-SHIFT '(211 16) PAR2))
            ((AND (STDIMMEDIATEP PAR1) (REGP PAR2)) 
             (OP-SHIFTIMM '(193 16) PAR1 PAR2)))
 (DEFOPLENGTH RCL (PAR1 PAR2) 
              ((AND (EQUAL '1 PAR1) (REGP PAR2)) 
               (LTH-SHIFT '(209 16) PAR2))
              ((AND (EQUAL '(REG CL) PAR1) (REGP PAR2)) 
               (LTH-SHIFT '(211 16) PAR2))
              ((AND (STDIMMEDIATEP PAR1) (REGP PAR2)) 
               (LTH-SHIFTIMM '(193 16) PAR1 PAR2)))

 (DEFOPCODE RCR (PAR1 PAR2) 
            ((AND (EQUAL '1 PAR1) (REGP PAR2)) (OP-SHIFT '(209 24) PAR2)) 
            ((AND (EQUAL '(REG CL) PAR1) (REGP PAR2)) 
             (OP-SHIFT '(211 24) PAR2))
            ((AND (STDIMMEDIATEP PAR1) (REGP PAR2)) 
             (OP-SHIFTIMM '(193 24) PAR1 PAR2)))
 (DEFOPLENGTH RCR (PAR1 PAR2) 
              ((AND (EQUAL '1 PAR1) (REGP PAR2)) 
               (LTH-SHIFT '(209 24) PAR2))
              ((AND (EQUAL '(REG CL) PAR1) (REGP PAR2)) 
               (LTH-SHIFT '(211 24) PAR2))
              ((AND (STDIMMEDIATEP PAR1) (REGP PAR2)) 
               (LTH-SHIFTIMM '(193 24) PAR1 PAR2)))

 (DEFOPCODE RET (PAR1 PAR2) 
            ((SMALLIMMEDIATEP PAR1) (OP-RET-N '(194) PAR1)) 
            (T (OP-BYTE '(195))))
 (DEFOPLENGTH RET (PAR1 PAR2) 
              ((SMALLIMMEDIATEP PAR1) (LTH-RET-N '(194) PAR1)) 
              (T (LTH-BYTE '(195))))

 (DEFOPCODE ROL (PAR1 PAR2) 
            ((AND (EQUAL '1 PAR1) (REGP PAR2)) (OP-SHIFT '(209 0) PAR2)) 
            ((AND (EQUAL '(REG CL) PAR1) (REGP PAR2)) 
             (OP-SHIFT '(211 0) PAR2))
            ((AND (STDIMMEDIATEP PAR1) (REGP PAR2)) 
             (OP-SHIFTIMM '(193 0) PAR1 PAR2)))
 (DEFOPLENGTH ROL (PAR1 PAR2) 
              ((AND (EQUAL '1 PAR1) (REGP PAR2)) (LTH-SHIFT '(209 0) PAR2)) 
              ((AND (EQUAL '(REG CL) PAR1) (REGP PAR2)) 
               (LTH-SHIFT '(211 0) PAR2))
              ((AND (STDIMMEDIATEP PAR1) (REGP PAR2)) 
               (LTH-SHIFTIMM '(193 0) PAR1 PAR2)))

 (DEFOPCODE ROR (PAR1 PAR2) 
            ((AND (EQUAL '1 PAR1) (REGP PAR2)) (OP-SHIFT '(209 8) PAR2)) 
            ((AND (EQUAL '(REG CL) PAR1) (REGP PAR2)) 
             (OP-SHIFT '(211 8) PAR2))
            ((AND (STDIMMEDIATEP PAR1) (REGP PAR2)) 
             (OP-SHIFTIMM '(193 8) PAR1 PAR2)))
 (DEFOPLENGTH ROR (PAR1 PAR2) 
              ((AND (EQUAL '1 PAR1) (REGP PAR2)) (LTH-SHIFT '(209 8) PAR2)) 
              ((AND (EQUAL '(REG CL) PAR1) (REGP PAR2)) 
               (LTH-SHIFT '(211 8) PAR2))
              ((AND (STDIMMEDIATEP PAR1) (REGP PAR2)) 
               (LTH-SHIFTIMM '(193 8) PAR1 PAR2)))

 (DEFOPCODE SAHF (PAR1 PAR2) (T (OP-BYTE '(158))))
 (DEFOPLENGTH SAHF (PAR1 PAR2) (T (LTH-BYTE '(158))))

 (DEFOPCODE SAL (PAR1 PAR2) 
            ((AND (EQUAL '1 PAR1) (REGP PAR2)) (OP-SHIFT '(209 32) PAR2)) 
            ((AND (EQUAL '(REG CL) PAR1) (REGP PAR2)) 
             (OP-SHIFT '(211 32) PAR2))
            ((AND (STDIMMEDIATEP PAR1) (REGP PAR2)) 
             (OP-SHIFTIMM '(193 32) PAR1 PAR2)))
 (DEFOPLENGTH SAL (PAR1 PAR2) 
              ((AND (EQUAL '1 PAR1) (REGP PAR2)) 
               (LTH-SHIFT '(209 32) PAR2))
              ((AND (EQUAL '(REG CL) PAR1) (REGP PAR2)) 
               (LTH-SHIFT '(211 32) PAR2))
              ((AND (STDIMMEDIATEP PAR1) (REGP PAR2)) 
               (LTH-SHIFTIMM '(193 32) PAR1 PAR2)))

 (DEFOPCODE SAR (PAR1 PAR2) 
            ((AND (EQUAL '1 PAR1) (REGP PAR2)) (OP-SHIFT '(209 56) PAR2)) 
            ((AND (EQUAL '(REG CL) PAR1) (REGP PAR2)) 
             (OP-SHIFT '(211 56) PAR2))
            ((AND (STDIMMEDIATEP PAR1) (REGP PAR2)) 
             (OP-SHIFTIMM '(193 56) PAR1 PAR2)))
 (DEFOPLENGTH SAR (PAR1 PAR2) 
              ((AND (EQUAL '1 PAR1) (REGP PAR2)) 
               (LTH-SHIFT '(209 56) PAR2))
              ((AND (EQUAL '(REG CL) PAR1) (REGP PAR2)) 
               (LTH-SHIFT '(211 56) PAR2))
              ((AND (STDIMMEDIATEP PAR1) (REGP PAR2)) 
               (LTH-SHIFTIMM '(193 56) PAR1 PAR2)))

 (DEFOPCODE SBB (PAR1 PAR2) 
            ((AND (REGP PAR1) (EFFAP PAR2)) (OP-REG-EFFA '(25) PAR1 PAR2)) 
            ((AND (EFFAP PAR1) (REGP PAR2)) (OP-REG-EFFA '(27) PAR2 PAR1)) 
            ((AND (STDIMMEDIATEP PAR1) (EAXP PAR2)) 
             (OP-IMM-EAX '(29) PAR1 PAR2))
            ((AND (SMALLIMMEDIATEP PAR1) (REGP PAR2)) 
             (OP-IMM8-EFFA '(131 24) PAR1 PAR2))
            ((AND (STDIMMEDIATEP PAR1) (EFFAP PAR2)) 
             (OP-IMM-EFFA '(129 24) PAR1 PAR2)))
 (DEFOPLENGTH SBB (PAR1 PAR2) 
              ((AND (REGP PAR1) (EFFAP PAR2)) 
               (LTH-REG-EFFA '(25) PAR1 PAR2))
              ((AND (EFFAP PAR1) (REGP PAR2)) 
               (LTH-REG-EFFA '(27) PAR2 PAR1))
              ((AND (STDIMMEDIATEP PAR1) (EAXP PAR2)) 
               (LTH-IMM-EAX '(29) PAR1 PAR2))
              ((AND (SMALLIMMEDIATEP PAR1) (REGP PAR2)) 
               (LTH-IMM8-EFFA '(131 24) PAR1 PAR2))
              ((AND (STDIMMEDIATEP PAR1) (EFFAP PAR2)) 
               (LTH-IMM-EFFA '(129 24) PAR1 PAR2)))

 (DEFOPCODE SETC (PAR1 PAR2) ((EFFAP PAR1) (OP2-EFFA '(15 146 0) PAR1)))
 (DEFOPLENGTH SETC (PAR1 PAR2) ((EFFAP PAR1) (LTH2-EFFA '(15 146 0) PAR1)))

 (DEFOPCODE SHL (PAR1 PAR2) 
            ((AND (EQUAL '1 PAR1) (REGP PAR2)) (OP-SHIFT '(209 32) PAR2)) 
            ((AND (EQUAL '(REG CL) PAR1) (REGP PAR2)) 
             (OP-SHIFT '(211 32) PAR2))
            ((AND (STDIMMEDIATEP PAR1) (REGP PAR2)) 
             (OP-SHIFTIMM '(193 32) PAR1 PAR2)))
 (DEFOPLENGTH SHL (PAR1 PAR2) 
              ((AND (EQUAL '1 PAR1) (REGP PAR2)) 
               (LTH-SHIFT '(209 32) PAR2))
              ((AND (EQUAL '(REG CL) PAR1) (REGP PAR2)) 
               (LTH-SHIFT '(211 32) PAR2))
              ((AND (STDIMMEDIATEP PAR1) (REGP PAR2)) 
               (LTH-SHIFTIMM '(193 32) PAR1 PAR2)))

 (DEFOPCODE SHLD (PAR1 PAR2) 
            ((AND (STDIMMEDIATEP PAR1) (EFFAP PAR2)) 
             (OP-DSHIFTIMM '(15 164) PAR1 PAR2))
            ((AND (EQUAL '(REG CL) PAR1) (EFFAP PAR2)) 
             (OP-DSHIFT '(15 165) PAR2)))
 (DEFOPLENGTH SHLD (PAR1 PAR2) 
              ((AND (STDIMMEDIATEP PAR1) (EFFAP PAR2)) 
               (LTH-DSHIFTIMM '(15 164) PAR1 PAR2))
              ((AND (EQUAL '(REG CL) PAR1) (EFFAP PAR2)) 
               (LTH-DSHIFT '(15 165) PAR2)))

 (DEFOPCODE SHR (PAR1 PAR2) 
            ((AND (EQUAL '1 PAR1) (REGP PAR2)) (OP-SHIFT '(209 40) PAR2)) 
            ((AND (EQUAL '(REG CL) PAR1) (REGP PAR2)) 
             (OP-SHIFT '(211 40) PAR2))
            ((AND (STDIMMEDIATEP PAR1) (REGP PAR2)) 
             (OP-SHIFTIMM '(193 40) PAR1 PAR2)))
 (DEFOPLENGTH SHR (PAR1 PAR2) 
              ((AND (EQUAL '1 PAR1) (REGP PAR2)) 
               (LTH-SHIFT '(209 40) PAR2))
              ((AND (EQUAL '(REG CL) PAR1) (REGP PAR2)) 
               (LTH-SHIFT '(211 40) PAR2))
              ((AND (STDIMMEDIATEP PAR1) (REGP PAR2)) 
               (LTH-SHIFTIMM '(193 40) PAR1 PAR2)))

 (DEFOPCODE SHRD (PAR1 PAR2) 
            ((AND (STDIMMEDIATEP PAR1) (EFFAP PAR2)) 
             (OP-DSHIFTIMM '(15 172) PAR1 PAR2))
            ((AND (EQUAL '(REG CL) PAR1) (EFFAP PAR2)) 
             (OP-DSHIFT '(15 173) PAR2)))
 (DEFOPLENGTH SHRD (PAR1 PAR2) 
              ((AND (STDIMMEDIATEP PAR1) (EFFAP PAR2)) 
               (LTH-DSHIFTIMM '(15 172) PAR1 PAR2))
              ((AND (EQUAL '(REG CL) PAR1) (EFFAP PAR2)) 
               (LTH-DSHIFT '(15 173) PAR2)))

 (DEFOPCODE SS: (PAR1 PAR2) (T (OP-BYTE '(54))))
 (DEFOPLENGTH SS: (PAR1 PAR2) (T (LTH-BYTE '(54))))

 (DEFOPCODE SUB (PAR1 PAR2) 
            ((AND (REGP PAR1) (EFFAP PAR2)) (OP-REG-EFFA '(41) PAR1 PAR2)) 
            ((AND (EFFAP PAR1) (REGP PAR2)) (OP-REG-EFFA '(43) PAR2 PAR1)) 
            ((AND (STDIMMEDIATEP PAR1) (EAXP PAR2)) 
             (OP-IMM-EAX '(45) PAR1 PAR2))
            ((AND (SMALLIMMEDIATEP PAR1) (REGP PAR2)) 
             (OP-IMM8-EFFA '(131 40) PAR1 PAR2))
            ((AND (STDIMMEDIATEP PAR1) (EFFAP PAR2)) 
             (OP-IMM-EFFA '(129 40) PAR1 PAR2)))
 (DEFOPLENGTH SUB (PAR1 PAR2) 
              ((AND (REGP PAR1) (EFFAP PAR2)) 
               (LTH-REG-EFFA '(41) PAR1 PAR2))
              ((AND (EFFAP PAR1) (REGP PAR2)) 
               (LTH-REG-EFFA '(43) PAR2 PAR1))
              ((AND (STDIMMEDIATEP PAR1) (EAXP PAR2)) 
               (LTH-IMM-EAX '(45) PAR1 PAR2))
              ((AND (SMALLIMMEDIATEP PAR1) (REGP PAR2)) 
               (LTH-IMM8-EFFA '(131 40) PAR1 PAR2))
              ((AND (STDIMMEDIATEP PAR1) (EFFAP PAR2)) 
               (LTH-IMM-EFFA '(129 40) PAR1 PAR2)))

 (DEFOPCODE WAIT (PAR1 PAR2) (T (OP-BYTE '(155))))
 (DEFOPLENGTH WAIT (PAR1 PAR2) (T (LTH-BYTE '(155))))

 (DEFOPCODE XCHG (PAR1 PAR2) 
            ((AND (REGP PAR1) (EAXP PAR2)) (OP-PUSH-REG '(144) PAR1 PAR2)) 
            ((AND (EAXP PAR1) (REGP PAR2)) (OP-PUSH-REG '(144) PAR2 PAR1)) 
            ((AND (EFFAP PAR1) (REGP PAR2)) (OP-REG-EFFA '(135) PAR1 PAR2)) 
            ((AND (REGP PAR1) (EFFAP PAR2)) (OP-REG-EFFA '(135) PAR2 PAR1)))
 (DEFOPLENGTH XCHG (PAR1 PAR2) 
              ((AND (REGP PAR1) (EAXP PAR2)) 
               (LTH-PUSH-REG '(144) PAR1 PAR2))
              ((AND (EAXP PAR1) (REGP PAR2)) 
               (LTH-PUSH-REG '(144) PAR2 PAR1))
              ((AND (EFFAP PAR1) (REGP PAR2)) 
               (LTH-REG-EFFA '(135) PAR1 PAR2))
              ((AND (REGP PAR1) (EFFAP PAR2)) 
               (LTH-REG-EFFA '(135) PAR2 PAR1)))

 (DEFOPCODE XOR (PAR1 PAR2) 
            ((AND (REGP PAR1) (REGP PAR2)) (OP-REG-EFFA '(51) PAR2 PAR1)) 
            ((AND (REGP PAR1) (EFFAP PAR2)) (OP-REG-EFFA '(49) PAR1 PAR2)) 
            ((AND (EFFAP PAR1) (REGP PAR2)) (OP-REG-EFFA '(51) PAR2 PAR1)) 
            ((AND (STDIMMEDIATEP PAR1) (EAXP PAR2)) 
             (OP-IMM-EAX '(53) PAR1 PAR2))
            ((AND (SMALLIMMEDIATEP PAR1) (REGP PAR2)) 
             (OP-IMM8-EFFA '(131 48) PAR1 PAR2))
            ((AND (STDIMMEDIATEP PAR1) (REGP PAR2)) 
             (OP-IMM-EFFA '(129 48) PAR1 PAR2)))
 (DEFOPLENGTH XOR (PAR1 PAR2) 
              ((AND (REGP PAR1) (REGP PAR2)) 
               (LTH-REG-EFFA '(51) PAR2 PAR1))
              ((AND (REGP PAR1) (EFFAP PAR2)) 
               (LTH-REG-EFFA '(49) PAR1 PAR2))
              ((AND (EFFAP PAR1) (REGP PAR2)) 
               (LTH-REG-EFFA '(51) PAR2 PAR1))
              ((AND (STDIMMEDIATEP PAR1) (EAXP PAR2)) 
               (LTH-IMM-EAX '(53) PAR1 PAR2))
              ((AND (SMALLIMMEDIATEP PAR1) (REGP PAR2)) 
               (LTH-IMM8-EFFA '(131 48) PAR1 PAR2))
              ((AND (STDIMMEDIATEP PAR1) (REGP PAR2)) 
               (LTH-IMM-EFFA '(129 48) PAR1 PAR2)))


